{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/FormElements/PredicateTable.vue?d759","webpack:///./src/App.vue?495c","webpack:///./src/components/NavBar.vue?a038","webpack:///./src/util/enums/languages.js","webpack:///./src/components/Modals/ClearModal.vue?61c1","webpack:///src/components/Modals/ClearModal.vue","webpack:///./src/components/Modals/ClearModal.vue?3e19","webpack:///./src/components/Modals/ClearModal.vue","webpack:///./src/components/Modals/ValidationReportModal.vue?bab9","webpack:///./src/translation/terminology.js","webpack:///./src/util/constants.js","webpack:///./src/config/konvaConfigs.js","webpack:///./src/util/getNonOverlappingCoordinates.js","webpack:///./src/util/traverse.js","webpack:///./src/util/enums/xmlDatatypes.js","webpack:///./src/util/index.js","webpack:///./src/util/urlParser.js","webpack:///./src/util/strings.js","webpack:///src/components/Modals/ValidationReportModal.vue","webpack:///./src/components/Modals/ValidationReportModal.vue?93f8","webpack:///./src/components/Modals/ValidationReportModal.vue","webpack:///./src/components/Modals/PredicateModal.vue?db28","webpack:///./src/util/enums/ValueType.js","webpack:///./src/translation/shaclDictionary.js","webpack:///./src/translation/shaclTranslator.js","webpack:///./src/util/shacl/shaclConstraints.js","webpack:///./src/components/FormElements/PredicateTable.vue?fd3a","webpack:///src/components/FormElements/PredicateTable.vue","webpack:///./src/components/FormElements/PredicateTable.vue?532f","webpack:///./src/components/FormElements/PredicateTable.vue","webpack:///src/components/Modals/PredicateModal.vue","webpack:///./src/components/Modals/PredicateModal.vue?7aae","webpack:///./src/components/Modals/PredicateModal.vue","webpack:///./src/components/Modals/ExportModal.vue?abc4","webpack:///src/components/Modals/ExportModal.vue","webpack:///./src/components/Modals/ExportModal.vue?2016","webpack:///./src/components/Modals/ExportModal.vue","webpack:///./src/components/Modals/PathModal.vue?b7fa","webpack:///src/components/Modals/PathModal.vue","webpack:///./src/components/Modals/PathModal.vue?8491","webpack:///./src/components/Modals/PathModal.vue","webpack:///./src/components/Modals/EditShapeModal.vue?ada3","webpack:///./src/util/enums/isoLangs.js","webpack:///src/components/Modals/EditShapeModal.vue","webpack:///./src/components/Modals/EditShapeModal.vue?27df","webpack:///./src/components/Modals/EditShapeModal.vue","webpack:///./src/components/Modals/NamespaceModal.vue?da03","webpack:///./src/components/FormElements/NamespaceTable.vue?f81a","webpack:///src/components/FormElements/NamespaceTable.vue","webpack:///./src/components/FormElements/NamespaceTable.vue?75ad","webpack:///./src/components/FormElements/NamespaceTable.vue","webpack:///src/components/Modals/NamespaceModal.vue","webpack:///./src/components/Modals/NamespaceModal.vue?43c6","webpack:///./src/components/Modals/NamespaceModal.vue","webpack:///src/components/NavBar.vue","webpack:///./src/components/NavBar.vue?e8e4","webpack:///./src/components/NavBar.vue","webpack:///./src/components/Editor.vue?36c4","webpack:///./src/components/Shapes/Shape.vue?62eb","webpack:///./src/components/Shapes/Constraint.vue?b816","webpack:///src/components/Shapes/Constraint.vue","webpack:///./src/components/Shapes/Constraint.vue?98e8","webpack:///./src/components/Shapes/Constraint.vue","webpack:///src/components/Shapes/Shape.vue","webpack:///./src/components/Shapes/Shape.vue?ddda","webpack:///./src/components/Shapes/Shape.vue","webpack:///./src/components/Shapes/Relationship.vue?1018","webpack:///./src/util/calculations.js","webpack:///src/components/Shapes/Relationship.vue","webpack:///./src/components/Shapes/Relationship.vue?b4e4","webpack:///./src/components/Shapes/Relationship.vue","webpack:///src/components/Editor.vue","webpack:///./src/components/Editor.vue?145f","webpack:///./src/components/Editor.vue","webpack:///./src/components/DataTextView.vue?689d","webpack:///src/components/DataTextView.vue","webpack:///./src/components/DataTextView.vue?06df","webpack:///./src/components/DataTextView.vue","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue","webpack:///./src/util/shacl/shacl.js","webpack:///./src/util/shacl/vocabulary.js","webpack:///./src/translation/translatorManager.js","webpack:///./src/store/modals/predicateModalModule.js","webpack:///./src/store/constraintModule.js","webpack:///./src/store/coordinateModule.js","webpack:///./src/store/shapeModule.js","webpack:///./src/util/enums/extensionToFormat.js","webpack:///./src/parsing/n3Parser.js","webpack:///./src/parsing/xmlParser.js","webpack:///./src/parsing/parserManager.js","webpack:///./src/util/resolveRDFJSTerm.js","webpack:///./src/parsing/n3Serializer.js","webpack:///./src/parsing/xmlSerializer.js","webpack:///./src/parsing/serializerManager.js","webpack:///./src/validation/shaclValidator.js","webpack:///./src/validation/validatorManager.js","webpack:///./src/store/dataModule.js","webpack:///./src/store/modals/namespaceModalModule.js","webpack:///./src/store/configModule.js","webpack:///./src/assets/example.js","webpack:///./src/store/store.js","webpack:///./src/util/emptyState.js","webpack:///./src/store/undoRedoMixin.js","webpack:///./src/main.js","webpack:///./src/App.vue?165b","webpack:///./src/components/FormElements/NamespaceTable.vue?9551","webpack:///./src/components/DataTextView.vue?885d","webpack:///./src/components/NavBar.vue?20a6"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","staticClass","getHeight","staticRenderFns","ref","on","$refs","importShapes","click","_v","staticStyle","$event","readTextFile","importData","uploadDataFile","exportFile","shacl","loadExample","toggleNamespaceModal","createNodeShape","createPropertyShape","dataFileUploaded","validate","_e","_s","$store","state","mData","dataFileName","canClear","toggleClearModal","$root","canUndo","undoOperation","canRedo","redoOperation","pathModal","editing","shapeID","validationReport","mShape","mConstraint","mModal","shapeModal","SHACL","SHEX","model","callback","$$v","$set","expression","isCleared","confirm","mounted","watch","methods","select","option","commit","action","component","preventDefault","toggleModal","conforms","tag","_l","getGeneralReport","getPrefixedUri","getResultsByNode","results","node","shape","cfl","CUSTOM_URI","TERM","AbstractResult","AndConstraintComponent","BlankNode","BlankNodeOrIRI","BlankNodeOrLiteral","ClassConstraintComponent","ClosedConstraintComponent","ConstraintComponent","DatatypeConstraintComponent","DisjointConstraintComponent","EqualsConstraintComponent","ExpressionConstraintComponent","Function","HasValueConstraintComponent","IRI","IRIOrLiteral","InConstraintComponent","Info","JSConstraint","JSConstraintComponent","JSExecutable","JSFunction","JSLibrary","JSRule","JSTarget","JSTargetType","JSValidator","LanguageInConstraintComponent","LessThanConstraintComponent","LessThanOrEqualsConstraintComponent","Literal","MaxCountConstraintComponent","MaxExclusiveConstraintComponent","MaxInclusiveConstraintComponent","MaxLengthConstraintComponent","MinCountConstraintComponent","MinExclusiveConstraintComponent","MinInclusiveConstraintComponent","MinLengthConstraintComponent","NodeConstraintComponent","NodeKind","NodeKindConstraintComponent","NodeShape","NotConstraintComponent","OrConstraintComponent","Parameter","Parameterizable","PatternConstraintComponent","PrefixDeclaration","PropertyConstraintComponent","PropertyGroup","PropertyShape","QualifiedMaxCountConstraintComponent","QualifiedMinCountConstraintComponent","ResultAnnotation","Rule","SPARQLAskExecutable","SPARQLAskValidator","SPARQLConstraint","SPARQLConstraintComponent","SPARQLConstructExecutable","SPARQLExecutable","SPARQLFunction","SPARQLRule","SPARQLSelectExecutable","SPARQLSelectValidator","SPARQLTarget","SPARQLTargetType","SPARQLUpdateExecutable","Severity","Shape","Target","TargetType","TripleRule","UniqueLangConstraintComponent","ValidationReport","ValidationResult","Validator","Violation","Warning","XoneConstraintComponent","alternativePath","and","annotationProperty","annotationValue","annotationVarName","ask","class","closed","condition","construct","datatype","deactivated","declare","defaultValue","description","detail","disjoint","entailment","equals","filterShape","flags","focusNode","group","hasValue","ignoredProperties","in","intersection","inversePath","js","jsFunctionName","jsLibrary","jsLibraryURL","labelTemplate","languageIn","lessThan","lessThanOrEquals","maxCount","maxExclusive","maxInclusive","maxLength","message","minCount","minExclusive","minInclusive","minLength","namespace","nodeKind","nodeValidator","nodes","not","oneOrMorePath","optional","or","order","parameter","path","pattern","predicate","prefix","prefixes","propertyValidator","qualifiedMaxCount","qualifiedMinCount","qualifiedValueShape","qualifiedValueShapesDisjoint","resultAnnotation","resultMessage","resultPath","resultSeverity","returnType","rule","severity","shapesGraph","shapesGraphWellFormed","sourceConstraint","sourceConstraintComponent","sourceShape","sparql","subject","suggestedShapesGraph","target","targetClass","targetNode","targetObjectsOf","targetSubjectsOf","union","uniqueLang","update","validator","xone","zeroOrMorePath","zeroOrOnePath","ENTER","MAX_NUM_OPERATIONS","DEFAULT_BASE_URI","IDENTIFIER","SCHEMA_URI","LABEL","SHACL_URI","SINGLE_ENTRY","IRI_REGEX","RegExp","BLANK_REGEX","IGNORED_PROPERTIES","WIDTH","HEIGHT","MARGIN","MARGIN_TOP","OFFSET","TEXT_OFFSET","MAX_LENGTH","TEXT_SIZE","SMALL_TEXT_SIZE","BUTTON_OFFSET","SHAPE_CONFIG","y","height","width","strokeWidth","NODE_SHAPE_CONFIG","fill","stroke","PROPERTY_SHAPE_CONFIG","DESCRIPTION_RECT_CONFIG","x","CONSTRAINT_SEPARATION_LINE","points","strokewidth","dash","CONSTRAINT_CONFIG","TEXT_CONFIG","align","text","fontSize","LABEL_TEXT_CONFIG","fontStyle","URI_TEXT_CONFIG","CONSTRAINT_TEXT_CONFIG","DESCRIPTION_TITLE_CONFIG","DESCRIPTION_TEXT_CONFIG","BUTTON_CONFIG","radius","DELETE_BUTTON_CONFIG","ADD_PREDICATE_CONFIG","RELATIONSHIP_ARROW_CONFIG","pointerLength","pointerWidth","RELATIONSHIP_LABEL_TEXT_CONFIG","RELATIONSHIP_LABEL_RECT_CONFIG","pointerCursor","document","getElementById","style","cursor","textCursor","resetCursor","coordinates","bottomYs","heights","stageWidth","offsetWidth","yBottomRow","Math","max","bottomRow","deepestY","deepest","rightestX","newLine","traverse","func","args","XML_DATATYPES","string","boolean","decimal","float","double","integer","duration","dateTime","time","date","gYearMonth","gYear","gMonthDay","gDay","gMonth","hexBinary","base64Binary","anyURI","QName","downloadFile","filename","contents","element","createElement","setAttribute","encodeURIComponent","display","body","appendChild","removeChild","groupBy","dictionary","deleteKey","output","e","elem","clone","k","Vue","swapKeyValue","generateUUID","baseURI","require","urlToName","url","substring","uriToPrefix","namespaces","uri","extractUrl","replace","prefixToUri","extractPrefix","chars","isUrl","capitalizeFirstLetter","toUpperCase","abbreviate","half","floor","props","report","required","type","validationNode","generalReport","nodeIDs","getValidationResults","graph","validationResults","getSimpleResults","simple","constr","getters","$props","modalProperties","directives","rawName","values","domProps","composing","table","search","selected","sorting","objects","getType","showDataTypes","getModel","getDataList","handleKeyPress","_q","Array","isArray","_i","$$a","$$el","$$c","checked","$$i","concat","showPaths","getPathOptions","getName","showShapes","getShapeOptions","getOptionID","$$selectedVal","filter","options","map","val","_value","multiple","getDataTypes","input","exit","ValueTypes","ID","VALUE","LIST","ID_LIST","VALUE_LIST","ids","id","valueLists","idLists","getValueType","has","getValueTypeFromConstraint","constraint","MODEL","ShaclTranslator","translate","JSON","parse","dict","translation","index","xs","rv","constraintsWithTypes","comment","definedby","label","json","constraintsByTypes","tableContents","allConstraints","toModelSimple","getConstraintCategory","obj","constraintID","toSHACLSimple","getConstraintValueType","range","setSorting","sortBy","ascending","sortList","filterContents","refInFor","selectConstraint","clicked","String","default","Boolean","sorted","filtered","matches","list","comparePredicates","a","b","compareType","components","category","inputBool","constraintType","error","updateValues","inputWithoutUrl","reset","mConfig","undefined","valueType","finalInput","showCheckbox","toString","inputType","dispatch","onExit","keyCode","showInteger","showString","showOther","pShape","thisPath","paths","exportType","extension","cancel","nativeOn","checkFilename","closeExportModal","bool","operation","test","unique","nodeShape","getLanguageTags","language","getLanguages","isoLangs","ab","nativeName","aa","af","ak","sq","am","ar","an","hy","as","av","ae","ay","az","bm","ba","eu","be","bn","bh","bi","bs","br","bg","my","ca","ch","ce","ny","zh","cv","kw","co","cr","hr","cs","da","dv","nl","en","eo","et","ee","fo","fj","fi","fr","ff","gl","ka","de","el","gn","gu","ht","ha","he","hz","hi","ho","hu","ia","ie","ga","ig","ik","io","is","it","iu","ja","jv","kl","kn","kr","ks","kk","km","ki","rw","ky","kv","kg","ko","ku","kj","la","lb","lg","li","ln","lo","lt","lu","lv","gv","mk","mg","ms","ml","mt","mi","mr","mh","mn","na","nv","nb","nd","ne","ng","nn","no","ii","nr","oc","oj","cu","om","os","pa","pi","fa","pl","ps","pt","qu","rm","rn","ro","ru","sa","sc","sd","se","sm","sg","sr","gd","sn","si","sk","sl","so","st","es","su","sw","ss","sv","ta","te","tg","th","ti","bo","tk","tl","tn","to","tr","ts","tt","tw","ty","ug","uk","ur","uz","ve","vi","vo","wa","cy","wo","fy","xh","yi","yo","za","isoLangsByName","labelLang","descrLang","oldID","modProps","newID","handleConstraint","newValue","addNamespace","validPrefix","validURI","closeModal","tableProperties","editRow","stopEditing","handleKeyUp","updateBaseUri","editingThis","startEditing","isBaseURI","deleteElement","currentBaseURI","created","self","form","scrollTop","editField","newPrefix","oldPrefix","currentPrefix","children","row","field","currentValue","inputField","focus","cell","prefixByURI","getURI","NamespaceTable","NamespaceModal","EditShapeModal","PathModal","ExportModal","ClearModal","SuiDropdownDivider","SuiDropdown","ValidationReportModal","PredicateModal","languages","shex","then","file","dataFile","undo","redo","configKonva","scroll","handleResize","from","onClick","hover","updatePosition","titleHover","shapeConfig","getLabelTextConfig","setCursor","getURITextConfig","hasDescription","getDescriptionConfig","rect","title","deleteNodeConfig","deleteShape","addPredicateConfig","addPredicate","getConstraints","prop","getConfigs","rectangleConfig","hoverKey","keyConfig","canBeDeleted","deleteConstraint","lineConfig","hoverValues","getConstraintValues","getValueConfig","editValue","isListOfValues","getDeleteValueConfig","deleteConstraintValue","valueConfig","deleteConstraintConfig","iter","shapeType","shapes","valueIndex","constraints","joined","getNumConstraintValues","getYValue","mCoordinate","yValues","move","idTextConfig","posRef","lines","shapeConstraints","pos","line","getLabelRectConfig","getButtonConfig","nearestPointOnPerimeter","topLeft","bottomRight","reference","clamp","abs","dl","dr","dt","db","min","lower","upper","distance","x1","y1","x2","y2","sqrt","pow","onClickProps","getEndPoints","xl","xr","start","distLeft","distRight","edges","end","rotation","DEGREES","getNode","configs","transform","invert","relative","innerWidth","innerHeight","stage","addEventListener","subscribe","mutation","updated","layer","zIndex","editorContainer","newWidth","navbar","offsetHeight","$nextTick","evt","getPointerPosition","oldScale","scale","position","newPos","batchDraw","getShapeObjects","dataText","invalidData","dataHasChanged","updateData","updateText","Number","NavBar","Editor","Multipane","MultipaneResizer","DataTextView","onbeforeunload","Types","listDistinctTypes","Dictionary","ShapeFields","findPredicatesWithSubject","PropertyShapeFields","Constraints","findObjectsWithType","findObjectWithId","doc","domain","types","term","removeDuplicates","array","entry","possiblePredicates","possibleObjects","SHACLTranslator","toModel","TranslatorManager","lang","console","log","toSHACL","predicateModalModule","show","mutations","togglePredicateModal","set","sortPredicateModal","selectRow","resetPredicateModal","constraintModule","constraintIndex","setConstraintValue","deleteConstraintFromShape","actions","rootState","shapeWithID","isID","isList","duplicate","root","startConstraintEdit","stopConstraintEdit","rootGetters","updateConstraint","deleteConstraintFromShapeWithID","deleteConstraintValueWithIndex","shapeProperties","propertyObjects","properties","ignored","_state","_getters","_rootState","shapeIDConstraints","vt","shapeIDs","coordinateModule","updateLocations","deleteShapeLocations","updateYValues","item","ValueType","con","updateCoordinates","clearLocations","bottomYCoordinate","allBottomYs","shapeModule","clearModel","setModel","getNonOverlappingCoordinates","toggleEditShapeModal","event","addShape","updateShapeID","updateShape","deleteShapeAtIndex","deletePropertyFromShape","propertyID","addNodeShape","addPropertyShape","editShape","indexWithID","deleteNodeShape","deletePropertyShape","labelsForIds","nodeShapes","propertyShapes","relationships","idConstraints","idValue","ETF","ttl","n3","nq","N3Parser","resolve","quads","N3","format","quad","writer","addQuads","nquads","jsonld","fromRDF","XMLParser","ParserManager","toLowerCase","namedNode","DataFactory","literal","blankNode","defaultGraph","resolveRDFJSTerm","termType","Error","N3Serializer","reject","N3Writer","addQuad","XMLSerializer","SerializerManager","serialize","SHACLValidator","ShaclValidator","ValidatorManager","dataModule","dataFileExtension","showValidationReportModal","toggleValidationReport","clearData","setData","setJsonData","validateWithModel","validateData","reader","FileReader","readAsText","onload","split","pop","newState","setDataFile","alert","uploadSchemaFile","fileExtension","updateModel","validateWithCurrentModel","exportFileWithName","internalModelToJson","err","namespaceModalModule","startEditingNamespace","clearTableEdit","addNewPrefix","configModule","usd","rdf","rdfs","schema","foaf","xsd","ex","skos","ost","org","regorg","person","locn","dcterms","vcard","adms","prov","csvw","gr","muto","acco","oslo","tio","tourism","oh","combust","updateNamespacePrefix","updateNamespaceURI","newURI","addPrefix","deletePrefix","setBaseUri","stopEditingNamespace","uriByPrefix","ordered","exampleData","exampleShapes","use","Vuex","Store","editor","showClearModal","showExportModal","saveOperation","_","setEditor","removeElementFromList","togglePathModal","toggleExportModal","internalModelToTurtle","translateToLanguage","predicates","emptyState","undoRedoMixin","done","undone","newOperation","payload","ops","replaceState","config","productionTip","SuiVue","VueKonva","PortalVue","store","mixins","render","h","App","$mount"],"mappings":"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ItI,EAAK2K,OAOlC,SAASmN,GAAanP,GACnC,OAAI+O,GAAIK,IAAIpP,GAAmByO,GAAWC,GACtCxC,GAAOkD,IAAIpP,GAAmByO,GAAWE,MACzCM,GAAWG,IAAIpP,GAAmByO,GAAWK,WAC7CI,GAAQE,IAAIpP,GAAmByO,GAAWI,aAA9C,EAQK,SAASQ,GAA2BC,GACzC,GAAIA,EAAWtgB,OAAS,EAAG,CACzB,GAAIsgB,EAAWtgB,OAAS,EAAG,OAAOyf,GAAWI,QAE7C,IAAIxd,EAAQie,EAAW,GACvB,GAAIje,EAAM,SAAU,CAElB,GADAA,EAAQA,EAAM,SAAS,GACnBA,EAAM,OAAQ,OAAOod,GAAWI,QACpC,GAAIxd,EAAM,UAAW,OAAOod,GAAWK,eAClC,CACL,GAAIzd,EAAM,OAAQ,OAAOod,GAAWC,GACpC,GAAIrd,EAAM,UAAW,OAAOod,GAAWE,OAG3C,OAAO,K,4HCrFHxF,GAAa,CACjB5T,MAAO,CACL,wDACE,6CACF,gEACE,qDACF,oEACE,yDACF,mDACE,wCACF,wDACE,6CACF,4DACE,iDACF,kEACE,uDACF,wEACE,6DACF,mEACE,wDACF,0EACE,+DACF,qFACE,0EACF,6DACE,kDACF,qEACE,0DACF,8EACE,mEACF,qEACE,0DACF,8EACE,mEACF,mEACE,wDACF,0EACE,+DACF,uEACE,4DACF,kFACE,uEACF,kDACE,uCACF,qEACE,0DACF,8EACE,mEACF,6CACE,kCACF,sDACE,2CACF,+DACE,oDACF,kEACE,uDACF,8CACE,mCACF,sDACE,2CACF,yDACE,8CACF,+DACE,oDACF,sDACE,2CACF,oDACE,yCACF,mDACE,wCACF,gDACE,qCACF,kDACE,uCACF,sDACE,2CACF,qDACE,0CACF,uEACE,4DACF,kFACE,uEACF,qEACE,0DACF,8EACE,mEACF,6EACE,kEACF,8FACE,mFACF,iDACE,sCACF,qEACE,0DACF,8EACE,mEACF,yEACE,8DACF,sFACE,2EACF,yEACE,8DACF,sFACE,2EACF,sEACE,2DACF,gFACE,qEACF,qEACE,0DACF,8EACE,mEACF,yEACE,8DACF,sFACE,2EACF,yEACE,8DACF,sFACE,2EACF,sEACE,2DACF,gFACE,qEACF,iEACE,sDACF,sEACE,2DACF,kDACE,uCACF,qEACE,0DACF,8EACE,mEACF,mDACE,wCACF,gEACE,qDACF,oEACE,yDACF,+DACE,oDACF,kEACE,uDACF,mDACE,wCACF,yDACE,8CACF,oEACE,yDACF,0EACE,+DACF,4EACE,iEACF,2DACE,gDACF,qEACE,0DACF,8EACE,mEACF,uDACE,4CACF,uDACE,4CACF,8EACE,mEACF,gGACE,qFACF,kGACE,uFACF,2GACE,gGACF,8EACE,mEACF,gGACE,qFACF,kGACE,uFACF,2GACE,gGACF,0DACE,+CACF,8CACE,mCACF,6DACE,kDACF,4DACE,iDACF,0DACE,+CACF,mEACE,wDACF,0EACE,+DACF,mEACE,wDACF,0DACE,+CACF,wDACE,6CACF,oDACE,yCACF,gEACE,qDACF,+DACE,oDACF,sDACE,2CACF,0DACE,+CACF,gEACE,qDACF,kDACE,uCACF,+CACE,oCACF,gDACE,qCACF,oDACE,yCACF,oDACE,yCACF,uEACE,4DACF,kFACE,uEACF,0DACE,+CACF,0DACE,+CACF,mDACE,wCACF,mDACE,wCACF,iDACE,sCACF,iEACE,sDACF,sEACE,2DACF,yDACE,8CACF,6CACE,kCACF,4DACE,iDACF,yDACE,8CACF,2DACE,gDACF,6CACE,kCACF,+CACE,oCACF,gDACE,qCACF,mDACE,wCACF,kDACE,uCACF,mDACE,wCACF,kDACE,uCACF,qDACE,0CACF,iDACE,sCACF,sDACE,2CACF,qDACE,0CACF,gDACE,qCACF,kDACE,uCACF,oDACE,yCACF,gDACE,qCACF,oDACE,yCACF,qDACE,0CACF,+CACE,oCACF,mDACE,wCACF,+CACE,oCACF,kDACE,uCACF,2DACE,gDACF,4CACE,iCACF,sDACE,2CACF,qDACE,0CACF,4CACE,iCACF,wDACE,6CACF,mDACE,wCACF,sDACE,2CACF,uDACE,4CACF,oDACE,yCACF,kDACE,uCACF,0DACE,+CACF,kDACE,uCACF,sDACE,2CACF,sDACE,2CACF,mDACE,wCACF,iDACE,sCACF,kDACE,uCACF,sDACE,2CACF,sDACE,2CACF,mDACE,wCACF,8CACE,mCACF,mDACE,wCACF,8CACE,mCACF,kDACE,uCACF,uDACE,4CACF,+CACE,oCACF,6CACE,kCACF,gDACE,qCACF,uDACE,4CACF,kDACE,uCACF,4CACE,iCACF,+CACE,oCACF,mDACE,wCACF,8CACE,mCACF,iDACE,sCACF,mDACE,wCACF,gDACE,qCACF,kDACE,uCACF,kDACE,uCACF,2DACE,gDACF,2DACE,gDACF,2DACE,gDACF,6DACE,kDACF,sEACE,2DACF,gDACE,qCACF,0DACE,+CACF,uDACE,4CACF,oDACE,yCACF,wDACE,6CACF,oDACE,yCACF,8CACE,mCACF,gDACE,qCACF,kDACE,uCACF,qDACE,0CACF,+DACE,oDACF,0DACE,+CACF,mEACE,wDACF,qDACE,0CACF,gDACE,qCACF,iDACE,sCACF,8DACE,mDACF,gDACE,qCACF,qDACE,0CACF,oDACE,yCACF,yDACE,8CACF,0DACE,+CACF,8CACE,mCACF,+CACE,oCACF,oDACE,yCACF,gDACE,qCACF,mDACE,wCACF,+CACE,oCACF,8CACE,mCACF,wDACE,6CACF,uDACE,6CAEJga,MAAO,CACL,6CACE,wDACF,qDACE,gEACF,yDACE,oEACF,wCACE,mDACF,6CACE,wDACF,iDACE,4DACF,uDACE,kEACF,6DACE,wEACF,wDACE,mEACF,+DACE,0EACF,0EACE,qFACF,kDACE,6DACF,0DACE,qEACF,mEACE,8EACF,0DACE,qEACF,mEACE,8EACF,wDACE,mEACF,+DACE,0EACF,4DACE,uEACF,uEACE,kFACF,uCACE,kDACF,0DACE,qEACF,mEACE,8EACF,kCACE,6CACF,2CACE,sDACF,oDACE,+DACF,uDACE,kEACF,mCACE,8CACF,2CACE,sDACF,8CACE,yDACF,oDACE,+DACF,2CACE,sDACF,yCACE,oDACF,wCACE,mDACF,qCACE,gDACF,uCACE,kDACF,2CACE,sDACF,0CACE,qDACF,4DACE,uEACF,uEACE,kFACF,0DACE,qEACF,mEACE,8EACF,kEACE,6EACF,mFACE,8FACF,sCACE,iDACF,0DACE,qEACF,mEACE,8EACF,8DACE,yEACF,2EACE,sFACF,8DACE,yEACF,2EACE,sFACF,2DACE,sEACF,qEACE,gFACF,0DACE,qEACF,mEACE,8EACF,8DACE,yEACF,2EACE,sFACF,8DACE,yEACF,2EACE,sFACF,2DACE,sEACF,qEACE,gFACF,sDACE,iEACF,2DACE,sEACF,uCACE,kDACF,0DACE,qEACF,mEACE,8EACF,wCACE,mDACF,qDACE,gEACF,yDACE,oEACF,oDACE,+DACF,uDACE,kEACF,wCACE,mDACF,8CACE,yDACF,yDACE,oEACF,+DACE,0EACF,iEACE,4EACF,gDACE,2DACF,0DACE,qEACF,mEACE,8EACF,4CACE,uDACF,4CACE,uDACF,mEACE,8EACF,qFACE,gGACF,uFACE,kGACF,gGACE,2GACF,mEACE,8EACF,qFACE,gGACF,uFACE,kGACF,gGACE,2GACF,+CACE,0DACF,mCACE,8CACF,kDACE,6DACF,iDACE,4DACF,+CACE,0DACF,wDACE,mEACF,+DACE,0EACF,wDACE,mEACF,+CACE,0DACF,6CACE,wDACF,yCACE,oDACF,qDACE,gEACF,oDACE,+DACF,2CACE,sDACF,+CACE,0DACF,qDACE,gEACF,uCACE,kDACF,oCACE,+CACF,qCACE,gDACF,yCACE,oDACF,yCACE,oDACF,4DACE,uEACF,uEACE,kFACF,+CACE,0DACF,+CACE,0DACF,wCACE,mDACF,wCACE,mDACF,sCACE,iDACF,sDACE,iEACF,2DACE,sEACF,8CACE,yDACF,kCACE,6CACF,iDACE,4DACF,8CACE,yDACF,gDACE,2DACF,kCACE,6CACF,oCACE,+CACF,qCACE,gDACF,wCACE,mDACF,uCACE,kDACF,wCACE,mDACF,uCACE,kDACF,0CACE,qDACF,sCACE,iDACF,2CACE,sDACF,0CACE,qDACF,qCACE,gDACF,uCACE,kDACF,yCACE,oDACF,qCACE,gDACF,yCACE,oDACF,0CACE,qDACF,oCACE,+CACF,wCACE,mDACF,oCACE,+CACF,uCACE,kDACF,gDACE,2DACF,iCACE,4CACF,2CACE,sDACF,0CACE,qDACF,iCACE,4CACF,6CACE,wDACF,wCACE,mDACF,2CACE,sDACF,4CACE,uDACF,yCACE,oDACF,uCACE,kDACF,+CACE,0DACF,uCACE,kDACF,2CACE,sDACF,2CACE,sDACF,wCACE,mDACF,sCACE,iDACF,uCACE,kDACF,2CACE,sDACF,2CACE,sDACF,wCACE,mDACF,mCACE,8CACF,wCACE,mDACF,mCACE,8CACF,uCACE,kDACF,4CACE,uDACF,oCACE,+CACF,kCACE,6CACF,qCACE,gDACF,4CACE,uDACF,uCACE,kDACF,iCACE,4CACF,oCACE,+CACF,wCACE,mDACF,mCACE,8CACF,sCACE,iDACF,wCACE,mDACF,qCACE,gDACF,uCACE,kDACF,uCACE,kDACF,gDACE,2DACF,gDACE,2DACF,gDACE,2DACF,kDACE,6DACF,2DACE,sEACF,qCACE,gDACF,+CACE,0DACF,4CACE,uDACF,yCACE,oDACF,6CACE,wDACF,yCACE,oDACF,mCACE,8CACF,qCACE,gDACF,uCACE,kDACF,0CACE,qDACF,oDACE,+DACF,+CACE,0DACF,wDACE,mEACF,0CACE,qDACF,qCACE,gDACF,sCACE,iDACF,mDACE,8DACF,qCACE,gDACF,0CACE,qDACF,yCACE,oDACF,8CACE,yDACF,+CACE,0DACF,mCACE,8CACF,oCACE,+CACF,yCACE,oDACF,qCACE,gDACF,wCACE,mDACF,oCACE,+CACF,mCACE,8CACF,6CACE,wDACF,4CACE,yD,wBCh3BeC,G,uFAMJ7b,GACb,OAAO6b,EAAgBC,UAAU9b,EAAOwV,GAAWoG,S,oCAQhC5b,GACnB,OAAO+b,KAAKC,MACV,KAAehc,GAAO2W,QAAQ,IAAI1H,OAAOH,EAAW,KAAMrL,M,8BAS/C3B,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","file":"js/app.01a62df0.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PredicateTable.vue?vue&type=style&index=0&id=110e542f&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PredicateTable.vue?vue&type=style&index=0&id=110e542f&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('portal-target',{attrs:{\"name\":\"semantic-ui-vue\"}}),_c('nav-bar'),_c('multipane',{attrs:{\"id\":\"multipane\",\"layout\":\"vertical\"}},[_c('div',{staticClass:\"text-panel\",attrs:{\"id\":\"dataTextView\"}},[_c('data-text-view',{attrs:{\"height\":_vm.getHeight()}})],1),_c('multipane-resizer',{attrs:{\"id\":\"resizer\"}}),_c('div',{staticClass:\"fill-height\",attrs:{\"id\":\"editorContainer\"}},[_c('editor')],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('sui-menu',{ref:\"navbar\",attrs:{\"id\":\"navbar\",\"attached\":\"top\",\"inverted\":\"\"}},[_c('sui-dropdown',{attrs:{\"item\":\"\",\"icon\":\"file alternate\",\"simple\":\"\"}},[_c('sui-dropdown-menu',[_c('sui-dropdown-item',{on:{\"mouseup\":function () { return _vm.$refs.importShapes.click(); }}},[_c('label',{attrs:{\"for\":\"file\"}},[_vm._v(\"Import Shapes...\")]),_c('input',{ref:\"importShapes\",staticStyle:{\"display\":\"none\"},attrs:{\"id\":\"file\",\"type\":\"file\"},on:{\"change\":function($event){return _vm.readTextFile()}}})]),_c('sui-dropdown-item',{on:{\"mouseup\":function () { return _vm.$refs.importData.click(); }}},[_c('label',{attrs:{\"for\":\"dataFile\"}},[_vm._v(\"Import Data...\")]),_c('input',{ref:\"importData\",staticStyle:{\"display\":\"none\"},attrs:{\"id\":\"dataFile\",\"type\":\"file\"},on:{\"change\":function($event){return _vm.uploadDataFile()}}})]),_c('sui-dropdown-item',{on:{\"click\":function($event){return _vm.exportFile(_vm.shacl)}}},[_vm._v(\"\\n          Export as SHACL\\n        \")]),_c('sui-dropdown-divider'),_c('sui-dropdown-item',{on:{\"click\":_vm.loadExample}},[_vm._v(\"\\n          Load Example\\n        \")]),_c('sui-dropdown-divider'),_c('sui-dropdown-item',{on:{\"click\":_vm.toggleNamespaceModal}},[_vm._v(\"\\n          Namespaces...\\n        \")])],1)],1),_c('sui-menu-item',{staticClass:\"clickable\",attrs:{\"icon\":\"add\"},on:{\"click\":_vm.createNodeShape}},[_vm._v(\"\\n      Shape\\n    \")]),_c('sui-menu-item',{staticClass:\"clickable\",attrs:{\"icon\":\"add\"},on:{\"click\":_vm.createPropertyShape}},[_vm._v(\"\\n      Property\\n    \")]),_c('sui-menu-item',{staticClass:\"clickable\",attrs:{\"icon\":\"check\",\"disabled\":!_vm.dataFileUploaded()},on:{\"click\":_vm.validate}},[_vm._v(\"\\n      Validate\\n      \"),(!_vm.dataFileUploaded())?_c('sui-label',{attrs:{\"color\":\"red\"}},[_vm._v(\"\\n        No data file uploaded\\n      \")]):_vm._e(),(_vm.dataFileUploaded())?_c('sui-label',{attrs:{\"color\":\"green\"}},[_vm._v(\"\\n        \"+_vm._s(_vm.$store.state.mData.dataFileName)+\"\\n      \")]):_vm._e()],1),_c('sui-menu-item',{staticClass:\"clickable\",attrs:{\"icon\":\"trash\",\"disabled\":!_vm.canClear()},on:{\"click\":_vm.toggleClearModal}}),_c('sui-menu-item',{staticClass:\"clickable\",attrs:{\"icon\":\"undo alterate\",\"disabled\":!_vm.$root.canUndo()},on:{\"click\":_vm.undoOperation}}),_c('sui-menu-item',{staticClass:\"clickable\",attrs:{\"icon\":\"redo alternate\",\"disabled\":!_vm.$root.canRedo()},on:{\"click\":_vm.redoOperation}}),_c('sui-menu-menu',{attrs:{\"position\":\"right\"}},[_c('a',{attrs:{\"href\":\"https://github.com/oSoc19/unshacled/\",\"target\":\"_blank\"}},[_c('sui-menu-item',{staticClass:\"clickable\",attrs:{\"icon\":\"github\"}})],1)])],1),_c('clear-modal'),_c('export-modal'),_c('namespace-modal'),_c('path-modal',{attrs:{\"editing\":_vm.$store.state.pathModal.editing,\"shape-i-d\":_vm.$store.state.pathModal.shapeID}}),_c('validation-report-modal',{attrs:{\"report\":this.$store.state.mData.validationReport}}),_c('predicate-modal',{attrs:{\"modal-properties\":_vm.$store.state.mShape.mConstraint.mModal}}),_c('edit-shape-modal',{attrs:{\"modal-properties\":_vm.$store.state.mShape.shapeModal}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default {\n  SHACL: \"SHACL\",\n  SHEX: \"SHEX\"\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('sui-modal',{model:{value:(_vm.$store.state.showClearModal),callback:function ($$v) {_vm.$set(_vm.$store.state, \"showClearModal\", $$v)},expression:\"$store.state.showClearModal\"}},[_c('sui-modal-header',[_vm._v(\"\\n      Clear page?\\n    \")]),_c('sui-modal-content',[_c('sui-form',[_c('sui-form-field',[_c('sui-checkbox',{attrs:{\"label\":\"Clear Model\",\"disabled\":_vm.isCleared('model')},model:{value:(_vm.model),callback:function ($$v) {_vm.model=$$v},expression:\"model\"}})],1),_c('sui-form-field',[_c('sui-checkbox',{attrs:{\"label\":\"Clear Data\",\"disabled\":_vm.isCleared('data')},model:{value:(_vm.data),callback:function ($$v) {_vm.data=$$v},expression:\"data\"}})],1)],1),_c('sui-message',{attrs:{\"error\":\"\",\"icon\":\"exclamation triangle\"}},[_vm._v(\"\\n        All your unsaved changes will be lost.\\n      \")])],1),_c('sui-modal-actions',[_c('sui-button',{attrs:{\"id\":\"cancel\",\"tab-index\":\"0\"},on:{\"click\":_vm.toggleClearModal}},[_vm._v(\"\\n        Cancel\\n      \")]),_c('sui-button',{attrs:{\"tab-index\":\"0\",\"type\":\"submit\",\"negative\":\"\",\"disabled\":!(_vm.data || _vm.model)},on:{\"click\":_vm.confirm}},[_vm._v(\"\\n        Clear\\n      \")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <sui-modal v-model=\"$store.state.showClearModal\">\n      <sui-modal-header>\n        Clear page?\n      </sui-modal-header>\n      <sui-modal-content>\n        <sui-form>\n          <sui-form-field>\n            <sui-checkbox\n              v-model=\"model\"\n              label=\"Clear Model\"\n              :disabled=\"isCleared('model')\"\n            ></sui-checkbox>\n          </sui-form-field>\n          <sui-form-field>\n            <sui-checkbox\n              v-model=\"data\"\n              label=\"Clear Data\"\n              :disabled=\"isCleared('data')\"\n            ></sui-checkbox>\n          </sui-form-field>\n        </sui-form>\n\n        <sui-message error icon=\"exclamation triangle\">\n          All your unsaved changes will be lost.\n        </sui-message>\n      </sui-modal-content>\n      <sui-modal-actions>\n        <sui-button id=\"cancel\" tab-index=\"0\" @click=\"toggleClearModal\">\n          Cancel\n        </sui-button>\n        <sui-button\n          tab-index=\"0\"\n          type=\"submit\"\n          negative\n          :disabled=\"!(data || model)\"\n          @click=\"confirm\"\n        >\n          Clear\n        </sui-button>\n      </sui-modal-actions>\n    </sui-modal>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"ClearModal\",\n  data() {\n    return {\n      data: false,\n      model: false\n    };\n  },\n  mounted() {\n    /* Focus the clear button when the modal is called. */\n    const self = this;\n    this.$store.watch(\n      () => self.$store.state.showClearModal,\n      () => {\n        if (self.$store.state.showClearModal)\n          document.getElementById(\"cancel\").focus();\n      }\n    );\n  },\n  methods: {\n    /**\n     * Select the given option to clear.\n     * @param {string} option the part we want to clear.\n     */\n    select(option) {\n      if (option === \"data\" && !this.isCleared(\"data\")) {\n        this.data = true;\n        this.model = false;\n      } else if (option === \"model\" && !this.isCleared(\"model\")) {\n        this.data = false;\n        this.model = true;\n      }\n    },\n\n    /**\n     * Confirm the modal. This will clear the editor and close the modal.\n     */\n    confirm() {\n      if (this.model) this.$store.commit(\"clearModel\");\n      if (this.data) this.$store.commit(\"clearData\");\n      this.toggleClearModal();\n      /* Save the executed operation. */\n      this.$store.commit(\"saveOperation\", {\n        state: this.$store.state,\n        action: { type: \"clear\" }\n      });\n    },\n    /**\n     * Close the modal.\n     */\n    toggleClearModal() {\n      this.$store.commit(\"toggleClearModal\");\n      this.data = false;\n      this.model = false;\n    },\n\n    /**\n     * Check if the wanted option is cleared already.\n     * @param {string} option \"model\" or \"data\".\n     * @returns {boolean} indicates if the chosen option is cleared already.\n     */\n    isCleared(option) {\n      if (option === \"model\")\n        return this.$store.state.mShape.model.length === 0;\n      if (option === \"data\")\n        return this.$store.state.mData.dataText.length === 0;\n    }\n  }\n};\n</script>\n\n<style scoped></style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ClearModal.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ClearModal.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ClearModal.vue?vue&type=template&id=41540e72&scoped=true&\"\nimport script from \"./ClearModal.vue?vue&type=script&lang=js&\"\nexport * from \"./ClearModal.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"41540e72\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('sui-modal',{on:{\"submit\":function($event){$event.preventDefault();return _vm.toggleModal($event)}},model:{value:(_vm.$store.state.mData.showValidationReportModal),callback:function ($$v) {_vm.$set(_vm.$store.state.mData, \"showValidationReportModal\", $$v)},expression:\"$store.state.mData.showValidationReportModal\"}},[_c('sui-modal-header',[_vm._v(\"\\n      Validation report\\n    \")]),_c('sui-modal-content',{attrs:{\"scrolling\":true}},[_c('sui-segment',{attrs:{\"basic\":\"\"}},[(!_vm.conforms())?_c('div',[_c(\"sui-header\",{tag:\"h3\"},[_c('sui-icon',{attrs:{\"name\":\"cog\"}}),_c('sui-header-content',[_vm._v(\"General\")])],1),_c('sui-divider')],1):_vm._e(),(_vm.conforms())?_c('sui-segment',{attrs:{\"color\":\"green\"}},[_vm._v(\"\\n          This data conforms to the given model.\\n        \")]):_vm._e(),(!_vm.conforms())?_c('div',[_c('sui-segment',{attrs:{\"color\":\"red\"}},[_vm._v(\"\\n            This data does not conform to the given model.\\n          \")]),_c('p',[_vm._v(\"The following shapes do not conform:\")]),_c('ul',_vm._l((_vm.getGeneralReport().nodes),function(value){return _c('li',{key:value},[_vm._v(\"\\n              \"+_vm._s(_vm.getPrefixedUri(value))+\"\\n            \")])}),0),_c('p',[_vm._v(\"More details can be found below.\")])],1):_vm._e()],1),(!_vm.conforms())?_c('sui-segment',{attrs:{\"basic\":\"\"}},[_c(\"sui-header\",{tag:\"h3\"},[_c('sui-icon',{attrs:{\"name\":\"cogs\"}}),_c('sui-header-content',[_vm._v(\"Details\")])],1),_c('sui-divider'),_vm._l((_vm.getResultsByNode()),function(results,node){return _c('sui-segment',{key:node,attrs:{\"basic\":\"\"}},[_c(\"sui-header\",{tag:\"h4\"},[_vm._v(_vm._s(node))]),_c('sui-segments',_vm._l((results),function(result){return _c('sui-segment',{key:result.shape},[_c('sui-grid',_vm._l((result),function(value,key){return _c('sui-grid-row',{key:key},[_c('sui-grid-column',{attrs:{\"width\":1}}),_c('sui-grid-column',{attrs:{\"width\":3}},[_c(\"sui-header\",{tag:\"h5\"},[_vm._v(_vm._s(_vm.cfl(key)))])],1),_c('sui-grid-column',{attrs:{\"width\":12}},[_vm._v(_vm._s(value))])],1)}),1)],1)}),1)],1)})],2):_vm._e()],1),_c('sui-modal-actions',[_c('sui-button',{attrs:{\"id\":\"close\",\"tab-index\":\"0\"},on:{\"click\":_vm.toggleModal}},[_vm._v(\"\\n        Close\\n      \")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export const CUSTOM_URI = \"https://2019.summerofcode.be/unshacled#\";\n\n/** This dictionary maps every term to its corresponding internal model URI. */\nexport const TERM = {\n  AbstractResult: `${CUSTOM_URI}AbstractResult`,\n  AndConstraintComponent: `${CUSTOM_URI}AndConstraintComponent`,\n  \"AndConstraintComponent-and\": `${CUSTOM_URI}AndConstraintComponent-and`,\n  BlankNode: `${CUSTOM_URI}BlankNode`,\n  BlankNodeOrIRI: `${CUSTOM_URI}BlankNodeOrIRI`,\n  BlankNodeOrLiteral: `${CUSTOM_URI}BlankNodeOrLiteral`,\n  ClassConstraintComponent: `${CUSTOM_URI}ClassConstraintComponent`,\n  \"ClassConstraintComponent-class\": `${CUSTOM_URI}ClassConstraintComponent-class`,\n  ClosedConstraintComponent: `${CUSTOM_URI}ClosedConstraintComponent`,\n  \"ClosedConstraintComponent-closed\": `${CUSTOM_URI}ClosedConstraintComponent-closed`,\n  \"ClosedConstraintComponent-ignoredProperties\": `${CUSTOM_URI}ClosedConstraintComponent-ignoredProperties`,\n  ConstraintComponent: `${CUSTOM_URI}ConstraintComponent`,\n  DatatypeConstraintComponent: `${CUSTOM_URI}DatatypeConstraintComponent`,\n  \"DatatypeConstraintComponent-datatype\": `${CUSTOM_URI}DatatypeConstraintComponent-datatype`,\n  DisjointConstraintComponent: `${CUSTOM_URI}DisjointConstraintComponent`,\n  \"DisjointConstraintComponent-disjoint\": `${CUSTOM_URI}DisjointConstraintComponent-disjoint`,\n  EqualsConstraintComponent: `${CUSTOM_URI}EqualsConstraintComponent`,\n  \"EqualsConstraintComponent-equals\": `${CUSTOM_URI}EqualsConstraintComponent-equals`,\n  ExpressionConstraintComponent: `${CUSTOM_URI}ExpressionConstraintComponent`,\n  \"ExpressionConstraintComponent-expression\": `${CUSTOM_URI}ExpressionConstraintComponent-expression`,\n  Function: `${CUSTOM_URI}Function`,\n  HasValueConstraintComponent: `${CUSTOM_URI}HasValueConstraintComponent`,\n  \"HasValueConstraintComponent-hasValue\": `${CUSTOM_URI}HasValueConstraintComponent-hasValue`,\n  IRI: `${CUSTOM_URI}IRI`,\n  IRIOrLiteral: `${CUSTOM_URI}IRIOrLiteral`,\n  InConstraintComponent: `${CUSTOM_URI}InConstraintComponent`,\n  \"InConstraintComponent-in\": `${CUSTOM_URI}InConstraintComponent-in`,\n  Info: `${CUSTOM_URI}Info`,\n  JSConstraint: `${CUSTOM_URI}JSConstraint`,\n  \"JSConstraint-js\": `${CUSTOM_URI}JSConstraint-js`,\n  JSConstraintComponent: `${CUSTOM_URI}JSConstraintComponent`,\n  JSExecutable: `${CUSTOM_URI}JSExecutable`,\n  JSFunction: `${CUSTOM_URI}JSFunction`,\n  JSLibrary: `${CUSTOM_URI}JSLibrary`,\n  JSRule: `${CUSTOM_URI}JSRule`,\n  JSTarget: `${CUSTOM_URI}JSTarget`,\n  JSTargetType: `${CUSTOM_URI}JSTargetType`,\n  JSValidator: `${CUSTOM_URI}JSValidator`,\n  LanguageInConstraintComponent: `${CUSTOM_URI}LanguageInConstraintComponent`,\n  \"LanguageInConstraintComponent-languageIn\": `${CUSTOM_URI}LanguageInConstraintComponent-languageIn`,\n  LessThanConstraintComponent: `${CUSTOM_URI}LessThanConstraintComponent`,\n  \"LessThanConstraintComponent-lessThan\": `${CUSTOM_URI}LessThanConstraintComponent-lessThan`,\n  LessThanOrEqualsConstraintComponent: `${CUSTOM_URI}LessThanOrEqualsConstraintComponent`,\n  \"LessThanOrEqualsConstraintComponent-lessThanOrEquals\": `${CUSTOM_URI}LessThanOrEqualsConstraintComponent-lessThanOrEquals`,\n  Literal: `${CUSTOM_URI}Literal`,\n  MaxCountConstraintComponent: `${CUSTOM_URI}MaxCountConstraintComponent`,\n  \"MaxCountConstraintComponent-maxCount\": `${CUSTOM_URI}MaxCountConstraintComponent-maxCount`,\n  MaxExclusiveConstraintComponent: `${CUSTOM_URI}MaxExclusiveConstraintComponent`,\n  \"MaxExclusiveConstraintComponent-maxExclusive\": `${CUSTOM_URI}MaxExclusiveConstraintComponent-maxExclusive`,\n  MaxInclusiveConstraintComponent: `${CUSTOM_URI}MaxInclusiveConstraintComponent`,\n  \"MaxInclusiveConstraintComponent-maxInclusive\": `${CUSTOM_URI}MaxInclusiveConstraintComponent-maxInclusive`,\n  MaxLengthConstraintComponent: `${CUSTOM_URI}MaxLengthConstraintComponent`,\n  \"MaxLengthConstraintComponent-maxLength\": `${CUSTOM_URI}MaxLengthConstraintComponent-maxLength`,\n  MinCountConstraintComponent: `${CUSTOM_URI}MinCountConstraintComponent`,\n  \"MinCountConstraintComponent-minCount\": `${CUSTOM_URI}MinCountConstraintComponent-minCount`,\n  MinExclusiveConstraintComponent: `${CUSTOM_URI}MinExclusiveConstraintComponent`,\n  \"MinExclusiveConstraintComponent-minExclusive\": `${CUSTOM_URI}MinExclusiveConstraintComponent-minExclusive`,\n  MinInclusiveConstraintComponent: `${CUSTOM_URI}MinInclusiveConstraintComponent`,\n  \"MinInclusiveConstraintComponent-minInclusive\": `${CUSTOM_URI}MinInclusiveConstraintComponent-minInclusive`,\n  MinLengthConstraintComponent: `${CUSTOM_URI}MinLengthConstraintComponent`,\n  \"MinLengthConstraintComponent-minLength\": `${CUSTOM_URI}MinLengthConstraintComponent-minLength`,\n  NodeConstraintComponent: `${CUSTOM_URI}NodeConstraintComponent`,\n  \"NodeConstraintComponent-node\": `${CUSTOM_URI}NodeConstraintComponent-node`,\n  NodeKind: `${CUSTOM_URI}NodeKind`,\n  NodeKindConstraintComponent: `${CUSTOM_URI}NodeKindConstraintComponent`,\n  \"NodeKindConstraintComponent-nodeKind\": `${CUSTOM_URI}NodeKindConstraintComponent-nodeKind`,\n  NodeShape: `${CUSTOM_URI}NodeShape`,\n  NotConstraintComponent: `${CUSTOM_URI}NotConstraintComponent`,\n  \"NotConstraintComponent-not\": `${CUSTOM_URI}NotConstraintComponent-not`,\n  OrConstraintComponent: `${CUSTOM_URI}OrConstraintComponent`,\n  \"OrConstraintComponent-or\": `${CUSTOM_URI}OrConstraintComponent-or`,\n  Parameter: `${CUSTOM_URI}Parameter`,\n  Parameterizable: `${CUSTOM_URI}Parameterizable`,\n  PatternConstraintComponent: `${CUSTOM_URI}PatternConstraintComponent`,\n  \"PatternConstraintComponent-flags\": `${CUSTOM_URI}PatternConstraintComponent-flags`,\n  \"PatternConstraintComponent-pattern\": `${CUSTOM_URI}PatternConstraintComponent-pattern`,\n  PrefixDeclaration: `${CUSTOM_URI}PrefixDeclaration`,\n  PropertyConstraintComponent: `${CUSTOM_URI}PropertyConstraintComponent`,\n  \"PropertyConstraintComponent-property\": `${CUSTOM_URI}PropertyConstraintComponent-property`,\n  PropertyGroup: `${CUSTOM_URI}PropertyGroup`,\n  PropertyShape: `${CUSTOM_URI}PropertyShape`,\n  QualifiedMaxCountConstraintComponent: `${CUSTOM_URI}QualifiedMaxCountConstraintComponent`,\n  \"QualifiedMaxCountConstraintComponent-qualifiedMaxCount\": `${CUSTOM_URI}QualifiedMaxCountConstraintComponent-qualifiedMaxCount`,\n  \"QualifiedMaxCountConstraintComponent-qualifiedValueShape\": `${CUSTOM_URI}QualifiedMaxCountConstraintComponent-qualifiedValueShape`,\n  \"QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint\": `${CUSTOM_URI}QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint`,\n  QualifiedMinCountConstraintComponent: `${CUSTOM_URI}QualifiedMinCountConstraintComponent`,\n  \"QualifiedMinCountConstraintComponent-qualifiedMinCount\": `${CUSTOM_URI}QualifiedMinCountConstraintComponent-qualifiedMinCount`,\n  \"QualifiedMinCountConstraintComponent-qualifiedValueShape\": `${CUSTOM_URI}QualifiedMinCountConstraintComponent-qualifiedValueShape`,\n  \"QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint\": `${CUSTOM_URI}QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint`,\n  ResultAnnotation: `${CUSTOM_URI}ResultAnnotation`,\n  Rule: `${CUSTOM_URI}Rule`,\n  SPARQLAskExecutable: `${CUSTOM_URI}SPARQLAskExecutable`,\n  SPARQLAskValidator: `${CUSTOM_URI}SPARQLAskValidator`,\n  SPARQLConstraint: `${CUSTOM_URI}SPARQLConstraint`,\n  SPARQLConstraintComponent: `${CUSTOM_URI}SPARQLConstraintComponent`,\n  \"SPARQLConstraintComponent-sparql\": `${CUSTOM_URI}SPARQLConstraintComponent-sparql`,\n  SPARQLConstructExecutable: `${CUSTOM_URI}SPARQLConstructExecutable`,\n  SPARQLExecutable: `${CUSTOM_URI}SPARQLExecutable`,\n  SPARQLFunction: `${CUSTOM_URI}SPARQLFunction`,\n  SPARQLRule: `${CUSTOM_URI}SPARQLRule`,\n  SPARQLSelectExecutable: `${CUSTOM_URI}SPARQLSelectExecutable`,\n  SPARQLSelectValidator: `${CUSTOM_URI}SPARQLSelectValidator`,\n  SPARQLTarget: `${CUSTOM_URI}SPARQLTarget`,\n  SPARQLTargetType: `${CUSTOM_URI}SPARQLTargetType`,\n  SPARQLUpdateExecutable: `${CUSTOM_URI}SPARQLUpdateExecutable`,\n  Severity: `${CUSTOM_URI}Severity`,\n  Shape: `${CUSTOM_URI}Shape`,\n  Target: `${CUSTOM_URI}Target`,\n  TargetType: `${CUSTOM_URI}TargetType`,\n  TripleRule: `${CUSTOM_URI}TripleRule`,\n  UniqueLangConstraintComponent: `${CUSTOM_URI}UniqueLangConstraintComponent`,\n  \"UniqueLangConstraintComponent-uniqueLang\": `${CUSTOM_URI}UniqueLangConstraintComponent-uniqueLang`,\n  ValidationReport: `${CUSTOM_URI}ValidationReport`,\n  ValidationResult: `${CUSTOM_URI}ValidationResult`,\n  Validator: `${CUSTOM_URI}Validator`,\n  Violation: `${CUSTOM_URI}Violation`,\n  Warning: `${CUSTOM_URI}Warning`,\n  XoneConstraintComponent: `${CUSTOM_URI}XoneConstraintComponent`,\n  \"XoneConstraintComponent-xone\": `${CUSTOM_URI}XoneConstraintComponent-xone`,\n  alternativePath: `${CUSTOM_URI}alternativePath`,\n  and: `${CUSTOM_URI}and`,\n  annotationProperty: `${CUSTOM_URI}annotationProperty`,\n  annotationValue: `${CUSTOM_URI}annotationValue`,\n  annotationVarName: `${CUSTOM_URI}annotationVarName`,\n  ask: `${CUSTOM_URI}ask`,\n  class: `${CUSTOM_URI}class`,\n  closed: `${CUSTOM_URI}closed`,\n  condition: `${CUSTOM_URI}condition`,\n  conforms: `${CUSTOM_URI}conforms`,\n  construct: `${CUSTOM_URI}construct`,\n  datatype: `${CUSTOM_URI}datatype`,\n  deactivated: `${CUSTOM_URI}deactivated`,\n  declare: `${CUSTOM_URI}declare`,\n  defaultValue: `${CUSTOM_URI}defaultValue`,\n  description: `${CUSTOM_URI}description`,\n  detail: `${CUSTOM_URI}detail`,\n  disjoint: `${CUSTOM_URI}disjoint`,\n  entailment: `${CUSTOM_URI}entailment`,\n  equals: `${CUSTOM_URI}equals`,\n  expression: `${CUSTOM_URI}expression`,\n  filterShape: `${CUSTOM_URI}filterShape`,\n  flags: `${CUSTOM_URI}flags`,\n  focusNode: `${CUSTOM_URI}focusNode`,\n  group: `${CUSTOM_URI}group`,\n  hasValue: `${CUSTOM_URI}hasValue`,\n  ignoredProperties: `${CUSTOM_URI}ignoredProperties`,\n  in: `${CUSTOM_URI}in`,\n  intersection: `${CUSTOM_URI}intersection`,\n  inversePath: `${CUSTOM_URI}inversePath`,\n  js: `${CUSTOM_URI}js`,\n  jsFunctionName: `${CUSTOM_URI}jsFunctionName`,\n  jsLibrary: `${CUSTOM_URI}jsLibrary`,\n  jsLibraryURL: `${CUSTOM_URI}jsLibraryURL`,\n  labelTemplate: `${CUSTOM_URI}labelTemplate`,\n  languageIn: `${CUSTOM_URI}languageIn`,\n  lessThan: `${CUSTOM_URI}lessThan`,\n  lessThanOrEquals: `${CUSTOM_URI}lessThanOrEquals`,\n  maxCount: `${CUSTOM_URI}maxCount`,\n  maxExclusive: `${CUSTOM_URI}maxExclusive`,\n  maxInclusive: `${CUSTOM_URI}maxInclusive`,\n  maxLength: `${CUSTOM_URI}maxLength`,\n  message: `${CUSTOM_URI}message`,\n  minCount: `${CUSTOM_URI}minCount`,\n  minExclusive: `${CUSTOM_URI}minExclusive`,\n  minInclusive: `${CUSTOM_URI}minInclusive`,\n  minLength: `${CUSTOM_URI}minLength`,\n  name: `${CUSTOM_URI}name`,\n  namespace: `${CUSTOM_URI}namespace`,\n  node: `${CUSTOM_URI}node`,\n  nodeKind: `${CUSTOM_URI}nodeKind`,\n  nodeValidator: `${CUSTOM_URI}nodeValidator`,\n  nodes: `${CUSTOM_URI}nodes`,\n  not: `${CUSTOM_URI}not`,\n  object: `${CUSTOM_URI}object`,\n  oneOrMorePath: `${CUSTOM_URI}oneOrMorePath`,\n  optional: `${CUSTOM_URI}optional`,\n  or: `${CUSTOM_URI}or`,\n  order: `${CUSTOM_URI}order`,\n  parameter: `${CUSTOM_URI}parameter`,\n  path: `${CUSTOM_URI}path`,\n  pattern: `${CUSTOM_URI}pattern`,\n  predicate: `${CUSTOM_URI}predicate`,\n  prefix: `${CUSTOM_URI}prefix`,\n  prefixes: `${CUSTOM_URI}prefixes`,\n  property: `${CUSTOM_URI}property`,\n  propertyValidator: `${CUSTOM_URI}propertyValidator`,\n  qualifiedMaxCount: `${CUSTOM_URI}qualifiedMaxCount`,\n  qualifiedMinCount: `${CUSTOM_URI}qualifiedMinCount`,\n  qualifiedValueShape: `${CUSTOM_URI}qualifiedValueShape`,\n  qualifiedValueShapesDisjoint: `${CUSTOM_URI}qualifiedValueShapesDisjoint`,\n  result: `${CUSTOM_URI}result`,\n  resultAnnotation: `${CUSTOM_URI}resultAnnotation`,\n  resultMessage: `${CUSTOM_URI}resultMessage`,\n  resultPath: `${CUSTOM_URI}resultPath`,\n  resultSeverity: `${CUSTOM_URI}resultSeverity`,\n  returnType: `${CUSTOM_URI}returnType`,\n  rule: `${CUSTOM_URI}rule`,\n  select: `${CUSTOM_URI}select`,\n  severity: `${CUSTOM_URI}severity`,\n  shapesGraph: `${CUSTOM_URI}shapesGraph`,\n  shapesGraphWellFormed: `${CUSTOM_URI}shapesGraphWellFormed`,\n  sourceConstraint: `${CUSTOM_URI}sourceConstraint`,\n  sourceConstraintComponent: `${CUSTOM_URI}sourceConstraintComponent`,\n  sourceShape: `${CUSTOM_URI}sourceShape`,\n  sparql: `${CUSTOM_URI}sparql`,\n  subject: `${CUSTOM_URI}subject`,\n  suggestedShapesGraph: `${CUSTOM_URI}suggestedShapesGraph`,\n  target: `${CUSTOM_URI}target`,\n  targetClass: `${CUSTOM_URI}targetClass`,\n  targetNode: `${CUSTOM_URI}targetNode`,\n  targetObjectsOf: `${CUSTOM_URI}targetObjectsOf`,\n  targetSubjectsOf: `${CUSTOM_URI}targetSubjectsOf`,\n  this: `${CUSTOM_URI}this`,\n  union: `${CUSTOM_URI}union`,\n  uniqueLang: `${CUSTOM_URI}uniqueLang`,\n  update: `${CUSTOM_URI}update`,\n  validator: `${CUSTOM_URI}validator`,\n  value: `${CUSTOM_URI}value`,\n  xone: `${CUSTOM_URI}xone`,\n  zeroOrMorePath: `${CUSTOM_URI}zeroOrMorePath`,\n  zeroOrOnePath: `${CUSTOM_URI}zeroOrOnePath`\n};\n\nexport { TERM as default };\n","import { TERM } from \"../translation/terminology\";\n\nexport const ENTER = 13; // Enter key code.\nexport const MAX_NUM_OPERATIONS = 100; // Maximum number of operations a user can undo.\n\nexport const DEFAULT_BASE_URI = \"http://example.org/ns/unshacled/\";\nexport const IDENTIFIER = \"shapes\";\n/* Used for the `path` predicate. */\nexport const SCHEMA_URI = \"http://schema.org/\";\nexport const LABEL = \"http://www.w3.org/2000/01/rdf-schema#label\";\n/** Used to change SHACL specific predicates to the internal model. */\nexport const SHACL_URI = \"http://www.w3.org/ns/shacl#\";\n\n/* Indicates which constraints should be visualized in a single entry. */\nexport const SINGLE_ENTRY = [\"property\"];\n\n/* Regular expression to test URI's. */\n// FIXME check the validity\nexport const IRI_REGEX = new RegExp(\n  // eslint-disable-next-line no-useless-escape\n  /((([A-Za-z]{2,9}:(?:\\/\\/)?)(?:[\\-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9\\.\\-]+|(?:www\\.|[\\-;:&=\\+\\$,\\w]+@)[A-Za-z0-9\\.\\-]+)((?:\\/[\\+~%\\/\\.\\w\\-_]*)?\\??(?:[\\-\\+=&;%@\\.\\w_]*)#?(?:[\\.\\!\\/\\\\\\w]*))?)/\n);\nexport const BLANK_REGEX = new RegExp(/^_:.+/);\n\n/* Properties that are ignored when visualizing. */\nexport const IGNORED_PROPERTIES = [\n  \"@id\",\n  \"@type\",\n  LABEL,\n  TERM.name,\n  TERM.description\n];\n","/* CONSTANTS ======================================================================================================== */\n\nexport const WIDTH = 250; // Width of a rectangle.\nexport const HEIGHT = 40; // Width of a rectangle.\nexport const MARGIN = 5;\nexport const MARGIN_TOP = 40; // Margin to accomodate the navbar.\nexport const OFFSET = 10; // General offset.\nexport const TEXT_OFFSET = 15; // Offset for text.\nexport const MAX_LENGTH = 30; // Maximum length for labels.\n\nexport const TEXT_SIZE = 12; // Default text size.\nconst SMALL_TEXT_SIZE = TEXT_SIZE - 2; // Smaller text size.\nconst BUTTON_OFFSET = 240;\n\n/* SHAPES =========================================================================================================== */\n\n/**\n * Configuration for a shape rectangle.\n * @type {{strokeWidth: number, width: number, y: number, height: number}}\n */\nexport const SHAPE_CONFIG = {\n  y: 0,\n  height: HEIGHT,\n  width: WIDTH,\n  strokeWidth: 3\n};\n\n/**\n * Configuration for a node shape rectangle.\n * @type {{strokeWidth: number, width: number, y: number, fill: string, stroke: string, height: number}}\n */\nexport const NODE_SHAPE_CONFIG = {\n  ...SHAPE_CONFIG,\n  fill: \"lightgreen\",\n  stroke: \"green\"\n};\n\n/**\n * Configuration for a property shape rectangle.\n * @type {{strokeWidth: number, x: number, width: number, y: number, fill: string, stroke: string, height: number}}\n */\nexport const PROPERTY_SHAPE_CONFIG = {\n  ...SHAPE_CONFIG,\n  fill: \"lightblue\",\n  stroke: \"blue\"\n};\n\n/**\n * Configuration for a description rectangle.\n * @type {{strokeWidth: number, width: number, fill: string, stroke: string}}\n */\nexport const DESCRIPTION_RECT_CONFIG = {\n  x: WIDTH + MARGIN,\n  width: WIDTH + 4 * MARGIN,\n  fill: \"white\",\n  stroke: \"lightgrey\",\n  strokeWidth: 1\n};\n\n/* CONSTRAINTS ====================================================================================================== */\n\n/**\n * Configuration for the constraint seperation line.\n * @type {{dash: [number, number], stroke: string, points: [number, number, number, number], strokewidth: number}}\n */\nexport const CONSTRAINT_SEPARATION_LINE = {\n  points: [0, HEIGHT, WIDTH, HEIGHT], // x y values\n  stroke: \"lightgrey\",\n  strokewidth: 1,\n  dash: [OFFSET, OFFSET] // Segments with a length of 20px with a gap of 10px\n};\n\n/**\n * Configuration for the constraint rectangle.\n * @type {{strokeWidth: number, width: number, fill: string, stroke: string, height: number}}\n */\nexport const CONSTRAINT_CONFIG = {\n  height: 2 * HEIGHT,\n  width: WIDTH,\n  fill: \"white\",\n  stroke: \"black\",\n  strokeWidth: 2\n};\n\n/* TEXT ============================================================================================================= */\n\n/**\n * General text configuration.\n * @type {{width: number, fontSize: number, text: string, align: string}}\n */\nconst TEXT_CONFIG = {\n  align: \"center\",\n  text: \"\",\n  width: WIDTH,\n  fontSize: TEXT_SIZE\n};\n\n/**\n * Configuration for a shape's label text.\n * @type {{width: number, y: number, text: string, align: string, fontStyle: string}}\n */\nexport const LABEL_TEXT_CONFIG = {\n  ...TEXT_CONFIG,\n  y: OFFSET,\n  fontStyle: \"bold\"\n};\n\n/**\n * Configuration for a shape's URI text.\n * @type {{width: number, y: number, fontSize: number, text: string, align: string, fontStyle: string}}\n */\nexport const URI_TEXT_CONFIG = {\n  ...TEXT_CONFIG,\n  y: OFFSET + TEXT_SIZE + 2,\n  fontSize: SMALL_TEXT_SIZE,\n  fontStyle: \"italic\"\n};\n\n/**\n * Configuration for a shape's constraint text.\n * @type {{width: number, fontSize: number, text: string, align: string}}\n */\nexport const CONSTRAINT_TEXT_CONFIG = {\n  ...TEXT_CONFIG\n};\n\n/**\n * Configuration for a shape's description title.\n * @type {{width: number, x: number, y: number, fontSize: number, text: string, align: string, fontStyle: string}}\n */\nexport const DESCRIPTION_TITLE_CONFIG = {\n  ...TEXT_CONFIG,\n  x: DESCRIPTION_RECT_CONFIG.x + 2 * MARGIN,\n  y: TEXT_OFFSET / 2,\n  text: \"Description\",\n  fontStyle: \"bold\",\n  align: \"left\"\n};\n\n/**\n * Configuration for a shape's description text.\n * @type {{width: number, x: number, y: number, fontSize: number, text: string, align: string}}\n */\nexport const DESCRIPTION_TEXT_CONFIG = {\n  ...TEXT_CONFIG,\n  x: DESCRIPTION_TITLE_CONFIG.x,\n  y: DESCRIPTION_TITLE_CONFIG.y + TEXT_OFFSET,\n  align: \"left\"\n};\n\n/* BUTTONS ========================================================================================================== */\n\n/**\n * Default button configuration.\n * @type {{x: number, radius: number}}\n */\nconst BUTTON_CONFIG = {\n  x: BUTTON_OFFSET,\n  radius: 6\n};\n\n/**\n * Configuration for delete buttons.\n * @type {{x: number, y: number, radius: number, fill: string}}\n */\nexport const DELETE_BUTTON_CONFIG = {\n  ...BUTTON_CONFIG,\n  y: OFFSET,\n  fill: \"red\"\n};\n\n/**\n * Configuration for \"add predicate\"-buttons.\n * @type {{x: number, y: number, radius: number, fill: string}}\n */\nexport const ADD_PREDICATE_CONFIG = {\n  ...BUTTON_CONFIG,\n  y: OFFSET + HEIGHT / 2,\n  fill: \"green\"\n};\n\n/* RELATIONSHIPS ==================================================================================================== */\n\n/**\n * Configuration for relationship arrows.\n * @type {{strokeWidth: number, pointerWidth: number, pointerLength: number, fill: string, stroke: string}}\n */\nexport const RELATIONSHIP_ARROW_CONFIG = {\n  stroke: \"black\",\n  fill: \"black\",\n  strokeWidth: 4,\n  pointerLength: 10,\n  pointerWidth: 10\n};\n\n/**\n * Configuration for the label text on relationship arrows.\n * @type {{fontSize: number, align: string}}\n */\nexport const RELATIONSHIP_LABEL_TEXT_CONFIG = {\n  fontSize: TEXT_SIZE,\n  align: \"center\"\n};\n\n/**\n * Configuration for the label on relationship arrows.\n * @type {{fill: string, height: number}}\n */\nexport const RELATIONSHIP_LABEL_RECT_CONFIG = {\n  fill: \"white\",\n  height: TEXT_SIZE + MARGIN\n};\n\n/* CURSOR SETTINGS ================================================================================================== */\n\n/**\n * Set the cursor style to pointer.\n * @constructor\n */\nexport function pointerCursor() {\n  document.getElementById(\"app\").style.cursor = \"pointer\";\n}\n\n/**\n * Set the cursor style to pointer.\n * @constructor\n */\nexport function moveCursor() {\n  document.getElementById(\"app\").style.cursor = \"move\";\n}\n\n/**\n * Set the cursor style to pointer.\n * @constructor\n */\nexport function textCursor() {\n  document.getElementById(\"app\").style.cursor = \"text\";\n}\n\n/**\n * Set the cursor style to default.\n * @constructor\n */\nexport function resetCursor() {\n  document.getElementById(\"app\").style.cursor = \"default\";\n}\n","import { values } from \"ramda\";\nimport { WIDTH } from \"../config/konvaConfigs\";\n\n/**\n * Determine the top left coordinate for a new shape so that it does not overlap with the existing shapes in the stage.\n * @param {object} coordinates dictionary of object keys mapped to their top left coordinates.\n * @param {object} bottomYs dictionary of object keys mapped to their absolute bottom y coordinate.\n * @param {object} heights dictionary of object keys mapped to height.\n * @returns {{x: number, y: number}} the coordinates for a newly added shapeID\n */\nexport default ({ coordinates, bottomYs, heights }) => {\n  const MARGIN = 16;\n  const stageWidth = document.getElementById(\"editorContainer\").offsetWidth;\n\n  /* Get the top y value of the bottom row. */\n  const yBottomRow = Math.max(\n    ...[0, ...Object.keys(coordinates).map(key => coordinates[key].y)]\n  );\n\n  /* Get the shapes on the bottom row. */\n  const bottomRow = Object.keys(coordinates).filter(\n    key => coordinates[key].y === yBottomRow\n  );\n\n  /* Get the deepest y value on the bottom row. */\n  const deepestY = Math.max(...[0, ...bottomRow.map(key => bottomYs[key])]);\n  /* Get the shape that has the deepest y value on the bottom row. */\n  const deepest = bottomRow.filter(key => bottomYs[key] >= deepestY);\n\n  /* Get the highest x value on the bottom row. */\n  const rightestX = Math.max(\n    ...[0, ...bottomRow.map(key => coordinates[key].x)]\n  );\n\n  /* If negative, add the shapeID to the right; if positive, a bit lower to the left. */\n  const newLine = rightestX + 2 * (MARGIN + WIDTH) > stageWidth;\n\n  /* Calculate the x coordinate. */\n  let x = MARGIN; // Default\n  if (!newLine) x += rightestX + (values(coordinates).length ? WIDTH : 0);\n\n  /* Calculate y coordinate. */\n  let y = MARGIN; // Default\n  if (deepest.length > 0) ({ y } = coordinates[deepest[0]]); // On the same row as the deepest shape.\n  /* Check if this shape has to be on a new line. */\n  if (newLine) {\n    y += MARGIN; // Add a margin between rows.\n    if (deepest.length > 0) y += heights[deepest[0]]; // Add the height of the deepest shape.\n  }\n  return { x, y };\n};\n","/**\n * Helper function to traverse over an object and apply a function.\n * @param {object} o object to be traversed.\n * @param {function} func function that is applied recursively to every property of the object.\n * @param {object} args arguments passed on to the function.\n *        NOTE: first two arguments are always the index and property.\n */\nexport default function traverse(o, func, ...args) {\n  for (const i in o) {\n    // eslint-disable-next-line babel/no-invalid-this\n    func.apply(this, [i, o[i], ...args]);\n    if (o[i] !== null && typeof o[i] === \"object\") {\n      traverse(o[i], func, ...args);\n    }\n  }\n}\n","/**\n * List of possible XML datatypes.\n */\nconst XML_DATATYPES = {\n  string: \"http://www.w3.org/2001/XMLSchema#string\",\n  boolean: \"http://www.w3.org/2001/XMLSchema#boolean\",\n  decimal: \"http://www.w3.org/2001/XMLSchema#decimal\",\n  float: \"http://www.w3.org/2001/XMLSchema#float\",\n  double: \"http://www.w3.org/2001/XMLSchema#double\",\n  integer: \"http://www.w3.org/2001/XMLSchema#integer\",\n  duration: \"http://www.w3.org/2001/XMLSchema#duration\",\n  dateTime: \"http://www.w3.org/2001/XMLSchema#dateTime\",\n  time: \"http://www.w3.org/2001/XMLSchema#time\",\n  date: \"http://www.w3.org/2001/XMLSchema#date\",\n  gYearMonth: \"http://www.w3.org/2001/XMLSchema#gYearMonth\",\n  gYear: \"http://www.w3.org/2001/XMLSchema#gYear\",\n  gMonthDay: \"http://www.w3.org/2001/XMLSchema#gMonthDay\",\n  gDay: \"http://www.w3.org/2001/XMLSchema#gDay\",\n  gMonth: \"http://www.w3.org/2001/XMLSchema#gMonth\",\n  hexBinary: \"http://www.w3.org/2001/XMLSchema#hexBinary\",\n  base64Binary: \"http://www.w3.org/2001/XMLSchema#base64Binary\",\n  anyURI: \"http://www.w3.org/2001/XMLSchema#anyURI\",\n  QName: \"http://www.w3.org/2001/XMLSchema#QName\"\n};\n\nexport { XML_DATATYPES as default };\n","import Vue from \"vue\";\nimport { clone } from \"ramda\";\nimport { IDENTIFIER } from \"./constants\";\n\nexport { default as getNonOverlappingCoordinates } from \"./getNonOverlappingCoordinates\"; // prettier-ignore\nexport { default as traverse } from \"./traverse\";\nexport { default as XML_DATATYPES } from \"./enums/xmlDatatypes\";\n\n/**\n * Prompt to download a file with the given filename and contents.\n * @param {string} filename the name of the file we want to download.\n * @param {string} contents the contents of the file.\n */\nexport function downloadFile(filename, contents) {\n  const element = document.createElement(\"a\");\n  element.setAttribute(\n    \"href\",\n    `data:text/plain;charset=utf-8,${encodeURIComponent(contents)}`\n  );\n  element.setAttribute(\"download\", filename);\n\n  element.style.display = \"none\";\n  document.body.appendChild(element);\n  element.click();\n  document.body.removeChild(element);\n}\n\n/**\n * Group the given dictionary by the given key.\n * @param dictionary a dictionary of objects.\n * @param key the key by which the objects should be grouped.\n * @param deleteKey boolean, indicates if the key should be removed from the object.\n */\nexport function groupBy(dictionary, key, deleteKey = false) {\n  const output = {};\n  for (const e of Object.keys(dictionary)) {\n    const elem = clone(dictionary[e]);\n    const k = elem[key];\n    if (k) {\n      if (!output[k]) output[k] = [];\n      if (deleteKey) Vue.delete(elem, key);\n      output[k].push(elem);\n    }\n  }\n  return output;\n}\n\n/**\n * Swap the keys and values from `namespaces`.\n */\nexport function swapKeyValue(object) {\n  const output = {};\n  Object.keys(object).map(key => {\n    output[object[key]] = key;\n  });\n  return output;\n}\n\n/**\n * Generate an UUID using the current set base URI and the `uuid/v4` generator.\n * @param baseURI\n * @returns {string}\n */\nexport function generateUUID(baseURI) {\n  if (baseURI === \"\") {\n    return `${IDENTIFIER}/${require(\"uuid/v4\")()}`;\n  } else {\n    return `${baseURI}${require(\"uuid/v4\")()}`;\n  }\n}\n","import { swapKeyValue } from \"./index\";\nimport { CUSTOM_URI } from \"../translation/terminology\";\n\n/**\n * Takes the name out of an URL if possible.\n * If the given argument is not a real URL, just return the argument.\n * @param {string} url the string we want to remove the URL from.\n * @returns {string} if possible, the name extracted from the given URL.\n */\nexport function urlToName(url) {\n  if (!url) return \"(undefined)\";\n  if (url.indexOf(\"#\") !== -1) return url.substring(url.indexOf(\"#\") + 1);\n  if (url.indexOf(\"/\") !== -1) return url.substring(url.lastIndexOf(\"/\") + 1);\n  if (url.indexOf(\":\") !== -1 && url.indexOf(\"://\") === -1)\n    return url.substring(url.indexOf(\":\") + 1); // in case of prefixes\n  return url;\n}\n\n/**\n * Change the URI in the given string to the matching prefix.\n * @param {object} namespaces the current set namespaces.\n * @param {string} string the string we want to change.\n * @returns {string} the input string with the URI replaced by a prefix.\n */\nexport function uriToPrefix(namespaces, string) {\n  const uri = extractUrl(string);\n  if (uri === CUSTOM_URI) return urlToName(string);\n  if (swapKeyValue(namespaces)[uri])\n    return string.replace(uri, `${swapKeyValue(namespaces)[uri]}:`);\n  return string;\n}\n\n/**\n * Change the prefix in the given string to the matching URI.\n * If there is no URI defined for the given prefix, return the string unchanged.\n * @param {object} namespaces the current set namespaces.\n * @param {string} string the string we want to change.\n * @returns {string} the input string with the prefix replaced by the URI.\n */\nexport function prefixToUri(namespaces, string) {\n  const prefix = extractPrefix(namespaces, string);\n  if (namespaces[prefix])\n    return string.replace(\n      `${extractPrefix(namespaces, string)}:`,\n      namespaces[prefix]\n    );\n  return string;\n}\n\n/**\n * Get the URL from a string.\n * @param {string} string the string we want to extract the URL from.\n * @returns {string} the URL from the given string.\n */\nexport function extractUrl(string) {\n  const chars = \"#/\";\n  for (const c of chars) {\n    if (string.indexOf(c) !== -1) {\n      return string.substring(0, string.lastIndexOf(c) + 1);\n    }\n  }\n  return \"\";\n}\n\n/**\n * Get the prefix from a string.\n * @param {object} namespaces the current set namespaces.\n * @param {string} string the string we want to extract the prefix from.\n * @returns {string} the prefix from the given string.\n */\nexport function extractPrefix(namespaces, string) {\n  const prefixes = Object.keys(namespaces);\n  for (const prefix of prefixes) {\n    if (string.indexOf(`${prefix}:`) === 0) return prefix;\n  }\n  return \"\";\n}\n\n/**\n * Check if the given string is an URL.\n * @param {string} string the string we want to check.\n * @returns {boolean} `true` if the given string is an URL.\n */\nexport function isUrl(string) {\n  return string.includes(\"/\");\n}\n","import { MAX_LENGTH } from \"../config/konvaConfigs\";\n\n/**\n * Capitalize the first letter of the given string.\n * @param {string} string the string we want to edit.\n * @returns {string} the given string with its first letter capitalized.\n */\nexport function capitalizeFirstLetter(string) {\n  return string[0].toUpperCase() + string.slice(1);\n}\n\n/**\n * Abbreviate the given string to the given maximum length.\n * This will use the first and last part of the string and put dots in between.\n * If the string is shorter than the given length, it will return the unchanged string.\n * @param {string} string the string we want to abbreviate.\n * @param {number} maxLength the maximum allowed string length. Default is `MAX_LENGTH`.\n * @returns {string} the abbreviated string.\n */\nexport function abbreviate(string, maxLength = MAX_LENGTH) {\n  if (string.length > maxLength) {\n    const half = Math.floor(maxLength / 2) - 1;\n    return `${string.slice(0, half)}...${string.slice(string.length - half)}`;\n  }\n  return string;\n}\n","<template>\n  <div>\n    <sui-modal\n      v-model=\"$store.state.mData.showValidationReportModal\"\n      @submit.prevent=\"toggleModal\"\n    >\n      <sui-modal-header>\n        Validation report\n      </sui-modal-header>\n      <sui-modal-content :scrolling=\"true\">\n        <sui-segment basic>\n          <div v-if=\"!conforms()\">\n            <h3 is=\"sui-header\">\n              <sui-icon name=\"cog\" />\n              <sui-header-content>General</sui-header-content>\n            </h3>\n            <sui-divider></sui-divider>\n          </div>\n\n          <sui-segment v-if=\"conforms()\" color=\"green\">\n            This data conforms to the given model.\n          </sui-segment>\n\n          <div v-if=\"!conforms()\">\n            <sui-segment color=\"red\">\n              This data does not conform to the given model.\n            </sui-segment>\n\n            <p>The following shapes do not conform:</p>\n            <ul>\n              <li v-for=\"value of getGeneralReport().nodes\" :key=\"value\">\n                {{ getPrefixedUri(value) }}\n              </li>\n            </ul>\n            <p>More details can be found below.</p>\n          </div>\n        </sui-segment>\n\n        <sui-segment v-if=\"!conforms()\" basic>\n          <h3 is=\"sui-header\">\n            <sui-icon name=\"cogs\" />\n            <sui-header-content>Details</sui-header-content>\n          </h3>\n\n          <sui-divider></sui-divider>\n\n          <sui-segment\n            v-for=\"(results, node) of getResultsByNode()\"\n            :key=\"node\"\n            basic\n          >\n            <h4 is=\"sui-header\">{{ node }}</h4>\n            <sui-segments>\n              <sui-segment v-for=\"result of results\" :key=\"result.shape\">\n                <sui-grid>\n                  <sui-grid-row v-for=\"(value, key) of result\" :key=\"key\">\n                    <sui-grid-column :width=\"1\"></sui-grid-column>\n\n                    <sui-grid-column :width=\"3\">\n                      <h5 is=\"sui-header\">{{ cfl(key) }}</h5>\n                    </sui-grid-column>\n\n                    <sui-grid-column :width=\"12\">{{ value }}</sui-grid-column>\n                  </sui-grid-row>\n                </sui-grid>\n              </sui-segment>\n            </sui-segments>\n          </sui-segment>\n        </sui-segment>\n      </sui-modal-content>\n      <sui-modal-actions>\n        <sui-button id=\"close\" tab-index=\"0\" @click=\"toggleModal\">\n          Close\n        </sui-button>\n      </sui-modal-actions>\n    </sui-modal>\n  </div>\n</template>\n\n<script>\nimport { SHACL_URI } from \"../../util/constants\";\nimport { uriToPrefix } from \"../../util/urlParser\";\nimport { groupBy } from \"../../util\";\nimport { capitalizeFirstLetter } from \"../../util/strings\";\n\nexport default {\n  name: \"ValidationReportModal\",\n  props: {\n    report: {\n      required: true,\n      type: Object\n    }\n  },\n  mounted() {\n    /* Focus the clear button when the modal is called. */\n    const self = this;\n    this.$store.watch(\n      () => self.$store.state.mData.showValidationReportModal,\n      () => {\n        if (self.$store.state.mData.showValidationReportModal)\n          document.getElementById(\"close\").focus();\n      }\n    );\n  },\n  methods: {\n    /**\n     * Toggle the visibility of the modal.\n     */\n    toggleModal() {\n      this.$store.commit(\"toggleValidationReport\");\n    },\n\n    /**\n     * Check if the data conforms to the model.\n     * @returns {boolean} indicates whether the data conforms to the model.\n     */\n    conforms() {\n      return (\n        this.getGeneralReport().conforms &&\n        this.getGeneralReport().conforms === \"true\"\n      );\n    },\n\n    /**\n     * Capitalize the first letter of the given string.\n     * Used because `capitalizeFirstLetter` cannot be called directly from the HTML.\n     * @param {string} string the string we want to edit.\n     * @returns {string} the given string with its first letter capitalized.\n     */\n    cfl(string) {\n      return capitalizeFirstLetter(string);\n    },\n\n    /**\n     * Get the general report of the validation report as an object.\n     * This object is used to populate the validation modal.\n     * @returns {object} a report object.\n     */\n    getGeneralReport() {\n      const { validationNode } = this.$props.report;\n      if (validationNode) {\n        const generalReport = {};\n        generalReport.conforms =\n          validationNode[`${SHACL_URI}conforms`][0][\"@value\"];\n\n        /* Only generate the results if the data does not conform. */\n        if (generalReport.conforms !== \"true\") {\n          generalReport.nodeIDs = [];\n          generalReport.nodes = [];\n\n          for (const node of validationNode[`${SHACL_URI}result`]) {\n            generalReport.nodeIDs.push(node[\"@id\"]);\n            generalReport.nodes.push(\n              this.getSimpleResults()[node[\"@id\"]][\"node\"]\n            );\n          }\n          generalReport.nodeIDs = new Set(generalReport.nodeIDs);\n          generalReport.nodes = new Set(generalReport.nodes);\n        }\n        return generalReport;\n      }\n      return {}; // No validation report.\n    },\n\n    /**\n     * Get the validation results as a dictionary.\n     * This object is used to populate the validation modal.\n     * @returns {object} a dictionary of the shape IDs to their validation results.\n     */\n    getValidationResults() {\n      const { graph } = this.$props.report;\n      if (graph) {\n        const validationResults = {};\n        for (const result of graph) {\n          if (result[\"@type\"][0].includes(\"Result\")) {\n            validationResults[result[\"@id\"]] = {\n              node: result[`${SHACL_URI}focusNode`][0][\"@id\"],\n              message: result[`${SHACL_URI}resultMessage`][0][\"@value\"],\n              path: result[`${SHACL_URI}resultPath`][0][\"@id\"],\n              severity: result[`${SHACL_URI}resultSeverity`][0][\"@id\"],\n              constraint:\n                result[`${SHACL_URI}sourceConstraintComponent`][0][\"@id\"],\n              shape: result[`${SHACL_URI}sourceShape`][0][\"@id\"],\n              valueType: result[`${SHACL_URI}value`][0][\"@type\"],\n              value: result[`${SHACL_URI}value`][0][\"@value\"]\n            };\n          }\n        }\n        return validationResults;\n      }\n      return {};\n    },\n\n    /**\n     * Get the validation results as a dictionary without URIs.\n     * This object is used to populate the validation modal.\n     * @returns {object}\n     */\n    getSimpleResults() {\n      const results = this.getValidationResults();\n      if (results) {\n        const simple = {};\n        for (const key of Object.keys(results)) {\n          const r = results[key];\n          simple[key] = {};\n          for (const constr of Object.keys(r)) {\n            if (r[constr]) {\n              const name = uriToPrefix(\n                this.$store.state.mConfig.namespaces,\n                r[constr]\n              );\n              if (name !== \"(undefined)\") simple[key][constr] = name;\n            }\n          }\n          simple[key].message = r.message;\n        }\n        return simple;\n      }\n      return {};\n    },\n\n    /**\n     * Get the validation results grouped by node.\n     * @returns {object} the validation result object grouped using the \"node\" key.\n     */\n    getResultsByNode() {\n      return groupBy(this.getSimpleResults(), \"node\", true);\n    },\n\n    /**\n     * Change the URI in the given string to a prefix.\n     * @param {string} string the string we want to change.\n     * @returns {string} the given string with the namespace replaced by the corresponding prefix.\n     */\n    getPrefixedUri(string) {\n      return uriToPrefix(this.$store.getters.namespaces, string);\n    }\n  }\n};\n</script>\n\n<style scoped></style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ValidationReportModal.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ValidationReportModal.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ValidationReportModal.vue?vue&type=template&id=238e234c&scoped=true&\"\nimport script from \"./ValidationReportModal.vue?vue&type=script&lang=js&\"\nexport * from \"./ValidationReportModal.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"238e234c\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('sui-modal',{model:{value:(_vm.$store.state.mShape.mConstraint.mModal.show),callback:function ($$v) {_vm.$set(_vm.$store.state.mShape.mConstraint.mModal, \"show\", $$v)},expression:\"$store.state.mShape.mConstraint.mModal.show\"}},[_c('sui-modal-header',[_vm._v(\"\\n    \"+_vm._s(_vm.$props.modalProperties.editing ? \"Edit Predicate\" : \"Add Predicate\")+\"\\n  \")]),_c('sui-modal-content',{attrs:{\"scrolling\":\"\"}},[_c('sui-form',{on:{\"submit\":function($event){$event.preventDefault();return (function () {})($event)}}},[(!_vm.$props.modalProperties.editing)?_c('sui-form-field',[_c('label',{attrs:{\"for\":\"search\"}},[_vm._v(\"Search\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.values.search),expression:\"values.search\"}],attrs:{\"id\":\"search\"},domProps:{\"value\":(_vm.values.search)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.values, \"search\", $event.target.value)}}})]):_vm._e(),_c('predicate-table',{attrs:{\"contents\":_vm.table(),\"filter\":_vm.values.search,\"selected\":_vm.$props.modalProperties.selected,\"editing\":_vm.$props.modalProperties.editing,\"sorting\":_vm.$store.state.mShape.mConstraint.mModal.sorting}}),_c('br'),(_vm.$store.getters.objects(_vm.$props.modalProperties.selected))?_c('sui-form-field',{staticClass:\"field\",attrs:{\"inline\":true}},[_c('label',[_vm._v(\"Value\")]),((_vm.getType())==='checkbox'&&(!_vm.showDataTypes()))?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.values[_vm.getModel()]),expression:\"values[getModel()]\"}],attrs:{\"id\":\"field\",\"list\":_vm.getDataList(),\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.values[_vm.getModel()])?_vm._i(_vm.values[_vm.getModel()],null)>-1:(_vm.values[_vm.getModel()])},on:{\"keyup\":_vm.handleKeyPress,\"change\":function($event){var $$a=_vm.values[_vm.getModel()],$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.values, _vm.getModel(), $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.values, _vm.getModel(), $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.values, _vm.getModel(), $$c)}}}}):((_vm.getType())==='radio'&&(!_vm.showDataTypes()))?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.values[_vm.getModel()]),expression:\"values[getModel()]\"}],attrs:{\"id\":\"field\",\"list\":_vm.getDataList(),\"type\":\"radio\"},domProps:{\"checked\":_vm._q(_vm.values[_vm.getModel()],null)},on:{\"keyup\":_vm.handleKeyPress,\"change\":function($event){_vm.$set(_vm.values, _vm.getModel(), null)}}}):(!_vm.showDataTypes())?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.values[_vm.getModel()]),expression:\"values[getModel()]\"}],attrs:{\"id\":\"field\",\"list\":_vm.getDataList(),\"type\":_vm.getType()},domProps:{\"value\":(_vm.values[_vm.getModel()])},on:{\"keyup\":_vm.handleKeyPress,\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.values, _vm.getModel(), $event.target.value)}}}):_vm._e(),(_vm.showPaths())?_c('datalist',{attrs:{\"id\":\"pathList\",\"type\":_vm.getType()}},_vm._l((_vm.getPathOptions()),function(key){return _c('option',{key:key,domProps:{\"value\":key}},[_vm._v(\"\\n            \"+_vm._s(_vm.getName(key))+\"\\n          \")])}),0):_vm._e(),(_vm.showShapes())?_c('datalist',{attrs:{\"id\":\"shapeList\",\"type\":_vm.getType()}},_vm._l((_vm.getShapeOptions()),function(key){return _c('option',{key:_vm.getOptionID(key),domProps:{\"value\":_vm.getOptionID(key)}})}),0):_vm._e(),(_vm.showDataTypes())?_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.values[_vm.getModel()]),expression:\"values[getModel()]\"}],attrs:{\"id\":\"dataTypes\",\"type\":_vm.getType()},on:{\"keyup\":_vm.handleKeyPress,\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(_vm.values, _vm.getModel(), $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((_vm.getDataTypes()),function(key){return _c('option',{key:key,domProps:{\"value\":key}},[_vm._v(\"\\n            \"+_vm._s(_vm.getName(key))+\"\\n          \")])}),0):_vm._e()]):_vm._e()],1),(_vm.error)?_c('sui-segment',{attrs:{\"color\":\"red\"}},[_vm._v(\"\\n      Some constraints aren't supported yet by the internal model.\\n    \")]):_vm._e()],1),_c('sui-modal-actions',[_c('sui-button',{attrs:{\"tab-index\":\"0\"},on:{\"click\":_vm.toggleModal}},[_vm._v(\"Cancel\")]),_c('sui-button',{attrs:{\"tab-index\":\"0\",\"positive\":\"\",\"disabled\":_vm.$props.modalProperties.selected === '' || _vm.values.input === ''},on:{\"click\":_vm.exit}},[_vm._v(\"\\n      \"+_vm._s(_vm.$props.modalProperties.editing ? \"Confirm\" : \"Add\")+\"\\n    \")])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { TERM } from \"../../translation/terminology\";\nimport { LABEL } from \"../constants\";\n\n/**\n * The different types of values.\n * @type {{ID: string, VALUE: string, ID_LIST: string, LIST: string, VALUE_LIST: string}}\n */\nexport const ValueTypes = {\n  ID: \"id\",\n  VALUE: \"type\",\n  LIST: \"List\",\n  ID_LIST: \"idList\",\n  VALUE_LIST: \"valueList\"\n};\n\nconst ids = new Set([\n  TERM.id,\n  TERM.class,\n  TERM.property,\n  TERM.targetNode,\n  TERM.datatype,\n  TERM.nodeKind,\n  TERM.targetObjectsOf,\n  TERM.equals,\n  TERM.disjoint,\n  TERM.lessThan,\n  TERM.lessThanOrEquals,\n  TERM.not,\n  TERM.node,\n  TERM.path,\n  TERM.pattern,\n  TERM.qualifiedMaxCount,\n  TERM.qualifiedMinCount,\n  TERM.qualifiedValueShape,\n  TERM.targetClass\n]);\nconst values = new Set([\n  TERM.closed,\n  TERM.hasValue,\n  TERM.minCount,\n  TERM.maxCount,\n  TERM.minExclusive,\n  TERM.maxExclusive,\n  TERM.minInclusive,\n  TERM.maxInclusive,\n  TERM.minLength,\n  TERM.maxLength,\n  TERM.name,\n  TERM.uniqueLang,\n  TERM.description,\n  LABEL\n]);\nconst valueLists = new Set([TERM.ignoredProperties, TERM.languageIn, TERM.in]);\nconst idLists = new Set([TERM.and, TERM.or, TERM.xone]);\n\n/**\n * Get the value type of the given predicate.\n * @param {string} predicate the predicate we want to determine the type of.\n * @returns {string} either \"id\", \"type\", or \"valueList\" or \"idList\"\n */\nexport default function getValueType(predicate) {\n  if (ids.has(predicate)) return ValueTypes.ID;\n  if (values.has(predicate)) return ValueTypes.VALUE;\n  if (valueLists.has(predicate)) return ValueTypes.VALUE_LIST;\n  if (idLists.has(predicate)) return ValueTypes.ID_LIST;\n}\n\n/**\n * Determine the value type of the given constraint object.\n * @param {object} constraint constraint object with values.\n * @returns {string|null} the value type of this constraint.\n */\nexport function getValueTypeFromConstraint(constraint) {\n  if (constraint.length > 0) {\n    if (constraint.length > 1) return ValueTypes.ID_LIST;\n\n    let value = constraint[0];\n    if (value[\"@list\"]) {\n      value = value[\"@list\"][0];\n      if (value[\"@id\"]) return ValueTypes.ID_LIST;\n      if (value[\"@value\"]) return ValueTypes.VALUE_LIST;\n    } else {\n      if (value[\"@id\"]) return ValueTypes.ID;\n      if (value[\"@value\"]) return ValueTypes.VALUE;\n    }\n  }\n  return null;\n}\n","/** This dictionary maps every internal term to the SHACL equivalent and vice versa. */\nconst dictionary = {\n  SHACL: {\n    \"https://2019.summerofcode.be/unshacled#AbstractResult\":\n      \"https://www.w3.org/ns/shacl#AbstractResult\",\n    \"https://2019.summerofcode.be/unshacled#AndConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#AndConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#AndConstraintComponent-and\":\n      \"https://www.w3.org/ns/shacl#AndConstraintComponent-and\",\n    \"https://2019.summerofcode.be/unshacled#BlankNode\":\n      \"https://www.w3.org/ns/shacl#BlankNode\",\n    \"https://2019.summerofcode.be/unshacled#BlankNodeOrIRI\":\n      \"https://www.w3.org/ns/shacl#BlankNodeOrIRI\",\n    \"https://2019.summerofcode.be/unshacled#BlankNodeOrLiteral\":\n      \"https://www.w3.org/ns/shacl#BlankNodeOrLiteral\",\n    \"https://2019.summerofcode.be/unshacled#ClassConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#ClassConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#ClassConstraintComponent-class\":\n      \"https://www.w3.org/ns/shacl#ClassConstraintComponent-class\",\n    \"https://2019.summerofcode.be/unshacled#ClosedConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#ClosedConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#ClosedConstraintComponent-closed\":\n      \"https://www.w3.org/ns/shacl#ClosedConstraintComponent-closed\",\n    \"https://2019.summerofcode.be/unshacled#ClosedConstraintComponent-ignoredProperties\":\n      \"https://www.w3.org/ns/shacl#ClosedConstraintComponent-ignoredProperties\",\n    \"https://2019.summerofcode.be/unshacled#ConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#ConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#DatatypeConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#DatatypeConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#DatatypeConstraintComponent-datatype\":\n      \"https://www.w3.org/ns/shacl#DatatypeConstraintComponent-datatype\",\n    \"https://2019.summerofcode.be/unshacled#DisjointConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#DisjointConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#DisjointConstraintComponent-disjoint\":\n      \"https://www.w3.org/ns/shacl#DisjointConstraintComponent-disjoint\",\n    \"https://2019.summerofcode.be/unshacled#EqualsConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#EqualsConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#EqualsConstraintComponent-equals\":\n      \"https://www.w3.org/ns/shacl#EqualsConstraintComponent-equals\",\n    \"https://2019.summerofcode.be/unshacled#ExpressionConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#ExpressionConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#ExpressionConstraintComponent-expression\":\n      \"https://www.w3.org/ns/shacl#ExpressionConstraintComponent-expression\",\n    \"https://2019.summerofcode.be/unshacled#Function\":\n      \"https://www.w3.org/ns/shacl#Function\",\n    \"https://2019.summerofcode.be/unshacled#HasValueConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#HasValueConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#HasValueConstraintComponent-hasValue\":\n      \"https://www.w3.org/ns/shacl#HasValueConstraintComponent-hasValue\",\n    \"https://2019.summerofcode.be/unshacled#IRI\":\n      \"https://www.w3.org/ns/shacl#IRI\",\n    \"https://2019.summerofcode.be/unshacled#IRIOrLiteral\":\n      \"https://www.w3.org/ns/shacl#IRIOrLiteral\",\n    \"https://2019.summerofcode.be/unshacled#InConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#InConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#InConstraintComponent-in\":\n      \"https://www.w3.org/ns/shacl#InConstraintComponent-in\",\n    \"https://2019.summerofcode.be/unshacled#Info\":\n      \"https://www.w3.org/ns/shacl#Info\",\n    \"https://2019.summerofcode.be/unshacled#JSConstraint\":\n      \"https://www.w3.org/ns/shacl#JSConstraint\",\n    \"https://2019.summerofcode.be/unshacled#JSConstraint-js\":\n      \"https://www.w3.org/ns/shacl#JSConstraint-js\",\n    \"https://2019.summerofcode.be/unshacled#JSConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#JSConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#JSExecutable\":\n      \"https://www.w3.org/ns/shacl#JSExecutable\",\n    \"https://2019.summerofcode.be/unshacled#JSFunction\":\n      \"https://www.w3.org/ns/shacl#JSFunction\",\n    \"https://2019.summerofcode.be/unshacled#JSLibrary\":\n      \"https://www.w3.org/ns/shacl#JSLibrary\",\n    \"https://2019.summerofcode.be/unshacled#JSRule\":\n      \"https://www.w3.org/ns/shacl#JSRule\",\n    \"https://2019.summerofcode.be/unshacled#JSTarget\":\n      \"https://www.w3.org/ns/shacl#JSTarget\",\n    \"https://2019.summerofcode.be/unshacled#JSTargetType\":\n      \"https://www.w3.org/ns/shacl#JSTargetType\",\n    \"https://2019.summerofcode.be/unshacled#JSValidator\":\n      \"https://www.w3.org/ns/shacl#JSValidator\",\n    \"https://2019.summerofcode.be/unshacled#LanguageInConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#LanguageInConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#LanguageInConstraintComponent-languageIn\":\n      \"https://www.w3.org/ns/shacl#LanguageInConstraintComponent-languageIn\",\n    \"https://2019.summerofcode.be/unshacled#LessThanConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#LessThanConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#LessThanConstraintComponent-lessThan\":\n      \"https://www.w3.org/ns/shacl#LessThanConstraintComponent-lessThan\",\n    \"https://2019.summerofcode.be/unshacled#LessThanOrEqualsConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#LessThanOrEqualsConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#LessThanOrEqualsConstraintComponent-lessThanOrEquals\":\n      \"https://www.w3.org/ns/shacl#LessThanOrEqualsConstraintComponent-lessThanOrEquals\",\n    \"https://2019.summerofcode.be/unshacled#Literal\":\n      \"https://www.w3.org/ns/shacl#Literal\",\n    \"https://2019.summerofcode.be/unshacled#MaxCountConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#MaxCountConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#MaxCountConstraintComponent-maxCount\":\n      \"https://www.w3.org/ns/shacl#MaxCountConstraintComponent-maxCount\",\n    \"https://2019.summerofcode.be/unshacled#MaxExclusiveConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#MaxExclusiveConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#MaxExclusiveConstraintComponent-maxExclusive\":\n      \"https://www.w3.org/ns/shacl#MaxExclusiveConstraintComponent-maxExclusive\",\n    \"https://2019.summerofcode.be/unshacled#MaxInclusiveConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#MaxInclusiveConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#MaxInclusiveConstraintComponent-maxInclusive\":\n      \"https://www.w3.org/ns/shacl#MaxInclusiveConstraintComponent-maxInclusive\",\n    \"https://2019.summerofcode.be/unshacled#MaxLengthConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#MaxLengthConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#MaxLengthConstraintComponent-maxLength\":\n      \"https://www.w3.org/ns/shacl#MaxLengthConstraintComponent-maxLength\",\n    \"https://2019.summerofcode.be/unshacled#MinCountConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#MinCountConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#MinCountConstraintComponent-minCount\":\n      \"https://www.w3.org/ns/shacl#MinCountConstraintComponent-minCount\",\n    \"https://2019.summerofcode.be/unshacled#MinExclusiveConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#MinExclusiveConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#MinExclusiveConstraintComponent-minExclusive\":\n      \"https://www.w3.org/ns/shacl#MinExclusiveConstraintComponent-minExclusive\",\n    \"https://2019.summerofcode.be/unshacled#MinInclusiveConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#MinInclusiveConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#MinInclusiveConstraintComponent-minInclusive\":\n      \"https://www.w3.org/ns/shacl#MinInclusiveConstraintComponent-minInclusive\",\n    \"https://2019.summerofcode.be/unshacled#MinLengthConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#MinLengthConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#MinLengthConstraintComponent-minLength\":\n      \"https://www.w3.org/ns/shacl#MinLengthConstraintComponent-minLength\",\n    \"https://2019.summerofcode.be/unshacled#NodeConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#NodeConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#NodeConstraintComponent-node\":\n      \"https://www.w3.org/ns/shacl#NodeConstraintComponent-node\",\n    \"https://2019.summerofcode.be/unshacled#NodeKind\":\n      \"https://www.w3.org/ns/shacl#NodeKind\",\n    \"https://2019.summerofcode.be/unshacled#NodeKindConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#NodeKindConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#NodeKindConstraintComponent-nodeKind\":\n      \"https://www.w3.org/ns/shacl#NodeKindConstraintComponent-nodeKind\",\n    \"https://2019.summerofcode.be/unshacled#NodeShape\":\n      \"https://www.w3.org/ns/shacl#NodeShape\",\n    \"https://2019.summerofcode.be/unshacled#NotConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#NotConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#NotConstraintComponent-not\":\n      \"https://www.w3.org/ns/shacl#NotConstraintComponent-not\",\n    \"https://2019.summerofcode.be/unshacled#OrConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#OrConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#OrConstraintComponent-or\":\n      \"https://www.w3.org/ns/shacl#OrConstraintComponent-or\",\n    \"https://2019.summerofcode.be/unshacled#Parameter\":\n      \"https://www.w3.org/ns/shacl#Parameter\",\n    \"https://2019.summerofcode.be/unshacled#Parameterizable\":\n      \"https://www.w3.org/ns/shacl#Parameterizable\",\n    \"https://2019.summerofcode.be/unshacled#PatternConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#PatternConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#PatternConstraintComponent-flags\":\n      \"https://www.w3.org/ns/shacl#PatternConstraintComponent-flags\",\n    \"https://2019.summerofcode.be/unshacled#PatternConstraintComponent-pattern\":\n      \"https://www.w3.org/ns/shacl#PatternConstraintComponent-pattern\",\n    \"https://2019.summerofcode.be/unshacled#PrefixDeclaration\":\n      \"https://www.w3.org/ns/shacl#PrefixDeclaration\",\n    \"https://2019.summerofcode.be/unshacled#PropertyConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#PropertyConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#PropertyConstraintComponent-property\":\n      \"https://www.w3.org/ns/shacl#PropertyConstraintComponent-property\",\n    \"https://2019.summerofcode.be/unshacled#PropertyGroup\":\n      \"https://www.w3.org/ns/shacl#PropertyGroup\",\n    \"https://2019.summerofcode.be/unshacled#PropertyShape\":\n      \"https://www.w3.org/ns/shacl#PropertyShape\",\n    \"https://2019.summerofcode.be/unshacled#QualifiedMaxCountConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#QualifiedMaxCountConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#QualifiedMaxCountConstraintComponent-qualifiedMaxCount\":\n      \"https://www.w3.org/ns/shacl#QualifiedMaxCountConstraintComponent-qualifiedMaxCount\",\n    \"https://2019.summerofcode.be/unshacled#QualifiedMaxCountConstraintComponent-qualifiedValueShape\":\n      \"https://www.w3.org/ns/shacl#QualifiedMaxCountConstraintComponent-qualifiedValueShape\",\n    \"https://2019.summerofcode.be/unshacled#QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint\":\n      \"https://www.w3.org/ns/shacl#QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint\",\n    \"https://2019.summerofcode.be/unshacled#QualifiedMinCountConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#QualifiedMinCountConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#QualifiedMinCountConstraintComponent-qualifiedMinCount\":\n      \"https://www.w3.org/ns/shacl#QualifiedMinCountConstraintComponent-qualifiedMinCount\",\n    \"https://2019.summerofcode.be/unshacled#QualifiedMinCountConstraintComponent-qualifiedValueShape\":\n      \"https://www.w3.org/ns/shacl#QualifiedMinCountConstraintComponent-qualifiedValueShape\",\n    \"https://2019.summerofcode.be/unshacled#QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint\":\n      \"https://www.w3.org/ns/shacl#QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint\",\n    \"https://2019.summerofcode.be/unshacled#ResultAnnotation\":\n      \"https://www.w3.org/ns/shacl#ResultAnnotation\",\n    \"https://2019.summerofcode.be/unshacled#Rule\":\n      \"https://www.w3.org/ns/shacl#Rule\",\n    \"https://2019.summerofcode.be/unshacled#SPARQLAskExecutable\":\n      \"https://www.w3.org/ns/shacl#SPARQLAskExecutable\",\n    \"https://2019.summerofcode.be/unshacled#SPARQLAskValidator\":\n      \"https://www.w3.org/ns/shacl#SPARQLAskValidator\",\n    \"https://2019.summerofcode.be/unshacled#SPARQLConstraint\":\n      \"https://www.w3.org/ns/shacl#SPARQLConstraint\",\n    \"https://2019.summerofcode.be/unshacled#SPARQLConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#SPARQLConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#SPARQLConstraintComponent-sparql\":\n      \"https://www.w3.org/ns/shacl#SPARQLConstraintComponent-sparql\",\n    \"https://2019.summerofcode.be/unshacled#SPARQLConstructExecutable\":\n      \"https://www.w3.org/ns/shacl#SPARQLConstructExecutable\",\n    \"https://2019.summerofcode.be/unshacled#SPARQLExecutable\":\n      \"https://www.w3.org/ns/shacl#SPARQLExecutable\",\n    \"https://2019.summerofcode.be/unshacled#SPARQLFunction\":\n      \"https://www.w3.org/ns/shacl#SPARQLFunction\",\n    \"https://2019.summerofcode.be/unshacled#SPARQLRule\":\n      \"https://www.w3.org/ns/shacl#SPARQLRule\",\n    \"https://2019.summerofcode.be/unshacled#SPARQLSelectExecutable\":\n      \"https://www.w3.org/ns/shacl#SPARQLSelectExecutable\",\n    \"https://2019.summerofcode.be/unshacled#SPARQLSelectValidator\":\n      \"https://www.w3.org/ns/shacl#SPARQLSelectValidator\",\n    \"https://2019.summerofcode.be/unshacled#SPARQLTarget\":\n      \"https://www.w3.org/ns/shacl#SPARQLTarget\",\n    \"https://2019.summerofcode.be/unshacled#SPARQLTargetType\":\n      \"https://www.w3.org/ns/shacl#SPARQLTargetType\",\n    \"https://2019.summerofcode.be/unshacled#SPARQLUpdateExecutable\":\n      \"https://www.w3.org/ns/shacl#SPARQLUpdateExecutable\",\n    \"https://2019.summerofcode.be/unshacled#Severity\":\n      \"https://www.w3.org/ns/shacl#Severity\",\n    \"https://2019.summerofcode.be/unshacled#Shape\":\n      \"https://www.w3.org/ns/shacl#Shape\",\n    \"https://2019.summerofcode.be/unshacled#Target\":\n      \"https://www.w3.org/ns/shacl#Target\",\n    \"https://2019.summerofcode.be/unshacled#TargetType\":\n      \"https://www.w3.org/ns/shacl#TargetType\",\n    \"https://2019.summerofcode.be/unshacled#TripleRule\":\n      \"https://www.w3.org/ns/shacl#TripleRule\",\n    \"https://2019.summerofcode.be/unshacled#UniqueLangConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#UniqueLangConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#UniqueLangConstraintComponent-uniqueLang\":\n      \"https://www.w3.org/ns/shacl#UniqueLangConstraintComponent-uniqueLang\",\n    \"https://2019.summerofcode.be/unshacled#ValidationReport\":\n      \"https://www.w3.org/ns/shacl#ValidationReport\",\n    \"https://2019.summerofcode.be/unshacled#ValidationResult\":\n      \"https://www.w3.org/ns/shacl#ValidationResult\",\n    \"https://2019.summerofcode.be/unshacled#Validator\":\n      \"https://www.w3.org/ns/shacl#Validator\",\n    \"https://2019.summerofcode.be/unshacled#Violation\":\n      \"https://www.w3.org/ns/shacl#Violation\",\n    \"https://2019.summerofcode.be/unshacled#Warning\":\n      \"https://www.w3.org/ns/shacl#Warning\",\n    \"https://2019.summerofcode.be/unshacled#XoneConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#XoneConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#XoneConstraintComponent-xone\":\n      \"https://www.w3.org/ns/shacl#XoneConstraintComponent-xone\",\n    \"https://2019.summerofcode.be/unshacled#alternativePath\":\n      \"https://www.w3.org/ns/shacl#alternativePath\",\n    \"https://2019.summerofcode.be/unshacled#and\":\n      \"https://www.w3.org/ns/shacl#and\",\n    \"https://2019.summerofcode.be/unshacled#annotationProperty\":\n      \"https://www.w3.org/ns/shacl#annotationProperty\",\n    \"https://2019.summerofcode.be/unshacled#annotationValue\":\n      \"https://www.w3.org/ns/shacl#annotationValue\",\n    \"https://2019.summerofcode.be/unshacled#annotationVarName\":\n      \"https://www.w3.org/ns/shacl#annotationVarName\",\n    \"https://2019.summerofcode.be/unshacled#ask\":\n      \"https://www.w3.org/ns/shacl#ask\",\n    \"https://2019.summerofcode.be/unshacled#class\":\n      \"https://www.w3.org/ns/shacl#class\",\n    \"https://2019.summerofcode.be/unshacled#closed\":\n      \"https://www.w3.org/ns/shacl#closed\",\n    \"https://2019.summerofcode.be/unshacled#condition\":\n      \"https://www.w3.org/ns/shacl#condition\",\n    \"https://2019.summerofcode.be/unshacled#conforms\":\n      \"https://www.w3.org/ns/shacl#conforms\",\n    \"https://2019.summerofcode.be/unshacled#construct\":\n      \"https://www.w3.org/ns/shacl#construct\",\n    \"https://2019.summerofcode.be/unshacled#datatype\":\n      \"https://www.w3.org/ns/shacl#datatype\",\n    \"https://2019.summerofcode.be/unshacled#deactivated\":\n      \"https://www.w3.org/ns/shacl#deactivated\",\n    \"https://2019.summerofcode.be/unshacled#declare\":\n      \"https://www.w3.org/ns/shacl#declare\",\n    \"https://2019.summerofcode.be/unshacled#defaultValue\":\n      \"https://www.w3.org/ns/shacl#defaultValue\",\n    \"https://2019.summerofcode.be/unshacled#description\":\n      \"https://www.w3.org/ns/shacl#description\",\n    \"https://2019.summerofcode.be/unshacled#detail\":\n      \"https://www.w3.org/ns/shacl#detail\",\n    \"https://2019.summerofcode.be/unshacled#disjoint\":\n      \"https://www.w3.org/ns/shacl#disjoint\",\n    \"https://2019.summerofcode.be/unshacled#entailment\":\n      \"https://www.w3.org/ns/shacl#entailment\",\n    \"https://2019.summerofcode.be/unshacled#equals\":\n      \"https://www.w3.org/ns/shacl#equals\",\n    \"https://2019.summerofcode.be/unshacled#expression\":\n      \"https://www.w3.org/ns/shacl#expression\",\n    \"https://2019.summerofcode.be/unshacled#filterShape\":\n      \"https://www.w3.org/ns/shacl#filterShape\",\n    \"https://2019.summerofcode.be/unshacled#flags\":\n      \"https://www.w3.org/ns/shacl#flags\",\n    \"https://2019.summerofcode.be/unshacled#focusNode\":\n      \"https://www.w3.org/ns/shacl#focusNode\",\n    \"https://2019.summerofcode.be/unshacled#group\":\n      \"https://www.w3.org/ns/shacl#group\",\n    \"https://2019.summerofcode.be/unshacled#hasValue\":\n      \"https://www.w3.org/ns/shacl#hasValue\",\n    \"https://2019.summerofcode.be/unshacled#ignoredProperties\":\n      \"https://www.w3.org/ns/shacl#ignoredProperties\",\n    \"https://2019.summerofcode.be/unshacled#in\":\n      \"https://www.w3.org/ns/shacl#in\",\n    \"https://2019.summerofcode.be/unshacled#intersection\":\n      \"https://www.w3.org/ns/shacl#intersection\",\n    \"https://2019.summerofcode.be/unshacled#inversePath\":\n      \"https://www.w3.org/ns/shacl#inversePath\",\n    \"https://2019.summerofcode.be/unshacled#js\":\n      \"https://www.w3.org/ns/shacl#js\",\n    \"https://2019.summerofcode.be/unshacled#jsFunctionName\":\n      \"https://www.w3.org/ns/shacl#jsFunctionName\",\n    \"https://2019.summerofcode.be/unshacled#jsLibrary\":\n      \"https://www.w3.org/ns/shacl#jsLibrary\",\n    \"https://2019.summerofcode.be/unshacled#jsLibraryURL\":\n      \"https://www.w3.org/ns/shacl#jsLibraryURL\",\n    \"https://2019.summerofcode.be/unshacled#labelTemplate\":\n      \"https://www.w3.org/ns/shacl#labelTemplate\",\n    \"https://2019.summerofcode.be/unshacled#languageIn\":\n      \"https://www.w3.org/ns/shacl#languageIn\",\n    \"https://2019.summerofcode.be/unshacled#lessThan\":\n      \"https://www.w3.org/ns/shacl#lessThan\",\n    \"https://2019.summerofcode.be/unshacled#lessThanOrEquals\":\n      \"https://www.w3.org/ns/shacl#lessThanOrEquals\",\n    \"https://2019.summerofcode.be/unshacled#maxCount\":\n      \"https://www.w3.org/ns/shacl#maxCount\",\n    \"https://2019.summerofcode.be/unshacled#maxExclusive\":\n      \"https://www.w3.org/ns/shacl#maxExclusive\",\n    \"https://2019.summerofcode.be/unshacled#maxInclusive\":\n      \"https://www.w3.org/ns/shacl#maxInclusive\",\n    \"https://2019.summerofcode.be/unshacled#maxLength\":\n      \"https://www.w3.org/ns/shacl#maxLength\",\n    \"https://2019.summerofcode.be/unshacled#message\":\n      \"https://www.w3.org/ns/shacl#message\",\n    \"https://2019.summerofcode.be/unshacled#minCount\":\n      \"https://www.w3.org/ns/shacl#minCount\",\n    \"https://2019.summerofcode.be/unshacled#minExclusive\":\n      \"https://www.w3.org/ns/shacl#minExclusive\",\n    \"https://2019.summerofcode.be/unshacled#minInclusive\":\n      \"https://www.w3.org/ns/shacl#minInclusive\",\n    \"https://2019.summerofcode.be/unshacled#minLength\":\n      \"https://www.w3.org/ns/shacl#minLength\",\n    \"https://2019.summerofcode.be/unshacled#name\":\n      \"https://www.w3.org/ns/shacl#name\",\n    \"https://2019.summerofcode.be/unshacled#namespace\":\n      \"https://www.w3.org/ns/shacl#namespace\",\n    \"https://2019.summerofcode.be/unshacled#node\":\n      \"https://www.w3.org/ns/shacl#node\",\n    \"https://2019.summerofcode.be/unshacled#nodeKind\":\n      \"https://www.w3.org/ns/shacl#nodeKind\",\n    \"https://2019.summerofcode.be/unshacled#nodeValidator\":\n      \"https://www.w3.org/ns/shacl#nodeValidator\",\n    \"https://2019.summerofcode.be/unshacled#nodes\":\n      \"https://www.w3.org/ns/shacl#nodes\",\n    \"https://2019.summerofcode.be/unshacled#not\":\n      \"https://www.w3.org/ns/shacl#not\",\n    \"https://2019.summerofcode.be/unshacled#object\":\n      \"https://www.w3.org/ns/shacl#object\",\n    \"https://2019.summerofcode.be/unshacled#oneOrMorePath\":\n      \"https://www.w3.org/ns/shacl#oneOrMorePath\",\n    \"https://2019.summerofcode.be/unshacled#optional\":\n      \"https://www.w3.org/ns/shacl#optional\",\n    \"https://2019.summerofcode.be/unshacled#or\":\n      \"https://www.w3.org/ns/shacl#or\",\n    \"https://2019.summerofcode.be/unshacled#order\":\n      \"https://www.w3.org/ns/shacl#order\",\n    \"https://2019.summerofcode.be/unshacled#parameter\":\n      \"https://www.w3.org/ns/shacl#parameter\",\n    \"https://2019.summerofcode.be/unshacled#path\":\n      \"https://www.w3.org/ns/shacl#path\",\n    \"https://2019.summerofcode.be/unshacled#pattern\":\n      \"https://www.w3.org/ns/shacl#pattern\",\n    \"https://2019.summerofcode.be/unshacled#predicate\":\n      \"https://www.w3.org/ns/shacl#predicate\",\n    \"https://2019.summerofcode.be/unshacled#prefix\":\n      \"https://www.w3.org/ns/shacl#prefix\",\n    \"https://2019.summerofcode.be/unshacled#prefixes\":\n      \"https://www.w3.org/ns/shacl#prefixes\",\n    \"https://2019.summerofcode.be/unshacled#property\":\n      \"https://www.w3.org/ns/shacl#property\",\n    \"https://2019.summerofcode.be/unshacled#propertyValidator\":\n      \"https://www.w3.org/ns/shacl#propertyValidator\",\n    \"https://2019.summerofcode.be/unshacled#qualifiedMaxCount\":\n      \"https://www.w3.org/ns/shacl#qualifiedMaxCount\",\n    \"https://2019.summerofcode.be/unshacled#qualifiedMinCount\":\n      \"https://www.w3.org/ns/shacl#qualifiedMinCount\",\n    \"https://2019.summerofcode.be/unshacled#qualifiedValueShape\":\n      \"https://www.w3.org/ns/shacl#qualifiedValueShape\",\n    \"https://2019.summerofcode.be/unshacled#qualifiedValueShapesDisjoint\":\n      \"https://www.w3.org/ns/shacl#qualifiedValueShapesDisjoint\",\n    \"https://2019.summerofcode.be/unshacled#result\":\n      \"https://www.w3.org/ns/shacl#result\",\n    \"https://2019.summerofcode.be/unshacled#resultAnnotation\":\n      \"https://www.w3.org/ns/shacl#resultAnnotation\",\n    \"https://2019.summerofcode.be/unshacled#resultMessage\":\n      \"https://www.w3.org/ns/shacl#resultMessage\",\n    \"https://2019.summerofcode.be/unshacled#resultPath\":\n      \"https://www.w3.org/ns/shacl#resultPath\",\n    \"https://2019.summerofcode.be/unshacled#resultSeverity\":\n      \"https://www.w3.org/ns/shacl#resultSeverity\",\n    \"https://2019.summerofcode.be/unshacled#returnType\":\n      \"https://www.w3.org/ns/shacl#returnType\",\n    \"https://2019.summerofcode.be/unshacled#rule\":\n      \"https://www.w3.org/ns/shacl#rule\",\n    \"https://2019.summerofcode.be/unshacled#select\":\n      \"https://www.w3.org/ns/shacl#select\",\n    \"https://2019.summerofcode.be/unshacled#severity\":\n      \"https://www.w3.org/ns/shacl#severity\",\n    \"https://2019.summerofcode.be/unshacled#shapesGraph\":\n      \"https://www.w3.org/ns/shacl#shapesGraph\",\n    \"https://2019.summerofcode.be/unshacled#shapesGraphWellFormed\":\n      \"https://www.w3.org/ns/shacl#shapesGraphWellFormed\",\n    \"https://2019.summerofcode.be/unshacled#sourceConstraint\":\n      \"https://www.w3.org/ns/shacl#sourceConstraint\",\n    \"https://2019.summerofcode.be/unshacled#sourceConstraintComponent\":\n      \"https://www.w3.org/ns/shacl#sourceConstraintComponent\",\n    \"https://2019.summerofcode.be/unshacled#sourceShape\":\n      \"https://www.w3.org/ns/shacl#sourceShape\",\n    \"https://2019.summerofcode.be/unshacled#sparql\":\n      \"https://www.w3.org/ns/shacl#sparql\",\n    \"https://2019.summerofcode.be/unshacled#subject\":\n      \"https://www.w3.org/ns/shacl#subject\",\n    \"https://2019.summerofcode.be/unshacled#suggestedShapesGraph\":\n      \"https://www.w3.org/ns/shacl#suggestedShapesGraph\",\n    \"https://2019.summerofcode.be/unshacled#target\":\n      \"https://www.w3.org/ns/shacl#target\",\n    \"https://2019.summerofcode.be/unshacled#targetClass\":\n      \"https://www.w3.org/ns/shacl#targetClass\",\n    \"https://2019.summerofcode.be/unshacled#targetNode\":\n      \"https://www.w3.org/ns/shacl#targetNode\",\n    \"https://2019.summerofcode.be/unshacled#targetObjectsOf\":\n      \"https://www.w3.org/ns/shacl#targetObjectsOf\",\n    \"https://2019.summerofcode.be/unshacled#targetSubjectsOf\":\n      \"https://www.w3.org/ns/shacl#targetSubjectsOf\",\n    \"https://2019.summerofcode.be/unshacled#this\":\n      \"https://www.w3.org/ns/shacl#this\",\n    \"https://2019.summerofcode.be/unshacled#union\":\n      \"https://www.w3.org/ns/shacl#union\",\n    \"https://2019.summerofcode.be/unshacled#uniqueLang\":\n      \"https://www.w3.org/ns/shacl#uniqueLang\",\n    \"https://2019.summerofcode.be/unshacled#update\":\n      \"https://www.w3.org/ns/shacl#update\",\n    \"https://2019.summerofcode.be/unshacled#validator\":\n      \"https://www.w3.org/ns/shacl#validator\",\n    \"https://2019.summerofcode.be/unshacled#value\":\n      \"https://www.w3.org/ns/shacl#value\",\n    \"https://2019.summerofcode.be/unshacled#xone\":\n      \"https://www.w3.org/ns/shacl#xone\",\n    \"https://2019.summerofcode.be/unshacled#zeroOrMorePath\":\n      \"https://www.w3.org/ns/shacl#zeroOrMorePath\",\n    \"https://2019.summerofcode.be/unshacled#zeroOrOnePath\":\n      \"https://www.w3.org/ns/shacl#zeroOrOnePath\"\n  },\n  MODEL: {\n    \"https://www.w3.org/ns/shacl#AbstractResult\":\n      \"https://2019.summerofcode.be/unshacled#AbstractResult\",\n    \"https://www.w3.org/ns/shacl#AndConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#AndConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#AndConstraintComponent-and\":\n      \"https://2019.summerofcode.be/unshacled#AndConstraintComponent-and\",\n    \"https://www.w3.org/ns/shacl#BlankNode\":\n      \"https://2019.summerofcode.be/unshacled#BlankNode\",\n    \"https://www.w3.org/ns/shacl#BlankNodeOrIRI\":\n      \"https://2019.summerofcode.be/unshacled#BlankNodeOrIRI\",\n    \"https://www.w3.org/ns/shacl#BlankNodeOrLiteral\":\n      \"https://2019.summerofcode.be/unshacled#BlankNodeOrLiteral\",\n    \"https://www.w3.org/ns/shacl#ClassConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#ClassConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#ClassConstraintComponent-class\":\n      \"https://2019.summerofcode.be/unshacled#ClassConstraintComponent-class\",\n    \"https://www.w3.org/ns/shacl#ClosedConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#ClosedConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#ClosedConstraintComponent-closed\":\n      \"https://2019.summerofcode.be/unshacled#ClosedConstraintComponent-closed\",\n    \"https://www.w3.org/ns/shacl#ClosedConstraintComponent-ignoredProperties\":\n      \"https://2019.summerofcode.be/unshacled#ClosedConstraintComponent-ignoredProperties\",\n    \"https://www.w3.org/ns/shacl#ConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#ConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#DatatypeConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#DatatypeConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#DatatypeConstraintComponent-datatype\":\n      \"https://2019.summerofcode.be/unshacled#DatatypeConstraintComponent-datatype\",\n    \"https://www.w3.org/ns/shacl#DisjointConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#DisjointConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#DisjointConstraintComponent-disjoint\":\n      \"https://2019.summerofcode.be/unshacled#DisjointConstraintComponent-disjoint\",\n    \"https://www.w3.org/ns/shacl#EqualsConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#EqualsConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#EqualsConstraintComponent-equals\":\n      \"https://2019.summerofcode.be/unshacled#EqualsConstraintComponent-equals\",\n    \"https://www.w3.org/ns/shacl#ExpressionConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#ExpressionConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#ExpressionConstraintComponent-expression\":\n      \"https://2019.summerofcode.be/unshacled#ExpressionConstraintComponent-expression\",\n    \"https://www.w3.org/ns/shacl#Function\":\n      \"https://2019.summerofcode.be/unshacled#Function\",\n    \"https://www.w3.org/ns/shacl#HasValueConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#HasValueConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#HasValueConstraintComponent-hasValue\":\n      \"https://2019.summerofcode.be/unshacled#HasValueConstraintComponent-hasValue\",\n    \"https://www.w3.org/ns/shacl#IRI\":\n      \"https://2019.summerofcode.be/unshacled#IRI\",\n    \"https://www.w3.org/ns/shacl#IRIOrLiteral\":\n      \"https://2019.summerofcode.be/unshacled#IRIOrLiteral\",\n    \"https://www.w3.org/ns/shacl#InConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#InConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#InConstraintComponent-in\":\n      \"https://2019.summerofcode.be/unshacled#InConstraintComponent-in\",\n    \"https://www.w3.org/ns/shacl#Info\":\n      \"https://2019.summerofcode.be/unshacled#Info\",\n    \"https://www.w3.org/ns/shacl#JSConstraint\":\n      \"https://2019.summerofcode.be/unshacled#JSConstraint\",\n    \"https://www.w3.org/ns/shacl#JSConstraint-js\":\n      \"https://2019.summerofcode.be/unshacled#JSConstraint-js\",\n    \"https://www.w3.org/ns/shacl#JSConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#JSConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#JSExecutable\":\n      \"https://2019.summerofcode.be/unshacled#JSExecutable\",\n    \"https://www.w3.org/ns/shacl#JSFunction\":\n      \"https://2019.summerofcode.be/unshacled#JSFunction\",\n    \"https://www.w3.org/ns/shacl#JSLibrary\":\n      \"https://2019.summerofcode.be/unshacled#JSLibrary\",\n    \"https://www.w3.org/ns/shacl#JSRule\":\n      \"https://2019.summerofcode.be/unshacled#JSRule\",\n    \"https://www.w3.org/ns/shacl#JSTarget\":\n      \"https://2019.summerofcode.be/unshacled#JSTarget\",\n    \"https://www.w3.org/ns/shacl#JSTargetType\":\n      \"https://2019.summerofcode.be/unshacled#JSTargetType\",\n    \"https://www.w3.org/ns/shacl#JSValidator\":\n      \"https://2019.summerofcode.be/unshacled#JSValidator\",\n    \"https://www.w3.org/ns/shacl#LanguageInConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#LanguageInConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#LanguageInConstraintComponent-languageIn\":\n      \"https://2019.summerofcode.be/unshacled#LanguageInConstraintComponent-languageIn\",\n    \"https://www.w3.org/ns/shacl#LessThanConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#LessThanConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#LessThanConstraintComponent-lessThan\":\n      \"https://2019.summerofcode.be/unshacled#LessThanConstraintComponent-lessThan\",\n    \"https://www.w3.org/ns/shacl#LessThanOrEqualsConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#LessThanOrEqualsConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#LessThanOrEqualsConstraintComponent-lessThanOrEquals\":\n      \"https://2019.summerofcode.be/unshacled#LessThanOrEqualsConstraintComponent-lessThanOrEquals\",\n    \"https://www.w3.org/ns/shacl#Literal\":\n      \"https://2019.summerofcode.be/unshacled#Literal\",\n    \"https://www.w3.org/ns/shacl#MaxCountConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#MaxCountConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#MaxCountConstraintComponent-maxCount\":\n      \"https://2019.summerofcode.be/unshacled#MaxCountConstraintComponent-maxCount\",\n    \"https://www.w3.org/ns/shacl#MaxExclusiveConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#MaxExclusiveConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#MaxExclusiveConstraintComponent-maxExclusive\":\n      \"https://2019.summerofcode.be/unshacled#MaxExclusiveConstraintComponent-maxExclusive\",\n    \"https://www.w3.org/ns/shacl#MaxInclusiveConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#MaxInclusiveConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#MaxInclusiveConstraintComponent-maxInclusive\":\n      \"https://2019.summerofcode.be/unshacled#MaxInclusiveConstraintComponent-maxInclusive\",\n    \"https://www.w3.org/ns/shacl#MaxLengthConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#MaxLengthConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#MaxLengthConstraintComponent-maxLength\":\n      \"https://2019.summerofcode.be/unshacled#MaxLengthConstraintComponent-maxLength\",\n    \"https://www.w3.org/ns/shacl#MinCountConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#MinCountConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#MinCountConstraintComponent-minCount\":\n      \"https://2019.summerofcode.be/unshacled#MinCountConstraintComponent-minCount\",\n    \"https://www.w3.org/ns/shacl#MinExclusiveConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#MinExclusiveConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#MinExclusiveConstraintComponent-minExclusive\":\n      \"https://2019.summerofcode.be/unshacled#MinExclusiveConstraintComponent-minExclusive\",\n    \"https://www.w3.org/ns/shacl#MinInclusiveConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#MinInclusiveConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#MinInclusiveConstraintComponent-minInclusive\":\n      \"https://2019.summerofcode.be/unshacled#MinInclusiveConstraintComponent-minInclusive\",\n    \"https://www.w3.org/ns/shacl#MinLengthConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#MinLengthConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#MinLengthConstraintComponent-minLength\":\n      \"https://2019.summerofcode.be/unshacled#MinLengthConstraintComponent-minLength\",\n    \"https://www.w3.org/ns/shacl#NodeConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#NodeConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#NodeConstraintComponent-node\":\n      \"https://2019.summerofcode.be/unshacled#NodeConstraintComponent-node\",\n    \"https://www.w3.org/ns/shacl#NodeKind\":\n      \"https://2019.summerofcode.be/unshacled#NodeKind\",\n    \"https://www.w3.org/ns/shacl#NodeKindConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#NodeKindConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#NodeKindConstraintComponent-nodeKind\":\n      \"https://2019.summerofcode.be/unshacled#NodeKindConstraintComponent-nodeKind\",\n    \"https://www.w3.org/ns/shacl#NodeShape\":\n      \"https://2019.summerofcode.be/unshacled#NodeShape\",\n    \"https://www.w3.org/ns/shacl#NotConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#NotConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#NotConstraintComponent-not\":\n      \"https://2019.summerofcode.be/unshacled#NotConstraintComponent-not\",\n    \"https://www.w3.org/ns/shacl#OrConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#OrConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#OrConstraintComponent-or\":\n      \"https://2019.summerofcode.be/unshacled#OrConstraintComponent-or\",\n    \"https://www.w3.org/ns/shacl#Parameter\":\n      \"https://2019.summerofcode.be/unshacled#Parameter\",\n    \"https://www.w3.org/ns/shacl#Parameterizable\":\n      \"https://2019.summerofcode.be/unshacled#Parameterizable\",\n    \"https://www.w3.org/ns/shacl#PatternConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#PatternConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#PatternConstraintComponent-flags\":\n      \"https://2019.summerofcode.be/unshacled#PatternConstraintComponent-flags\",\n    \"https://www.w3.org/ns/shacl#PatternConstraintComponent-pattern\":\n      \"https://2019.summerofcode.be/unshacled#PatternConstraintComponent-pattern\",\n    \"https://www.w3.org/ns/shacl#PrefixDeclaration\":\n      \"https://2019.summerofcode.be/unshacled#PrefixDeclaration\",\n    \"https://www.w3.org/ns/shacl#PropertyConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#PropertyConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#PropertyConstraintComponent-property\":\n      \"https://2019.summerofcode.be/unshacled#PropertyConstraintComponent-property\",\n    \"https://www.w3.org/ns/shacl#PropertyGroup\":\n      \"https://2019.summerofcode.be/unshacled#PropertyGroup\",\n    \"https://www.w3.org/ns/shacl#PropertyShape\":\n      \"https://2019.summerofcode.be/unshacled#PropertyShape\",\n    \"https://www.w3.org/ns/shacl#QualifiedMaxCountConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#QualifiedMaxCountConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#QualifiedMaxCountConstraintComponent-qualifiedMaxCount\":\n      \"https://2019.summerofcode.be/unshacled#QualifiedMaxCountConstraintComponent-qualifiedMaxCount\",\n    \"https://www.w3.org/ns/shacl#QualifiedMaxCountConstraintComponent-qualifiedValueShape\":\n      \"https://2019.summerofcode.be/unshacled#QualifiedMaxCountConstraintComponent-qualifiedValueShape\",\n    \"https://www.w3.org/ns/shacl#QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint\":\n      \"https://2019.summerofcode.be/unshacled#QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint\",\n    \"https://www.w3.org/ns/shacl#QualifiedMinCountConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#QualifiedMinCountConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#QualifiedMinCountConstraintComponent-qualifiedMinCount\":\n      \"https://2019.summerofcode.be/unshacled#QualifiedMinCountConstraintComponent-qualifiedMinCount\",\n    \"https://www.w3.org/ns/shacl#QualifiedMinCountConstraintComponent-qualifiedValueShape\":\n      \"https://2019.summerofcode.be/unshacled#QualifiedMinCountConstraintComponent-qualifiedValueShape\",\n    \"https://www.w3.org/ns/shacl#QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint\":\n      \"https://2019.summerofcode.be/unshacled#QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint\",\n    \"https://www.w3.org/ns/shacl#ResultAnnotation\":\n      \"https://2019.summerofcode.be/unshacled#ResultAnnotation\",\n    \"https://www.w3.org/ns/shacl#Rule\":\n      \"https://2019.summerofcode.be/unshacled#Rule\",\n    \"https://www.w3.org/ns/shacl#SPARQLAskExecutable\":\n      \"https://2019.summerofcode.be/unshacled#SPARQLAskExecutable\",\n    \"https://www.w3.org/ns/shacl#SPARQLAskValidator\":\n      \"https://2019.summerofcode.be/unshacled#SPARQLAskValidator\",\n    \"https://www.w3.org/ns/shacl#SPARQLConstraint\":\n      \"https://2019.summerofcode.be/unshacled#SPARQLConstraint\",\n    \"https://www.w3.org/ns/shacl#SPARQLConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#SPARQLConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#SPARQLConstraintComponent-sparql\":\n      \"https://2019.summerofcode.be/unshacled#SPARQLConstraintComponent-sparql\",\n    \"https://www.w3.org/ns/shacl#SPARQLConstructExecutable\":\n      \"https://2019.summerofcode.be/unshacled#SPARQLConstructExecutable\",\n    \"https://www.w3.org/ns/shacl#SPARQLExecutable\":\n      \"https://2019.summerofcode.be/unshacled#SPARQLExecutable\",\n    \"https://www.w3.org/ns/shacl#SPARQLFunction\":\n      \"https://2019.summerofcode.be/unshacled#SPARQLFunction\",\n    \"https://www.w3.org/ns/shacl#SPARQLRule\":\n      \"https://2019.summerofcode.be/unshacled#SPARQLRule\",\n    \"https://www.w3.org/ns/shacl#SPARQLSelectExecutable\":\n      \"https://2019.summerofcode.be/unshacled#SPARQLSelectExecutable\",\n    \"https://www.w3.org/ns/shacl#SPARQLSelectValidator\":\n      \"https://2019.summerofcode.be/unshacled#SPARQLSelectValidator\",\n    \"https://www.w3.org/ns/shacl#SPARQLTarget\":\n      \"https://2019.summerofcode.be/unshacled#SPARQLTarget\",\n    \"https://www.w3.org/ns/shacl#SPARQLTargetType\":\n      \"https://2019.summerofcode.be/unshacled#SPARQLTargetType\",\n    \"https://www.w3.org/ns/shacl#SPARQLUpdateExecutable\":\n      \"https://2019.summerofcode.be/unshacled#SPARQLUpdateExecutable\",\n    \"https://www.w3.org/ns/shacl#Severity\":\n      \"https://2019.summerofcode.be/unshacled#Severity\",\n    \"https://www.w3.org/ns/shacl#Shape\":\n      \"https://2019.summerofcode.be/unshacled#Shape\",\n    \"https://www.w3.org/ns/shacl#Target\":\n      \"https://2019.summerofcode.be/unshacled#Target\",\n    \"https://www.w3.org/ns/shacl#TargetType\":\n      \"https://2019.summerofcode.be/unshacled#TargetType\",\n    \"https://www.w3.org/ns/shacl#TripleRule\":\n      \"https://2019.summerofcode.be/unshacled#TripleRule\",\n    \"https://www.w3.org/ns/shacl#UniqueLangConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#UniqueLangConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#UniqueLangConstraintComponent-uniqueLang\":\n      \"https://2019.summerofcode.be/unshacled#UniqueLangConstraintComponent-uniqueLang\",\n    \"https://www.w3.org/ns/shacl#ValidationReport\":\n      \"https://2019.summerofcode.be/unshacled#ValidationReport\",\n    \"https://www.w3.org/ns/shacl#ValidationResult\":\n      \"https://2019.summerofcode.be/unshacled#ValidationResult\",\n    \"https://www.w3.org/ns/shacl#Validator\":\n      \"https://2019.summerofcode.be/unshacled#Validator\",\n    \"https://www.w3.org/ns/shacl#Violation\":\n      \"https://2019.summerofcode.be/unshacled#Violation\",\n    \"https://www.w3.org/ns/shacl#Warning\":\n      \"https://2019.summerofcode.be/unshacled#Warning\",\n    \"https://www.w3.org/ns/shacl#XoneConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#XoneConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#XoneConstraintComponent-xone\":\n      \"https://2019.summerofcode.be/unshacled#XoneConstraintComponent-xone\",\n    \"https://www.w3.org/ns/shacl#alternativePath\":\n      \"https://2019.summerofcode.be/unshacled#alternativePath\",\n    \"https://www.w3.org/ns/shacl#and\":\n      \"https://2019.summerofcode.be/unshacled#and\",\n    \"https://www.w3.org/ns/shacl#annotationProperty\":\n      \"https://2019.summerofcode.be/unshacled#annotationProperty\",\n    \"https://www.w3.org/ns/shacl#annotationValue\":\n      \"https://2019.summerofcode.be/unshacled#annotationValue\",\n    \"https://www.w3.org/ns/shacl#annotationVarName\":\n      \"https://2019.summerofcode.be/unshacled#annotationVarName\",\n    \"https://www.w3.org/ns/shacl#ask\":\n      \"https://2019.summerofcode.be/unshacled#ask\",\n    \"https://www.w3.org/ns/shacl#class\":\n      \"https://2019.summerofcode.be/unshacled#class\",\n    \"https://www.w3.org/ns/shacl#closed\":\n      \"https://2019.summerofcode.be/unshacled#closed\",\n    \"https://www.w3.org/ns/shacl#condition\":\n      \"https://2019.summerofcode.be/unshacled#condition\",\n    \"https://www.w3.org/ns/shacl#conforms\":\n      \"https://2019.summerofcode.be/unshacled#conforms\",\n    \"https://www.w3.org/ns/shacl#construct\":\n      \"https://2019.summerofcode.be/unshacled#construct\",\n    \"https://www.w3.org/ns/shacl#datatype\":\n      \"https://2019.summerofcode.be/unshacled#datatype\",\n    \"https://www.w3.org/ns/shacl#deactivated\":\n      \"https://2019.summerofcode.be/unshacled#deactivated\",\n    \"https://www.w3.org/ns/shacl#declare\":\n      \"https://2019.summerofcode.be/unshacled#declare\",\n    \"https://www.w3.org/ns/shacl#defaultValue\":\n      \"https://2019.summerofcode.be/unshacled#defaultValue\",\n    \"https://www.w3.org/ns/shacl#description\":\n      \"https://2019.summerofcode.be/unshacled#description\",\n    \"https://www.w3.org/ns/shacl#detail\":\n      \"https://2019.summerofcode.be/unshacled#detail\",\n    \"https://www.w3.org/ns/shacl#disjoint\":\n      \"https://2019.summerofcode.be/unshacled#disjoint\",\n    \"https://www.w3.org/ns/shacl#entailment\":\n      \"https://2019.summerofcode.be/unshacled#entailment\",\n    \"https://www.w3.org/ns/shacl#equals\":\n      \"https://2019.summerofcode.be/unshacled#equals\",\n    \"https://www.w3.org/ns/shacl#expression\":\n      \"https://2019.summerofcode.be/unshacled#expression\",\n    \"https://www.w3.org/ns/shacl#filterShape\":\n      \"https://2019.summerofcode.be/unshacled#filterShape\",\n    \"https://www.w3.org/ns/shacl#flags\":\n      \"https://2019.summerofcode.be/unshacled#flags\",\n    \"https://www.w3.org/ns/shacl#focusNode\":\n      \"https://2019.summerofcode.be/unshacled#focusNode\",\n    \"https://www.w3.org/ns/shacl#group\":\n      \"https://2019.summerofcode.be/unshacled#group\",\n    \"https://www.w3.org/ns/shacl#hasValue\":\n      \"https://2019.summerofcode.be/unshacled#hasValue\",\n    \"https://www.w3.org/ns/shacl#ignoredProperties\":\n      \"https://2019.summerofcode.be/unshacled#ignoredProperties\",\n    \"https://www.w3.org/ns/shacl#in\":\n      \"https://2019.summerofcode.be/unshacled#in\",\n    \"https://www.w3.org/ns/shacl#intersection\":\n      \"https://2019.summerofcode.be/unshacled#intersection\",\n    \"https://www.w3.org/ns/shacl#inversePath\":\n      \"https://2019.summerofcode.be/unshacled#inversePath\",\n    \"https://www.w3.org/ns/shacl#js\":\n      \"https://2019.summerofcode.be/unshacled#js\",\n    \"https://www.w3.org/ns/shacl#jsFunctionName\":\n      \"https://2019.summerofcode.be/unshacled#jsFunctionName\",\n    \"https://www.w3.org/ns/shacl#jsLibrary\":\n      \"https://2019.summerofcode.be/unshacled#jsLibrary\",\n    \"https://www.w3.org/ns/shacl#jsLibraryURL\":\n      \"https://2019.summerofcode.be/unshacled#jsLibraryURL\",\n    \"https://www.w3.org/ns/shacl#labelTemplate\":\n      \"https://2019.summerofcode.be/unshacled#labelTemplate\",\n    \"https://www.w3.org/ns/shacl#languageIn\":\n      \"https://2019.summerofcode.be/unshacled#languageIn\",\n    \"https://www.w3.org/ns/shacl#lessThan\":\n      \"https://2019.summerofcode.be/unshacled#lessThan\",\n    \"https://www.w3.org/ns/shacl#lessThanOrEquals\":\n      \"https://2019.summerofcode.be/unshacled#lessThanOrEquals\",\n    \"https://www.w3.org/ns/shacl#maxCount\":\n      \"https://2019.summerofcode.be/unshacled#maxCount\",\n    \"https://www.w3.org/ns/shacl#maxExclusive\":\n      \"https://2019.summerofcode.be/unshacled#maxExclusive\",\n    \"https://www.w3.org/ns/shacl#maxInclusive\":\n      \"https://2019.summerofcode.be/unshacled#maxInclusive\",\n    \"https://www.w3.org/ns/shacl#maxLength\":\n      \"https://2019.summerofcode.be/unshacled#maxLength\",\n    \"https://www.w3.org/ns/shacl#message\":\n      \"https://2019.summerofcode.be/unshacled#message\",\n    \"https://www.w3.org/ns/shacl#minCount\":\n      \"https://2019.summerofcode.be/unshacled#minCount\",\n    \"https://www.w3.org/ns/shacl#minExclusive\":\n      \"https://2019.summerofcode.be/unshacled#minExclusive\",\n    \"https://www.w3.org/ns/shacl#minInclusive\":\n      \"https://2019.summerofcode.be/unshacled#minInclusive\",\n    \"https://www.w3.org/ns/shacl#minLength\":\n      \"https://2019.summerofcode.be/unshacled#minLength\",\n    \"https://www.w3.org/ns/shacl#name\":\n      \"https://2019.summerofcode.be/unshacled#name\",\n    \"https://www.w3.org/ns/shacl#namespace\":\n      \"https://2019.summerofcode.be/unshacled#namespace\",\n    \"https://www.w3.org/ns/shacl#node\":\n      \"https://2019.summerofcode.be/unshacled#node\",\n    \"https://www.w3.org/ns/shacl#nodeKind\":\n      \"https://2019.summerofcode.be/unshacled#nodeKind\",\n    \"https://www.w3.org/ns/shacl#nodeValidator\":\n      \"https://2019.summerofcode.be/unshacled#nodeValidator\",\n    \"https://www.w3.org/ns/shacl#nodes\":\n      \"https://2019.summerofcode.be/unshacled#nodes\",\n    \"https://www.w3.org/ns/shacl#not\":\n      \"https://2019.summerofcode.be/unshacled#not\",\n    \"https://www.w3.org/ns/shacl#object\":\n      \"https://2019.summerofcode.be/unshacled#object\",\n    \"https://www.w3.org/ns/shacl#oneOrMorePath\":\n      \"https://2019.summerofcode.be/unshacled#oneOrMorePath\",\n    \"https://www.w3.org/ns/shacl#optional\":\n      \"https://2019.summerofcode.be/unshacled#optional\",\n    \"https://www.w3.org/ns/shacl#or\":\n      \"https://2019.summerofcode.be/unshacled#or\",\n    \"https://www.w3.org/ns/shacl#order\":\n      \"https://2019.summerofcode.be/unshacled#order\",\n    \"https://www.w3.org/ns/shacl#parameter\":\n      \"https://2019.summerofcode.be/unshacled#parameter\",\n    \"https://www.w3.org/ns/shacl#path\":\n      \"https://2019.summerofcode.be/unshacled#path\",\n    \"https://www.w3.org/ns/shacl#pattern\":\n      \"https://2019.summerofcode.be/unshacled#pattern\",\n    \"https://www.w3.org/ns/shacl#predicate\":\n      \"https://2019.summerofcode.be/unshacled#predicate\",\n    \"https://www.w3.org/ns/shacl#prefix\":\n      \"https://2019.summerofcode.be/unshacled#prefix\",\n    \"https://www.w3.org/ns/shacl#prefixes\":\n      \"https://2019.summerofcode.be/unshacled#prefixes\",\n    \"https://www.w3.org/ns/shacl#property\":\n      \"https://2019.summerofcode.be/unshacled#property\",\n    \"https://www.w3.org/ns/shacl#propertyValidator\":\n      \"https://2019.summerofcode.be/unshacled#propertyValidator\",\n    \"https://www.w3.org/ns/shacl#qualifiedMaxCount\":\n      \"https://2019.summerofcode.be/unshacled#qualifiedMaxCount\",\n    \"https://www.w3.org/ns/shacl#qualifiedMinCount\":\n      \"https://2019.summerofcode.be/unshacled#qualifiedMinCount\",\n    \"https://www.w3.org/ns/shacl#qualifiedValueShape\":\n      \"https://2019.summerofcode.be/unshacled#qualifiedValueShape\",\n    \"https://www.w3.org/ns/shacl#qualifiedValueShapesDisjoint\":\n      \"https://2019.summerofcode.be/unshacled#qualifiedValueShapesDisjoint\",\n    \"https://www.w3.org/ns/shacl#result\":\n      \"https://2019.summerofcode.be/unshacled#result\",\n    \"https://www.w3.org/ns/shacl#resultAnnotation\":\n      \"https://2019.summerofcode.be/unshacled#resultAnnotation\",\n    \"https://www.w3.org/ns/shacl#resultMessage\":\n      \"https://2019.summerofcode.be/unshacled#resultMessage\",\n    \"https://www.w3.org/ns/shacl#resultPath\":\n      \"https://2019.summerofcode.be/unshacled#resultPath\",\n    \"https://www.w3.org/ns/shacl#resultSeverity\":\n      \"https://2019.summerofcode.be/unshacled#resultSeverity\",\n    \"https://www.w3.org/ns/shacl#returnType\":\n      \"https://2019.summerofcode.be/unshacled#returnType\",\n    \"https://www.w3.org/ns/shacl#rule\":\n      \"https://2019.summerofcode.be/unshacled#rule\",\n    \"https://www.w3.org/ns/shacl#select\":\n      \"https://2019.summerofcode.be/unshacled#select\",\n    \"https://www.w3.org/ns/shacl#severity\":\n      \"https://2019.summerofcode.be/unshacled#severity\",\n    \"https://www.w3.org/ns/shacl#shapesGraph\":\n      \"https://2019.summerofcode.be/unshacled#shapesGraph\",\n    \"https://www.w3.org/ns/shacl#shapesGraphWellFormed\":\n      \"https://2019.summerofcode.be/unshacled#shapesGraphWellFormed\",\n    \"https://www.w3.org/ns/shacl#sourceConstraint\":\n      \"https://2019.summerofcode.be/unshacled#sourceConstraint\",\n    \"https://www.w3.org/ns/shacl#sourceConstraintComponent\":\n      \"https://2019.summerofcode.be/unshacled#sourceConstraintComponent\",\n    \"https://www.w3.org/ns/shacl#sourceShape\":\n      \"https://2019.summerofcode.be/unshacled#sourceShape\",\n    \"https://www.w3.org/ns/shacl#sparql\":\n      \"https://2019.summerofcode.be/unshacled#sparql\",\n    \"https://www.w3.org/ns/shacl#subject\":\n      \"https://2019.summerofcode.be/unshacled#subject\",\n    \"https://www.w3.org/ns/shacl#suggestedShapesGraph\":\n      \"https://2019.summerofcode.be/unshacled#suggestedShapesGraph\",\n    \"https://www.w3.org/ns/shacl#target\":\n      \"https://2019.summerofcode.be/unshacled#target\",\n    \"https://www.w3.org/ns/shacl#targetClass\":\n      \"https://2019.summerofcode.be/unshacled#targetClass\",\n    \"https://www.w3.org/ns/shacl#targetNode\":\n      \"https://2019.summerofcode.be/unshacled#targetNode\",\n    \"https://www.w3.org/ns/shacl#targetObjectsOf\":\n      \"https://2019.summerofcode.be/unshacled#targetObjectsOf\",\n    \"https://www.w3.org/ns/shacl#targetSubjectsOf\":\n      \"https://2019.summerofcode.be/unshacled#targetSubjectsOf\",\n    \"https://www.w3.org/ns/shacl#this\":\n      \"https://2019.summerofcode.be/unshacled#this\",\n    \"https://www.w3.org/ns/shacl#union\":\n      \"https://2019.summerofcode.be/unshacled#union\",\n    \"https://www.w3.org/ns/shacl#uniqueLang\":\n      \"https://2019.summerofcode.be/unshacled#uniqueLang\",\n    \"https://www.w3.org/ns/shacl#update\":\n      \"https://2019.summerofcode.be/unshacled#update\",\n    \"https://www.w3.org/ns/shacl#validator\":\n      \"https://2019.summerofcode.be/unshacled#validator\",\n    \"https://www.w3.org/ns/shacl#value\":\n      \"https://2019.summerofcode.be/unshacled#value\",\n    \"https://www.w3.org/ns/shacl#xone\":\n      \"https://2019.summerofcode.be/unshacled#xone\",\n    \"https://www.w3.org/ns/shacl#zeroOrMorePath\":\n      \"https://2019.summerofcode.be/unshacled#zeroOrMorePath\",\n    \"https://www.w3.org/ns/shacl#zeroOrOnePath\":\n      \"https://2019.summerofcode.be/unshacled#zeroOrOnePath\"\n  }\n};\n\nexport { dictionary as default };\n","import traverse from \"../util/traverse\";\nimport dictionary from \"./shaclDictionary\";\nimport { SHACL_URI } from \"../util/constants\";\nimport { CUSTOM_URI } from \"./terminology\";\nimport clone from \"ramda/src/clone\";\n/**\n *  ShaclTranslator class translates SHACL JSON-LD to an internal model and back\n */\nexport default class ShaclTranslator {\n  /**\n   * Replaces all SHACL URI's with model URI's.\n   * @param {any} shacl  SHACL in JSON-LD\n   * @returns {any} Translated document\n   */\n  static toModel(shacl) {\n    return ShaclTranslator.translate(shacl, dictionary.MODEL);\n  }\n\n  /**\n   * Replaces all SHACL URI's with model URI's.\n   * @param {any} shacl SHACL in JSON-LD\n   * @returns {any|string} Translated document\n   */\n  static toModelSimple(shacl) {\n    return JSON.parse(\n      JSON.stringify(shacl).replace(new RegExp(SHACL_URI, \"g\"), CUSTOM_URI)\n    );\n  }\n\n  /**\n   * Replaces all model URI's with SHACL URI's.\n   * @param {any} model Model in JSON-LD\n   * @returns {any|string} Translated document\n   */\n  static toSHACL(model) {\n    return ShaclTranslator.translate(model, dictionary.SHACL);\n  }\n\n  /**\n   * Replaces all model URI's with SHACL URI's.\n   * @param {any} model Model in JSON-LD\n   * @returns {any|string} Translated document\n   */\n  static toSHACLSimple(model) {\n    return JSON.parse(\n      JSON.stringify(model).replace(new RegExp(CUSTOM_URI, \"g\"), SHACL_URI)\n    );\n  }\n\n  /**\n   * Translates by replacing URI's found in dictionary.\n   * @param {any} document Document in JSON-LD\n   * @param {any} dict Dictionary which contains URI's to be translated\n   * @returns {any|string} Translated document\n   */\n  static translate(document, dict) {\n    const output = {};\n    for (const property of Object.keys(document)) {\n      const translation = dict[property];\n      output[translation || property] = clone(document[property]);\n    }\n\n    traverse(output, (index, object) => {\n      // Translate strings in an array\n      if (Array.isArray(object)) {\n        for (let i = 0; i < object.length; ++i) {\n          const translation = dict[object[i]];\n          if (translation) object[i] = translation;\n        }\n        return;\n      }\n      for (const property of Object.keys(object)) {\n        // Translate property value (only if it isn't an array)\n        let translation = Array.isArray(object[property])\n          ? null\n          : dict[object[property]];\n        if (translation) {\n          object[property] = translation;\n        }\n        // Translate property name\n        translation = dict[property];\n        if (translation) {\n          object[translation] = object[property];\n          delete object[property];\n        }\n      }\n    });\n    return output;\n  }\n}\n","import ShaclTranslator from \"../../translation/shaclTranslator\";\nimport { uriToPrefix } from \"../urlParser\";\n\ngetReady;\nconst initialConstraints = [];\nlet getReady = function() {\n  // Filters through vocabulary file to find all the constraints and then maps them into clean objects\n\n  json.forEach(obj => {\n    if (obj[\"@type\"] === \"http://www.w3.org/ns/shacl#ConstraintComponent\") {\n      initialConstraints.push(simplifyCons(obj));\n    }\n  });\n\n  // Filters through the vocabulary to find all parameters and links the parameters to corresponding constraints\n  json.forEach(obj => {\n    if (obj[\"@type\"] === \"http://www.w3.org/ns/shacl#Parameter\") {\n      simplifyParameter(obj);\n    }\n  });\n};\n\nfunction simplifyCons(obj) {\n  const constraint = {};\n  constraint.comment = obj[\n    \"http://www.w3.org/2000/01/rdf-schema#comment\"\n  ].shift()[\"@value\"];\n  constraint.definedby = obj[\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\"\n  ].shift()[\"@id\"];\n  constraint.label = obj[\"http://www.w3.org/2000/01/rdf-schema#label\"].shift()[\n    \"@value\"\n  ];\n  constraint.parameter = obj[\"http://www.w3.org/ns/shacl#parameter\"].shift()[\n    \"@id\"\n  ];\n  return constraint;\n}\n\nfunction simplifyParameter(obj) {\n  const parameter = {};\n  const constraint = initialConstraints\n    .filter(constraint => constraint.parameter === obj[\"@id\"])\n    .shift();\n  parameter.definedby = obj[\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\"\n  ].shift()[\"@id\"];\n  parameter.path = obj[\"http://www.w3.org/ns/shacl#path\"].shift()[\"@id\"];\n  parameter.optional = !obj[\"http://www.w3.org/ns/shacl#optional\"];\n  parameter.datatype = obj[\"http://www.w3.org/ns/shacl#datatype\"]\n    ? obj[\"http://www.w3.org/ns/shacl#datatype\"].shift()[\"@id\"]\n    : null;\n  if (constraint) constraint.parameter = parameter;\n}\n\n/**\n * Group the given dictionary of objects by the given key.\n * @param {object} xs\n * @param {string} key\n * @returns {any}\n */\nfunction groupBy(xs, key) {\n  return xs.reduce((rv, x) => {\n    (rv[x[key]] = rv[x[key]] || []).push(x);\n    return rv;\n  }, {});\n}\n\n// These are the constraints with the type added manually\nconst constraintsWithTypes = [\n  {\n    type: \"Logical Constraints\",\n    comment:\n      \"A constraint component that can be used to test whether a value node conforms to all members of a provided list of shapes.\",\n    definedby: \"http://www.w3.org/ns/shacl#\",\n    label: \"And constraint component\",\n    parameter: {\n      definedby: \"http://www.w3.org/ns/shacl#\",\n      path: \"http://www.w3.org/ns/shacl#and\",\n      optional: \"true\",\n      datatype: null\n    }\n  },\n  {\n    type: \"Value Type Constraints\",\n    comment:\n      \"A constraint component that can be used to verify that each value node is an instance of a given type.\",\n    definedby: \"http://www.w3.org/ns/shacl#\",\n    label: \"Class constraint component\",\n    parameter: {\n      definedby: \"http://www.w3.org/ns/shacl#\",\n      path: \"http://www.w3.org/ns/shacl#class\",\n      optional: \"true\",\n      datatype: null\n    }\n  },\n  {\n    type: \"Other Constraints\",\n    comment:\n      \"A constraint component that can be used to indicate that focus nodes must only have values for those properties that have been explicitly enumerated via sh:property/sh:path.\",\n    definedby: \"http://www.w3.org/ns/shacl#\",\n    label: \"Closed constraint component\",\n    parameter: {\n      definedby: \"http://www.w3.org/ns/shacl#\",\n      path: \"http://www.w3.org/ns/shacl#closed\",\n      optional: \"true\",\n      datatype: \"http://www.w3.org/2001/XMLSchema#boolean\"\n    }\n  },\n  {\n    type: \"Value Type Constraints\",\n    comment:\n      \"A constraint component that can be used to restrict the datatype of all value nodes.\",\n    definedby: \"http://www.w3.org/ns/shacl#\",\n    label: \"Datatype constraint component\",\n    parameter: {\n      definedby: \"http://www.w3.org/ns/shacl#\",\n      path: \"http://www.w3.org/ns/shacl#datatype\",\n      optional: \"true\",\n      datatype: null\n    }\n  },\n  {\n    type: \"Property Pair Constraints\",\n    comment:\n      \"A constraint component that can be used to verify that the set of value nodes is disjoint with the the set of nodes that have the focus node as subject and the value of a given property as predicate.\",\n    definedby: \"http://www.w3.org/ns/shacl#\",\n    label: \"Disjoint constraint component\",\n    parameter: {\n      definedby: \"http://www.w3.org/ns/shacl#\",\n      path: \"http://www.w3.org/ns/shacl#disjoint\",\n      optional: \"true\",\n      datatype: null\n    }\n  },\n  {\n    type: \"Property Pair Constraints\",\n    comment:\n      \"A constraint component that can be used to verify that the set of value nodes is equal to the set of nodes that have the focus node as subject and the value of a given property as predicate.\",\n    definedby: \"http://www.w3.org/ns/shacl#\",\n    label: \"Equals constraint component\",\n    parameter: {\n      definedby: \"http://www.w3.org/ns/shacl#\",\n      path: \"http://www.w3.org/ns/shacl#equals\",\n      optional: \"true\",\n      datatype: null\n    }\n  },\n  {\n    type: \"Shape-Based Constraints\",\n    comment:\n      \"A constraint component that can be used to verify that a given node expression produces true for all value nodes.\",\n    definedby: \"http://www.w3.org/ns/shacl#\",\n    label: \"Expression constraint component\",\n    parameter: {\n      definedby: \"http://www.w3.org/ns/shacl#\",\n      path: \"http://www.w3.org/ns/shacl#expression\",\n      optional: \"true\",\n      datatype: null\n    }\n  },\n  {\n    type: \"Other Constraints\",\n    comment:\n      \"A constraint component that can be used to verify that one of the value nodes is a given RDF node.\",\n    definedby: \"http://www.w3.org/ns/shacl#\",\n    label: \"Has-value constraint component\",\n    parameter: {\n      definedby: \"http://www.w3.org/ns/shacl#\",\n      path: \"http://www.w3.org/ns/shacl#hasValue\",\n      optional: \"true\",\n      datatype: null\n    }\n  },\n  {\n    type: \"Other Constraints\",\n    comment:\n      \"A constraint component that can be used to exclusively enumerate the permitted value nodes.\",\n    definedby: \"http://www.w3.org/ns/shacl#\",\n    label: \"In constraint component\",\n    parameter: {\n      definedby: \"http://www.w3.org/ns/shacl#\",\n      path: \"http://www.w3.org/ns/shacl#in\",\n      optional: \"true\",\n      datatype: null\n    }\n  },\n  {\n    type: \"String-Based Constraints\",\n    comment:\n      \"A constraint component that can be used to enumerate language tags that all value nodes must have.\",\n    definedby: \"http://www.w3.org/ns/shacl#\",\n    label: \"Language-in constraint component\",\n    parameter: {\n      definedby: \"http://www.w3.org/ns/shacl#\",\n      path: \"http://www.w3.org/ns/shacl#languageIn\",\n      optional: \"true\",\n      datatype: null\n    }\n  },\n  {\n    type: \"Property Pair Constraints\",\n    comment:\n      \"A constraint component that can be used to verify that each value node is smaller than all the nodes that have the focus node as subject and the value of a given property as predicate.\",\n    definedby: \"http://www.w3.org/ns/shacl#\",\n    label: \"Less-than constraint component\",\n    parameter: {\n      definedby: \"http://www.w3.org/ns/shacl#\",\n      path: \"http://www.w3.org/ns/shacl#lessThan\",\n      optional: \"true\",\n      datatype: null\n    }\n  },\n  {\n    type: \"Property Pair Constraints\",\n    comment:\n      \"A constraint component that can be used to verify that every value node is smaller than all the nodes that have the focus node as subject and the value of a given property as predicate.\",\n    definedby: \"http://www.w3.org/ns/shacl#\",\n    label: \"less-than-or-equals constraint component\",\n    parameter: {\n      definedby: \"http://www.w3.org/ns/shacl#\",\n      path: \"http://www.w3.org/ns/shacl#lessThanOrEquals\",\n      optional: \"true\",\n      datatype: null\n    }\n  },\n  {\n    type: \"Cardinality Constraints\",\n    comment:\n      \"A constraint component that can be used to restrict the maximum number of value nodes.\",\n    definedby: \"http://www.w3.org/ns/shacl#\",\n    label: \"Max-count constraint component\",\n    parameter: {\n      definedby: \"http://www.w3.org/ns/shacl#\",\n      path: \"http://www.w3.org/ns/shacl#maxCount\",\n      optional: \"true\",\n      datatype: \"http://www.w3.org/2001/XMLSchema#integer\"\n    }\n  },\n  {\n    type: \"Value Range Constraints\",\n    comment:\n      \"A constraint component that can be used to restrict the range of value nodes with a maximum exclusive value.\",\n    definedby: \"http://www.w3.org/ns/shacl#\",\n    label: \"Max-exclusive constraints\",\n    parameter: {\n      definedby: \"http://www.w3.org/ns/shacl#\",\n      path: \"http://www.w3.org/ns/shacl#maxExclusive\",\n      optional: \"true\",\n      datatype: null\n    }\n  },\n  {\n    type: \"Value Range Constraints\",\n    comment:\n      \"A constraint component that can be used to restrict the range of value nodes with a maximum inclusive value.\",\n    definedby: \"http://www.w3.org/ns/shacl#\",\n    label: \"Max-inclusive constraint component\",\n    parameter: {\n      definedby: \"http://www.w3.org/ns/shacl#\",\n      path: \"http://www.w3.org/ns/shacl#maxInclusive\",\n      optional: \"true\",\n      datatype: null\n    }\n  },\n  {\n    type: \"String-Based Constraints\",\n    comment:\n      \"A constraint component that can be used to restrict the maximum string length of value nodes.\",\n    definedby: \"http://www.w3.org/ns/shacl#\",\n    label: \"Max-length constraint component\",\n    parameter: {\n      definedby: \"http://www.w3.org/ns/shacl#\",\n      path: \"http://www.w3.org/ns/shacl#maxLength\",\n      optional: \"true\",\n      datatype: \"http://www.w3.org/2001/XMLSchema#integer\"\n    }\n  },\n  {\n    type: \"Cardinality Constraints\",\n    comment:\n      \"A constraint component that can be used to restrict the minimum number of value nodes.\",\n    definedby: \"http://www.w3.org/ns/shacl#\",\n    label: \"Min-count constraint component\",\n    parameter: {\n      definedby: \"http://www.w3.org/ns/shacl#\",\n      path: \"http://www.w3.org/ns/shacl#minCount\",\n      optional: \"true\",\n      datatype: \"http://www.w3.org/2001/XMLSchema#integer\"\n    }\n  },\n  {\n    type: \"Value Range Constraints\",\n    comment:\n      \"A constraint component that can be used to restrict the range of value nodes with a minimum exclusive value.\",\n    definedby: \"http://www.w3.org/ns/shacl#\",\n    label: \"Min-exclusive constraint component\",\n    parameter: {\n      definedby: \"http://www.w3.org/ns/shacl#\",\n      path: \"http://www.w3.org/ns/shacl#minExclusive\",\n      optional: \"true\",\n      datatype: null\n    }\n  },\n  {\n    type: \"Value Range Constraints\",\n    comment:\n      \"A constraint component that can be used to restrict the range of value nodes with a minimum inclusive value.\",\n    definedby: \"http://www.w3.org/ns/shacl#\",\n    label: \"Min-inclusive constraint component\",\n    parameter: {\n      definedby: \"http://www.w3.org/ns/shacl#\",\n      path: \"http://www.w3.org/ns/shacl#minInclusive\",\n      optional: \"true\",\n      datatype: null\n    }\n  },\n  {\n    type: \"String-Based Constraints\",\n    comment:\n      \"A constraint component that can be used to restrict the minimum string length of value nodes.\",\n    definedby: \"http://www.w3.org/ns/shacl#\",\n    label: \"Min-length constraint component\",\n    parameter: {\n      definedby: \"http://www.w3.org/ns/shacl#\",\n      path: \"http://www.w3.org/ns/shacl#minLength\",\n      optional: \"true\",\n      datatype: \"http://www.w3.org/2001/XMLSchema#integer\"\n    }\n  },\n  {\n    type: \"Shape-Based Constraints\",\n    comment:\n      \"A constraint component that can be used to verify that all value nodes conform to the given node shape.\",\n    definedby: \"http://www.w3.org/ns/shacl#\",\n    label: \"Node constraint component\",\n    parameter: {\n      definedby: \"http://www.w3.org/ns/shacl#\",\n      path: \"http://www.w3.org/ns/shacl#node\",\n      optional: \"true\",\n      datatype: null\n    }\n  },\n  {\n    type: \"Value Type Constraints\",\n    comment:\n      \"A constraint component that can be used to restrict the RDF node kind of each value node.\",\n    definedby: \"http://www.w3.org/ns/shacl#\",\n    label: \"Node-kind constraint component\",\n    parameter: {\n      definedby: \"http://www.w3.org/ns/shacl#\",\n      path: \"http://www.w3.org/ns/shacl#nodeKind\",\n      optional: \"true\",\n      datatype: null\n    }\n  },\n  {\n    type: \"Logical Constraints\",\n    comment:\n      \"A constraint component that can be used to verify that value nodes do not conform to a given shape.\",\n    definedby: \"http://www.w3.org/ns/shacl#\",\n    label: \"Not constraint component\",\n    parameter: {\n      definedby: \"http://www.w3.org/ns/shacl#\",\n      path: \"http://www.w3.org/ns/shacl#not\",\n      optional: \"true\",\n      datatype: null\n    }\n  },\n  {\n    type: \"Logical Constraints\",\n    comment:\n      \"A constraint component that can be used to restrict the value nodes so that they conform to at least one out of several provided shapes.\",\n    definedby: \"http://www.w3.org/ns/shacl#\",\n    label: \"Or constraint component\",\n    parameter: {\n      definedby: \"http://www.w3.org/ns/shacl#\",\n      path: \"http://www.w3.org/ns/shacl#or\",\n      optional: \"true\",\n      datatype: null\n    }\n  },\n  {\n    type: \"String-Based Constraints\",\n    comment:\n      \"A constraint component that can be used to verify that every value node matches a given regular expression.\",\n    definedby: \"http://www.w3.org/ns/shacl#\",\n    label: \"Pattern constraint component\",\n    parameter: {\n      definedby: \"http://www.w3.org/ns/shacl#\",\n      path: \"http://www.w3.org/ns/shacl#pattern\",\n      optional: \"true\",\n      datatype: \"http://www.w3.org/2001/XMLSchema#string\"\n    }\n  },\n  {\n    type: \"Shape-Based Constraints\",\n    comment:\n      \"A constraint component that can be used to verify that all value nodes conform to the given property shape.\",\n    definedby: \"http://www.w3.org/ns/shacl#\",\n    label: \"Property constraint component\",\n    parameter: {\n      definedby: \"http://www.w3.org/ns/shacl#\",\n      path: \"http://www.w3.org/ns/shacl#property\",\n      optional: \"true\",\n      datatype: null\n    }\n  },\n  {\n    type: \"Shape-Based Constraints\",\n    comment:\n      \"A constraint component that can be used to verify that a specified maximum number of value nodes conforms to a given shape.\",\n    definedby: \"http://www.w3.org/ns/shacl#\",\n    label: \"Qualified-max-count constraint component\",\n    parameter: {\n      definedby: \"http://www.w3.org/ns/shacl#\",\n      path: \"http://www.w3.org/ns/shacl#qualifiedMaxCount\",\n      optional: \"true\",\n      datatype: \"http://www.w3.org/2001/XMLSchema#integer\"\n    }\n  },\n  {\n    type: \"Shape-Based Constraints\",\n    comment:\n      \"A constraint component that can be used to verify that a specified minimum number of value nodes conforms to a given shape.\",\n    definedby: \"http://www.w3.org/ns/shacl#\",\n    label: \"Qualified-min-count constraint component\",\n    parameter: {\n      definedby: \"http://www.w3.org/ns/shacl#\",\n      path: \"http://www.w3.org/ns/shacl#qualifiedMinCount\",\n      optional: \"true\",\n      datatype: \"http://www.w3.org/2001/XMLSchema#integer\"\n    }\n  },\n  {\n    type: \"String-Based Constraints\",\n    comment:\n      \"A constraint component that can be used to specify that no pair of value nodes may use the same language tag.\",\n    definedby: \"http://www.w3.org/ns/shacl#\",\n    label: \"Unique-languages constraint component\",\n    parameter: {\n      definedby: \"http://www.w3.org/ns/shacl#\",\n      path: \"http://www.w3.org/ns/shacl#uniqueLang\",\n      optional: \"true\",\n      datatype: \"http://www.w3.org/2001/XMLSchema#boolean\"\n    }\n  },\n  {\n    type: \"Logical Constraints\",\n    comment:\n      \"A constraint component that can be used to restrict the value nodes so that they conform to exactly one out of several provided shapes.\",\n    definedby: \"http://www.w3.org/ns/shacl#\",\n    label: \"Exactly one constraint component\",\n    parameter: {\n      definedby: \"http://www.w3.org/ns/shacl#\",\n      path: \"http://www.w3.org/ns/shacl#xone\",\n      optional: \"true\",\n      datatype: null\n    }\n  }\n];\n\nconst json = [\n  {\n    \"@id\": \"_:b0\",\n    \"http://www.w3.org/ns/shacl#prefix\": [\n      {\n        \"@value\": \"sh\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#namespace\": [\n      {\n        \"@value\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"_:b1\",\n    \"http://www.w3.org/1999/02/22-rdf-syntax-ns#first\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#BlankNode\"\n      }\n    ],\n    \"http://www.w3.org/1999/02/22-rdf-syntax-ns#rest\": [\n      {\n        \"@id\": \"_:b2\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"_:b2\",\n    \"http://www.w3.org/1999/02/22-rdf-syntax-ns#first\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#IRI\"\n      }\n    ],\n    \"http://www.w3.org/1999/02/22-rdf-syntax-ns#rest\": [\n      {\n        \"@id\": \"_:b3\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"_:b3\",\n    \"http://www.w3.org/1999/02/22-rdf-syntax-ns#first\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Literal\"\n      }\n    ],\n    \"http://www.w3.org/1999/02/22-rdf-syntax-ns#rest\": [\n      {\n        \"@id\": \"_:b4\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"_:b4\",\n    \"http://www.w3.org/1999/02/22-rdf-syntax-ns#first\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#BlankNodeOrIRI\"\n      }\n    ],\n    \"http://www.w3.org/1999/02/22-rdf-syntax-ns#rest\": [\n      {\n        \"@id\": \"_:b5\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"_:b5\",\n    \"http://www.w3.org/1999/02/22-rdf-syntax-ns#first\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#BlankNodeOrLiteral\"\n      }\n    ],\n    \"http://www.w3.org/1999/02/22-rdf-syntax-ns#rest\": [\n      {\n        \"@id\": \"_:b6\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"_:b6\",\n    \"http://www.w3.org/1999/02/22-rdf-syntax-ns#first\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#IRIOrLiteral\"\n      }\n    ],\n    \"http://www.w3.org/1999/02/22-rdf-syntax-ns#rest\": [\n      {\n        \"@id\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#nil\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#List\"\n  },\n  {\n    \"@id\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"\n  },\n  {\n    \"@id\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#nil\"\n  },\n  {\n    \"@id\": \"http://www.w3.org/2000/01/rdf-schema#Class\"\n  },\n  {\n    \"@id\": \"http://www.w3.org/2000/01/rdf-schema#Datatype\"\n  },\n  {\n    \"@id\": \"http://www.w3.org/2000/01/rdf-schema#Resource\"\n  },\n  {\n    \"@id\": \"http://www.w3.org/2001/XMLSchema#anyURI\"\n  },\n  {\n    \"@id\": \"http://www.w3.org/2001/XMLSchema#boolean\"\n  },\n  {\n    \"@id\": \"http://www.w3.org/2001/XMLSchema#integer\"\n  },\n  {\n    \"@id\": \"http://www.w3.org/2001/XMLSchema#string\"\n  },\n  {\n    \"@id\": \"http://www.w3.org/2002/07/owl#Ontology\"\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#\",\n    \"@type\": [\"http://www.w3.org/2002/07/owl#Ontology\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"W3C Shapes Constraint Language (SHACL) Vocabulary\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"This vocabulary defines terms used in SHACL, the W3C Shapes Constraint Language.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#declare\": [\n      {\n        \"@id\": \"_:b0\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#suggestedShapesGraph\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl-shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#AbstractResult\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Abstract result\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The base class of validation results, typically not instantiated directly.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#AndConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"And constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to test whether a value node conforms to all members of a provided list of shapes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#AndConstraintComponent-and\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#AndConstraintComponent-and\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#and\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#BlankNode\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#NodeKind\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Blank node\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The node kind of all blank nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#BlankNodeOrIRI\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#NodeKind\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Blank node or IRI\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The node kind of all blank nodes or IRIs.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#BlankNodeOrLiteral\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#NodeKind\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Blank node or literal\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The node kind of all blank nodes or literals.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#ClassConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Class constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to verify that each value node is an instance of a given type.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#ClassConstraintComponent-class\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#ClassConstraintComponent-class\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#class\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#nodeKind\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#IRI\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#ClosedConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Closed constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to indicate that focus nodes must only have values for those properties that have been explicitly enumerated via sh:property/sh:path.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#ClosedConstraintComponent-closed\"\n      },\n      {\n        \"@id\":\n          \"http://www.w3.org/ns/shacl#ClosedConstraintComponent-ignoredProperties\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#ClosedConstraintComponent-closed\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#closed\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#datatype\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#boolean\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\":\n      \"http://www.w3.org/ns/shacl#ClosedConstraintComponent-ignoredProperties\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#ignoredProperties\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#optional\": [\n      {\n        \"@value\": true\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#ConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The class of constraint components.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Parameterizable\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#DatatypeConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Datatype constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to restrict the datatype of all value nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\":\n          \"http://www.w3.org/ns/shacl#DatatypeConstraintComponent-datatype\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#DatatypeConstraintComponent-datatype\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#datatype\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#nodeKind\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#IRI\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#maxCount\": [\n      {\n        \"@value\": 1\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#DisjointConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Disjoint constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to verify that the set of value nodes is disjoint with the the set of nodes that have the focus node as subject and the value of a given property as predicate.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\":\n          \"http://www.w3.org/ns/shacl#DisjointConstraintComponent-disjoint\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#DisjointConstraintComponent-disjoint\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#disjoint\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#nodeKind\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#IRI\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#EqualsConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Equals constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to verify that the set of value nodes is equal to the set of nodes that have the focus node as subject and the value of a given property as predicate.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#EqualsConstraintComponent-equals\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#EqualsConstraintComponent-equals\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#equals\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#nodeKind\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#IRI\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#ExpressionConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Expression constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to verify that a given node expression produces true for all value nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\":\n          \"http://www.w3.org/ns/shacl#ExpressionConstraintComponent-expression\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\":\n      \"http://www.w3.org/ns/shacl#ExpressionConstraintComponent-expression\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#expression\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#Function\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Function\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The class of SHACL functions.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Parameterizable\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#HasValueConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Has-value constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to verify that one of the value nodes is a given RDF node.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\":\n          \"http://www.w3.org/ns/shacl#HasValueConstraintComponent-hasValue\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#HasValueConstraintComponent-hasValue\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#hasValue\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#IRI\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#NodeKind\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"IRI\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The node kind of all IRIs.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#IRIOrLiteral\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#NodeKind\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"IRI or literal\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The node kind of all IRIs or literals.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#InConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"In constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to exclusively enumerate the permitted value nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#InConstraintComponent-in\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#InConstraintComponent-in\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#in\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#maxCount\": [\n      {\n        \"@value\": 1\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#Info\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Severity\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Info\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The severity for an informational validation result.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#JSConstraint\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"JavaScript-based constraint\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The class of constraints backed by a JavaScript function.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#JSExecutable\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#JSConstraint-js\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#js\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#JSConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"JavaScript constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component with the parameter sh:js linking to a sh:JSConstraint containing a sh:script.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#JSConstraint-js\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#JSExecutable\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"JavaScript executable\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Abstract base class of resources that declare an executable JavaScript.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#JSFunction\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"JavaScript function\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The class of SHACL functions that execute a JavaScript function when called.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Function\"\n      },\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#JSExecutable\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#JSLibrary\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"JavaScript library\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Represents a JavaScript library, typically identified by one or more URLs of files to include.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#JSRule\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"JavaScript rule\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The class of SHACL rules expressed using JavaScript.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#JSExecutable\"\n      },\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Rule\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#JSTarget\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"JavaScript target\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The class of targets that are based on JavaScript functions.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Target\"\n      },\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#JSExecutable\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#JSTargetType\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"JavaScript target type\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The (meta) class for parameterizable targets that are based on JavaScript functions.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#TargetType\"\n      },\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#JSExecutable\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#JSValidator\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"JavaScript validator\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A SHACL validator based on JavaScript. This can be used to declare SHACL constraint components that perform JavaScript-based validation when used.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#JSExecutable\"\n      },\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Validator\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#LanguageInConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Language-in constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to enumerate language tags that all value nodes must have.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\":\n          \"http://www.w3.org/ns/shacl#LanguageInConstraintComponent-languageIn\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\":\n      \"http://www.w3.org/ns/shacl#LanguageInConstraintComponent-languageIn\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#languageIn\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#maxCount\": [\n      {\n        \"@value\": 1\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#LessThanConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Less-than constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to verify that each value node is smaller than all the nodes that have the focus node as subject and the value of a given property as predicate.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\":\n          \"http://www.w3.org/ns/shacl#LessThanConstraintComponent-lessThan\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#LessThanConstraintComponent-lessThan\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#lessThan\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#nodeKind\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#IRI\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#LessThanOrEqualsConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"less-than-or-equals constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to verify that every value node is smaller than all the nodes that have the focus node as subject and the value of a given property as predicate.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\":\n          \"http://www.w3.org/ns/shacl#LessThanOrEqualsConstraintComponent-lessThanOrEquals\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\":\n      \"http://www.w3.org/ns/shacl#LessThanOrEqualsConstraintComponent-lessThanOrEquals\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#lessThanOrEquals\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#nodeKind\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#IRI\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#Literal\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#NodeKind\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Literal\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The node kind of all literals.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#MaxCountConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Max-count constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to restrict the maximum number of value nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\":\n          \"http://www.w3.org/ns/shacl#MaxCountConstraintComponent-maxCount\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#MaxCountConstraintComponent-maxCount\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#maxCount\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#datatype\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#maxCount\": [\n      {\n        \"@value\": 1\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#MaxExclusiveConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Max-exclusive constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to restrict the range of value nodes with a maximum exclusive value.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\":\n          \"http://www.w3.org/ns/shacl#MaxExclusiveConstraintComponent-maxExclusive\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\":\n      \"http://www.w3.org/ns/shacl#MaxExclusiveConstraintComponent-maxExclusive\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#maxExclusive\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#maxCount\": [\n      {\n        \"@value\": 1\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#nodeKind\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Literal\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#MaxInclusiveConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Max-inclusive constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to restrict the range of value nodes with a maximum inclusive value.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\":\n          \"http://www.w3.org/ns/shacl#MaxInclusiveConstraintComponent-maxInclusive\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\":\n      \"http://www.w3.org/ns/shacl#MaxInclusiveConstraintComponent-maxInclusive\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#maxInclusive\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#maxCount\": [\n      {\n        \"@value\": 1\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#nodeKind\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Literal\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#MaxLengthConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Max-length constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to restrict the maximum string length of value nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\":\n          \"http://www.w3.org/ns/shacl#MaxLengthConstraintComponent-maxLength\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#MaxLengthConstraintComponent-maxLength\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#maxLength\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#datatype\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#maxCount\": [\n      {\n        \"@value\": 1\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#MinCountConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Min-count constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to restrict the minimum number of value nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\":\n          \"http://www.w3.org/ns/shacl#MinCountConstraintComponent-minCount\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#MinCountConstraintComponent-minCount\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#minCount\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#datatype\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#maxCount\": [\n      {\n        \"@value\": 1\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#MinExclusiveConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Min-exclusive constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to restrict the range of value nodes with a minimum exclusive value.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\":\n          \"http://www.w3.org/ns/shacl#MinExclusiveConstraintComponent-minExclusive\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\":\n      \"http://www.w3.org/ns/shacl#MinExclusiveConstraintComponent-minExclusive\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#minExclusive\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#maxCount\": [\n      {\n        \"@value\": 1\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#nodeKind\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Literal\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#MinInclusiveConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Min-inclusive constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to restrict the range of value nodes with a minimum inclusive value.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\":\n          \"http://www.w3.org/ns/shacl#MinInclusiveConstraintComponent-minInclusive\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\":\n      \"http://www.w3.org/ns/shacl#MinInclusiveConstraintComponent-minInclusive\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#minInclusive\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#maxCount\": [\n      {\n        \"@value\": 1\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#nodeKind\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Literal\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#MinLengthConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Min-length constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to restrict the minimum string length of value nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\":\n          \"http://www.w3.org/ns/shacl#MinLengthConstraintComponent-minLength\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#MinLengthConstraintComponent-minLength\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#minLength\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#datatype\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#maxCount\": [\n      {\n        \"@value\": 1\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#NodeConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Node constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to verify that all value nodes conform to the given node shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#NodeConstraintComponent-node\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#NodeConstraintComponent-node\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#node\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#NodeKind\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Node kind\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The class of all node kinds, including sh:BlankNode, sh:IRI, sh:Literal or the combinations of these: sh:BlankNodeOrIRI, sh:BlankNodeOrLiteral, sh:IRIOrLiteral.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#NodeKindConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Node-kind constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to restrict the RDF node kind of each value node.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\":\n          \"http://www.w3.org/ns/shacl#NodeKindConstraintComponent-nodeKind\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#NodeKindConstraintComponent-nodeKind\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#nodeKind\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#in\": [\n      {\n        \"@id\": \"_:b1\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#maxCount\": [\n      {\n        \"@value\": 1\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#NodeShape\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Node shape\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A node shape is a shape that specifies constraint that need to be met with respect to focus nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Shape\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#NotConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Not constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to verify that value nodes do not conform to a given shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#NotConstraintComponent-not\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#NotConstraintComponent-not\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#not\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#OrConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Or constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to restrict the value nodes so that they conform to at least one out of several provided shapes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#OrConstraintComponent-or\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#OrConstraintComponent-or\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#or\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#Parameter\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Parameter\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The class of parameter declarations, consisting of a path predicate and (possibly) information about allowed value type, cardinality and other characteristics.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#PropertyShape\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#Parameterizable\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Parameterizable\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Superclass of components that can take parameters, especially functions and constraint components.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#PatternConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Pattern constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to verify that every value node matches a given regular expression.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#PatternConstraintComponent-pattern\"\n      },\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#PatternConstraintComponent-flags\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#PatternConstraintComponent-flags\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#flags\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#datatype\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#string\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#optional\": [\n      {\n        \"@value\": true\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#PatternConstraintComponent-pattern\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#pattern\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#datatype\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#string\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#PrefixDeclaration\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Prefix declaration\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The class of prefix declarations, consisting of pairs of a prefix with a namespace.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#PropertyConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Property constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to verify that all value nodes conform to the given property shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\":\n          \"http://www.w3.org/ns/shacl#PropertyConstraintComponent-property\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#PropertyConstraintComponent-property\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#property\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#PropertyGroup\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Property group\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Instances of this class represent groups of property shapes that belong together.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#PropertyShape\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Property shape\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A property shape is a shape that specifies constraints on the values of a focus node for a given property or path.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Shape\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#QualifiedMaxCountConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Qualified-max-count constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to verify that a specified maximum number of value nodes conforms to a given shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\":\n          \"http://www.w3.org/ns/shacl#QualifiedMaxCountConstraintComponent-qualifiedMaxCount\"\n      },\n      {\n        \"@id\":\n          \"http://www.w3.org/ns/shacl#QualifiedMaxCountConstraintComponent-qualifiedValueShape\"\n      },\n      {\n        \"@id\":\n          \"http://www.w3.org/ns/shacl#QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\":\n      \"http://www.w3.org/ns/shacl#QualifiedMaxCountConstraintComponent-qualifiedMaxCount\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#qualifiedMaxCount\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#datatype\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\":\n      \"http://www.w3.org/ns/shacl#QualifiedMaxCountConstraintComponent-qualifiedValueShape\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#qualifiedValueShape\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\":\n      \"http://www.w3.org/ns/shacl#QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#qualifiedValueShapesDisjoint\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#datatype\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#boolean\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#optional\": [\n      {\n        \"@value\": true\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#QualifiedMinCountConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Qualified-min-count constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to verify that a specified minimum number of value nodes conforms to a given shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\":\n          \"http://www.w3.org/ns/shacl#QualifiedMinCountConstraintComponent-qualifiedMinCount\"\n      },\n      {\n        \"@id\":\n          \"http://www.w3.org/ns/shacl#QualifiedMinCountConstraintComponent-qualifiedValueShape\"\n      },\n      {\n        \"@id\":\n          \"http://www.w3.org/ns/shacl#QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\":\n      \"http://www.w3.org/ns/shacl#QualifiedMinCountConstraintComponent-qualifiedMinCount\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#qualifiedMinCount\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#datatype\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\":\n      \"http://www.w3.org/ns/shacl#QualifiedMinCountConstraintComponent-qualifiedValueShape\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#qualifiedValueShape\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\":\n      \"http://www.w3.org/ns/shacl#QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#qualifiedValueShapesDisjoint\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#datatype\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#boolean\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#optional\": [\n      {\n        \"@value\": true\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#ResultAnnotation\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Result annotation\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A class of result annotations, which define the rules to derive the values of a given annotation property as extra values for a validation result.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#Rule\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Rule\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The class of SHACL rules. Never instantiated directly.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#SPARQLAskExecutable\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"SPARQL ASK executable\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The class of SPARQL executables that are based on an ASK query.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#SPARQLExecutable\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#SPARQLAskValidator\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"SPARQL ASK validator\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The class of validators based on SPARQL ASK queries. The queries are evaluated for each value node and are supposed to return true if the given node conforms.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Validator\"\n      },\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#SPARQLAskExecutable\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#SPARQLConstraint\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"SPARQL constraint\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The class of constraints based on SPARQL SELECT queries.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#SPARQLSelectExecutable\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#SPARQLConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"SPARQL constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to define constraints based on SPARQL queries.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#SPARQLConstraintComponent-sparql\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#SPARQLConstraintComponent-sparql\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#sparql\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#SPARQLConstructExecutable\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"SPARQL CONSTRUCT executable\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The class of SPARQL executables that are based on a CONSTRUCT query.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#SPARQLExecutable\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#SPARQLExecutable\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"SPARQL executable\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The class of resources that encapsulate a SPARQL query.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#SPARQLFunction\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"SPARQL function\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"A function backed by a SPARQL query - either ASK or SELECT.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Function\"\n      },\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#SPARQLAskExecutable\"\n      },\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#SPARQLSelectExecutable\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#SPARQLRule\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"SPARQL CONSTRUCT rule\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The class of SHACL rules based on SPARQL CONSTRUCT queries.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Rule\"\n      },\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#SPARQLConstructExecutable\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#SPARQLSelectExecutable\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"SPARQL SELECT executable\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The class of SPARQL executables based on a SELECT query.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#SPARQLExecutable\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#SPARQLSelectValidator\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"SPARQL SELECT validator\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The class of validators based on SPARQL SELECT queries. The queries are evaluated for each focus node and are supposed to produce bindings for all focus nodes that do not conform.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Validator\"\n      },\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#SPARQLSelectExecutable\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#SPARQLTarget\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"SPARQL target\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The class of targets that are based on SPARQL queries.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Target\"\n      },\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#SPARQLAskExecutable\"\n      },\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#SPARQLSelectExecutable\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#SPARQLTargetType\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"SPARQL target type\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The (meta) class for parameterizable targets that are based on SPARQL queries.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#TargetType\"\n      },\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#SPARQLAskExecutable\"\n      },\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#SPARQLSelectExecutable\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#SPARQLUpdateExecutable\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"SPARQL UPDATE executable\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The class of SPARQL executables based on a SPARQL UPDATE.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#SPARQLExecutable\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#Severity\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Severity\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The class of validation result severity levels, including violation and warning levels.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#Shape\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Shape\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A shape is a collection of constraints that may be targeted for certain nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#Target\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Target\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The base class of targets such as those based on SPARQL queries.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#TargetType\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Target type\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The (meta) class for parameterizable targets.\\tInstances of this are instantiated as values of the sh:target property.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/2000/01/rdf-schema#Class\"\n      },\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Parameterizable\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#TripleRule\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\":\n          \"A rule based on triple (subject, predicate, object) pattern.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Rule\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#UniqueLangConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Unique-languages constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to specify that no pair of value nodes may use the same language tag.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\":\n          \"http://www.w3.org/ns/shacl#UniqueLangConstraintComponent-uniqueLang\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\":\n      \"http://www.w3.org/ns/shacl#UniqueLangConstraintComponent-uniqueLang\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#uniqueLang\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#datatype\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#boolean\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#maxCount\": [\n      {\n        \"@value\": 1\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#ValidationReport\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Validation report\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The class of SHACL validation reports.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#ValidationResult\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Validation result\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The class of validation results.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#AbstractResult\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#Validator\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Validator\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The class of validators, which provide instructions on how to process a constraint definition. This class serves as base class for the SPARQL-based validators and other possible implementations.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"http://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#Violation\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Severity\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Violation\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The severity for a violation validation result.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#Warning\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Severity\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Warning\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The severity for a warning validation result.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#XoneConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Exactly one constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to restrict the value nodes so that they conform to exactly one out of several provided shapes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#XoneConstraintComponent-xone\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#XoneConstraintComponent-xone\",\n    \"@type\": [\"http://www.w3.org/ns/shacl#Parameter\"],\n    \"http://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#xone\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#alternativePath\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"alternative path\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The (single) value of this property must be a list of path elements, representing the elements of alternative paths.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#List\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#and\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"and\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"RDF list of shapes to validate the value nodes against.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#List\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#annotationProperty\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"annotation property\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The annotation property that shall be set.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#ResultAnnotation\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#annotationValue\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"annotation value\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The (default) values of the annotation property.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#ResultAnnotation\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#annotationVarName\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"annotation variable name\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The name of the SPARQL variable from the SELECT clause that shall be used for the values.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#ResultAnnotation\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#string\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#ask\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"ask\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The SPARQL ASK query to execute.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#SPARQLAskExecutable\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#string\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#class\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"class\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The type that all value nodes must have.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2000/01/rdf-schema#Class\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#closed\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"closed\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"If set to true then the shape is closed.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#boolean\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#condition\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"condition\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The shapes that the focus nodes need to conform to before a rule is executed on them.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Rule\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Shape\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#conforms\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"conforms\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"True if the validation did not produce any validation results, and false otherwise.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#ValidationReport\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#boolean\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#construct\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"construct\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The SPARQL CONSTRUCT query to execute.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#SPARQLConstructExecutable\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#string\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#datatype\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"datatype\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"Specifies an RDF datatype that all value nodes must have.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2000/01/rdf-schema#Datatype\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#deactivated\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"deactivated\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"If set to true then all nodes conform to this.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#boolean\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#declare\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"declare\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"Links a resource with its namespace prefix declarations.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/2002/07/owl#Ontology\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#PrefixDeclaration\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#defaultValue\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"default value\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A default value for a property, for example for user interface tools to pre-populate input fields.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#PropertyShape\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#description\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"description\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Human-readable descriptions for the property in the context of the surrounding shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#PropertyShape\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#detail\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"detail\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Links a result with other results that provide more details, for example to describe violations against nested shapes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#AbstractResult\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#AbstractResult\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#disjoint\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"disjoint\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Specifies a property where the set of values must be disjoint with the value nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#entailment\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"entailment\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"An entailment regime that indicates what kind of inferencing is required by a shapes graph.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/2002/07/owl#Ontology\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#equals\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"equals\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Specifies a property that must have the same values as the value nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#expression\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"expression\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The node expression that must return true for the value nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#filterShape\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"filter shape\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The shape that all input nodes of the expression need to conform to.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Shape\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#flags\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"flags\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"An optional flag to be used with regular expression pattern matching.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#string\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#focusNode\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"focus node\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The focus node that was validated when the result was produced.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#AbstractResult\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#group\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"group\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Can be used to link to a property group to indicate that a property shape belongs to a group of related property shapes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#PropertyShape\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#PropertyGroup\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#hasValue\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"has value\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"Specifies a value that must be among the value nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#ignoredProperties\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"ignored properties\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"An optional RDF list of properties that are also permitted in addition to those explicitly enumerated via sh:property/sh:path.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#List\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#in\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"in\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Specifies a list of allowed values so that each value node must be among the members of the given list.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#List\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#intersection\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"intersection\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"A list of node expressions that shall be intersected.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#inversePath\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"inverse path\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The (single) value of this property represents an inverse path (object to subject).\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#js\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"JavaScript constraint\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"Constraints expressed in JavaScript.\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#JSConstraint\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#jsFunctionName\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"JavaScript function name\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The name of the JavaScript function to execute.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#JSExecutable\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#string\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#jsLibrary\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"JavaScript library\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Declares which JavaScript libraries are needed to execute this.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#JSLibrary\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#jsLibraryURL\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"JavaScript library URL\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Declares the URLs of a JavaScript library. This should be the absolute URL of a JavaScript file. Implementations may redirect those to local files.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#JSLibrary\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#anyURI\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#labelTemplate\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"label template\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Outlines how human-readable labels of instances of the associated Parameterizable shall be produced. The values can contain {?paramName} as placeholders for the actual values of the given parameter.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Parameterizable\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#languageIn\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"language in\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Specifies a list of language tags that all value nodes must have.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#List\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#lessThan\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"less than\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Specifies a property that must have smaller values than the value nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#lessThanOrEquals\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"less than or equals\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Specifies a property that must have smaller or equal values than the value nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#maxCount\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"max count\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Specifies the maximum number of values in the set of value nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#maxExclusive\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"max exclusive\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"Specifies the maximum exclusive value of each value node.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#maxInclusive\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"max inclusive\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"Specifies the maximum inclusive value of each value node.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#maxLength\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"max length\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"Specifies the maximum string length of each value node.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#message\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"message\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A human-readable message (possibly with placeholders for variables) explaining the cause of the result.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#minCount\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"min count\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Specifies the minimum number of values in the set of value nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#minExclusive\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"min exclusive\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"Specifies the minimum exclusive value of each value node.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#minInclusive\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"min inclusive\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"Specifies the minimum inclusive value of each value node.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#minLength\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"min length\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"Specifies the minimum string length of each value node.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#name\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"name\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Human-readable labels for the property in the context of the surrounding shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#PropertyShape\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#namespace\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"namespace\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The namespace associated with a prefix in a prefix declaration.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#PrefixDeclaration\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#anyURI\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#node\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"node\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Specifies the node shape that all value nodes must conform to.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#NodeShape\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#nodeKind\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"node kind\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Specifies the node kind (e.g. IRI or literal) each value node.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#NodeKind\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#nodeValidator\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"shape validator\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The validator(s) used to evaluate a constraint in the context of a node shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#ConstraintComponent\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Validator\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#nodes\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"nodes\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The node expression producing the input nodes of a filter shape expression.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#not\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"not\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"Specifies a shape that the value nodes must not conform to.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Shape\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#object\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"object\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"An expression producing the nodes that shall be inferred as objects.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#TripleRule\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#oneOrMorePath\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"one or more path\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The (single) value of this property represents a path that is matched one or more times.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#optional\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"optional\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"Indicates whether a parameter is optional.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Parameter\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#boolean\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#or\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"or\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Specifies a list of shapes so that the value nodes must conform to at least one of the shapes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#List\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#order\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"order\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Specifies the relative order of this compared to its siblings. For example use 0 for the first, 1 for the second.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#parameter\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"parameter\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The parameters of a function or constraint component.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Parameterizable\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Parameter\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#path\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"path\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"Specifies the property path of a property shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#PropertyShape\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#pattern\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"pattern\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Specifies a regular expression pattern that the string representations of the value nodes must match.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#string\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#predicate\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"predicate\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"An expression producing the properties that shall be inferred as predicates.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#TripleRule\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#prefix\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"prefix\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The prefix of a prefix declaration.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#PrefixDeclaration\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#string\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#prefixes\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"prefixes\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The prefixes that shall be applied before parsing the associated SPARQL query.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#SPARQLExecutable\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2002/07/owl#Ontology\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#property\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"property\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"Links a shape to its property shapes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Shape\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#PropertyShape\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#propertyValidator\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"property validator\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The validator(s) used to evaluate a constraint in the context of a property shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#ConstraintComponent\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Validator\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#qualifiedMaxCount\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"qualified max count\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The maximum number of value nodes that can conform to the shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#qualifiedMinCount\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"qualified min count\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The minimum number of value nodes that must conform to the shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#qualifiedValueShape\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"qualified value shape\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The shape that a specified number of values must conform to.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Shape\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#qualifiedValueShapesDisjoint\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"qualified value shapes disjoint\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Can be used to mark the qualified value shape to be disjoint with its sibling shapes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#boolean\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#result\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"result\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The validation results contained in a validation report.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#ValidationReport\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#ValidationResult\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#resultAnnotation\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"result annotation\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Links a SPARQL validator with zero or more sh:ResultAnnotation instances, defining how to derive additional result properties based on the variables of the SELECT query.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#SPARQLSelectValidator\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#ResultAnnotation\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#resultMessage\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"result message\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"Human-readable messages explaining the cause of the result.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#AbstractResult\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#resultPath\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"result path\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The path of a validation result, based on the path of the validated property shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#AbstractResult\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#resultSeverity\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"result severity\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The severity of the result, e.g. warning.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#AbstractResult\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Severity\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#returnType\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"return type\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The expected type of values returned by the associated function.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Function\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2000/01/rdf-schema#Class\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#rule\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"rule\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The rules linked to a shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Shape\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Rule\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#select\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"select\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The SPARQL SELECT query to execute.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#string\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#SPARQLSelectExecutable\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#severity\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"severity\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Defines the severity that validation results produced by a shape must have. Defaults to sh:Violation.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Shape\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Severity\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#shapesGraph\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"shapes graph\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Shapes graphs that should be used when validating this data graph.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/2002/07/owl#Ontology\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2002/07/owl#Ontology\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#shapesGraphWellFormed\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"shapes graph well-formed\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"If true then the validation engine was certain that the shapes graph has passed all SHACL syntax requirements during the validation process.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#ValidationReport\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#boolean\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#sourceConstraint\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"source constraint\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The constraint that was validated when the result was produced.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#AbstractResult\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#sourceConstraintComponent\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"source constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The constraint component that is the source of the result.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#AbstractResult\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#ConstraintComponent\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#sourceShape\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"source shape\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The shape that is was validated when the result was produced.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#AbstractResult\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Shape\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#sparql\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"constraint (in SPARQL)\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"Links a shape with SPARQL constraints.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Shape\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#SPARQLConstraint\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#subject\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"subject\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"An expression producing the resources that shall be inferred as subjects.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#TripleRule\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#suggestedShapesGraph\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"suggested shapes graph\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Suggested shapes graphs for this ontology. The values of this property may be used in the absence of specific sh:shapesGraph statements.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/2002/07/owl#Ontology\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2002/07/owl#Ontology\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#target\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"target\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Links a shape to a target specified by an extension language, for example instances of sh:SPARQLTarget.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Shape\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Target\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#targetClass\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"target class\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Links a shape to a class, indicating that all instances of the class must conform to the shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Shape\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2000/01/rdf-schema#Class\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#targetNode\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"target node\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Links a shape to individual nodes, indicating that these nodes must conform to the shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Shape\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#targetObjectsOf\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"target objects of\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Links a shape to a property, indicating that all all objects of triples that have the given property as their predicate must conform to the shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Shape\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#targetSubjectsOf\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"target subjects of\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Links a shape to a property, indicating that all subjects of triples that have the given property as their predicate must conform to the shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Shape\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#this\",\n    \"@type\": [\"http://www.w3.org/2000/01/rdf-schema#Resource\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"this\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"A node expression that represents the current focus node.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#union\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"union\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"A list of node expressions that shall be used together.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#uniqueLang\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"unique languages\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Specifies whether all node values must have a unique (or no) language tag.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#boolean\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#update\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"update\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The SPARQL UPDATE to execute.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#SPARQLUpdateExecutable\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2001/XMLSchema#string\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#validator\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"validator\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The validator(s) used to evaluate constraints of either node or property shapes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#ConstraintComponent\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#Validator\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#value\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"value\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"An RDF node that has caused the result.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#AbstractResult\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#xone\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"exactly one\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Specifies a list of shapes so that the value nodes must conform to exactly one of the shapes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#List\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#zeroOrMorePath\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"zero or more path\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The (single) value of this property represents a path that is matched zero or more times.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl#zeroOrOnePath\",\n    \"@type\": [\"http://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"http://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"zero or one path\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The (single) value of this property represents a path that is matched zero or one times.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"http://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"http://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"http://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"http://www.w3.org/ns/shacl-shacl#\"\n  }\n];\n\n// The core SHACL constraints divided by category.\nexport const constraintsByTypes = {\n  \"Value Type Constraints\": [\n    \"http://www.w3.org/ns/shacl#class\",\n    // \"http://www.w3.org/ns/shacl#path\",\n    \"http://www.w3.org/ns/shacl#datatype\",\n    \"http://www.w3.org/ns/shacl#nodeKind\"\n  ],\n  \"Cardinality Constraints\": [\n    \"http://www.w3.org/ns/shacl#minCount\",\n    \"http://www.w3.org/ns/shacl#maxCount\"\n  ],\n  \"Value Range Constraints\": [\n    \"http://www.w3.org/ns/shacl#minInclusive\",\n    \"http://www.w3.org/ns/shacl#minExclusive\",\n    \"http://www.w3.org/ns/shacl#maxInclusive\",\n    \"http://www.w3.org/ns/shacl#maxExclusive\"\n  ],\n  \"String-Based Constraints\": [\n    \"http://www.w3.org/ns/shacl#name\",\n    \"http://www.w3.org/ns/shacl#minLength\",\n    \"http://www.w3.org/ns/shacl#maxLength\",\n    \"http://www.w3.org/ns/shacl#pattern\",\n    \"http://www.w3.org/ns/shacl#languageIn\",\n    \"http://www.w3.org/ns/shacl#uniqueLang\"\n  ],\n  \"Property Pair Constraints\": [\n    \"http://www.w3.org/ns/shacl#equals\",\n    \"http://www.w3.org/ns/shacl#disjoint\",\n    \"http://www.w3.org/ns/shacl#lessThan\",\n    \"http://www.w3.org/ns/shacl#lessThanOrEquals\"\n  ],\n  \"Logical Constraints\": [\n    \"http://www.w3.org/ns/shacl#not\",\n    \"http://www.w3.org/ns/shacl#and\",\n    \"http://www.w3.org/ns/shacl#or\",\n    \"http://www.w3.org/ns/shacl#xone\"\n  ],\n  \"Shape-Based Constraints\": [\n    \"http://www.w3.org/ns/shacl#node\",\n    \"http://www.w3.org/ns/shacl#targetNode\",\n    \"http://www.w3.org/ns/shacl#targetClass\",\n    \"http://www.w3.org/ns/shacl#targetObjectsOf\",\n    \"http://www.w3.org/ns/shacl#property\",\n    \"http://www.w3.org/ns/shacl#qualifiedValueShape\",\n    \"http://www.w3.org/ns/shacl#qualifiedMinCount\",\n    \"http://www.w3.org/ns/shacl#qualifiedMaxCount\"\n  ],\n  \"Other Constraints\": [\n    \"http://www.w3.org/ns/shacl#closed\",\n    \"http://www.w3.org/ns/shacl#ignoredProperties\",\n    \"http://www.w3.org/ns/shacl#hasValue\",\n    \"http://www.w3.org/ns/shacl#in\"\n  ]\n};\n\n/**\n * Get an object mapping the category types to a list of custom constraints in that category.\n */\nexport function customConstraintsByCategory() {\n  const output = {};\n  for (const type in constraintsByTypes) {\n    const byType = [];\n    for (const constraint of constraintsByTypes[type]) {\n      byType.push(ShaclTranslator.toModelSimple(constraint));\n    }\n    output[type] = byType;\n  }\n  return output;\n}\n\n/**\n * Get the table contents of the possible constraints.\n * Every constraint will be transformed into an object:\n * {\n *   id {string} the full ID of the constraint,\n *   predicate {string} the name of the predicate that will be used to visualize,\n *   type {string} the name of the category,\n *   description {string} the description of the constraint\n * }\n * @param {object} namespaces map of prefixes to URIs.\n * @returns {[]} list of constraint objects meant for visualization.\n */\nexport function tableContents(namespaces) {\n  const allConstraints = [].concat(...Object.values(constraintsByTypes));\n  const contents = [];\n  allConstraints.map(constraint => {\n    const id = ShaclTranslator.toModelSimple(constraint);\n    contents.push({\n      id,\n      predicate: uriToPrefix(namespaces, id),\n      type: getConstraintCategory(id).replace(\" Constraints\", \"\"),\n      description: json.filter(obj => obj[\"@id\"] === constraint)[0][\n        \"http://www.w3.org/2000/01/rdf-schema#comment\"\n      ][0][\"@value\"]\n    });\n  });\n  return contents;\n}\n\n/**\n * Get the constraint category of the constraint with the given ID.\n * @param {string} constraintID the ID of the constraint we want to get the category from.\n * @returns {string} the category of the given constraint.\n */\nexport function getConstraintCategory(constraintID) {\n  constraintID = ShaclTranslator.toSHACLSimple(constraintID);\n  for (const type in constraintsByTypes) {\n    if (constraintsByTypes[type].includes(constraintID)) return type;\n  }\n}\n\n/**\n * Get the value type of the constraint with the given ID.\n * @param {string} constraintID the ID of the constraint whose value type we want to determine.\n * @returns {string} possible values:\n *                    Class, Datatype,  NodeKind, List;\n *                    Property, PropertyShape, NodeShape, Shape;\n *                    integer, string, boolean.\n */\nexport function getConstraintValueType(constraintID) {\n  const object = json.filter(\n    c => c[\"@id\"] === ShaclTranslator.toSHACLSimple(constraintID)\n  )[0];\n  const range = object[\"http://www.w3.org/2000/01/rdf-schema#range\"];\n  return range ? ShaclTranslator.toModelSimple(range[0][\"@id\"]) : \"\";\n}\n\nexport const groupedConstraints = groupBy(constraintsWithTypes, \"type\");\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('table',{staticClass:\"table\"},[_c('tr',[_c('td',[_c('sui-table',{attrs:{\"color\":\"green\",\"inverted\":\"\"}},[_c('sui-table-header',[_c('sui-table-row',[_c('sui-table-header-cell',{staticClass:\"two wide\"},[_c('span',{staticClass:\"clickable\",on:{\"click\":function($event){return _vm.setSorting(true, 'predicate')}}},[_vm._v(\"\\n                  Predicate\\n                  \"),(_vm.$props.sorting.sortBy === 'predicate')?_c('span',[(_vm.$props.sorting.ascending)?_c('sui-icon',{attrs:{\"name\":\"sort up\"}}):_vm._e(),(!_vm.$props.sorting.ascending)?_c('sui-icon',{attrs:{\"name\":\"sort down\"}}):_vm._e()],1):_vm._e(),(_vm.$props.sorting.sortBy !== 'predicate')?_c('span',[_c('sui-icon',{attrs:{\"name\":\"sort\"}})],1):_vm._e()])]),_c('sui-table-header-cell',{staticClass:\"five wide\"},[_c('span',{staticClass:\"unclickable\"},[_vm._v(\"Description\")])]),_c('sui-table-header-cell',{staticClass:\"two wide\"},[_c('span',{staticClass:\"clickable\",on:{\"click\":function($event){return _vm.setSorting(true, 'type')}}},[_vm._v(\"\\n                  Type\\n                  \"),(_vm.$props.sorting.sortBy === 'type')?_c('span',[(_vm.$props.sorting.ascending)?_c('sui-icon',{attrs:{\"name\":\"sort up\"}}):_vm._e(),(!_vm.$props.sorting.ascending)?_c('sui-icon',{attrs:{\"name\":\"sort down\"}}):_vm._e()],1):_vm._e(),(_vm.$props.sorting.sortBy !== 'type')?_c('span',[_c('sui-icon',{attrs:{\"name\":\"sort\"}})],1):_vm._e()])])],1)],1)],1)],1)]),_c('tr',[_c('td',[_c('div',{class:{ 'table-body': !_vm.editing }},[_c('sui-table',{attrs:{\"selectable\":!_vm.editing}},[_c('sui-table-body',_vm._l((_vm.sortList(_vm.filterContents())),function(object){return _c('sui-table-row',{key:object.id,ref:object.id,refInFor:true,attrs:{\"active\":!_vm.editing && _vm.selected === object.id},on:{\"click\":function($event){return _vm.selectConstraint(object.id)}}},[_c('sui-table-cell',{staticClass:\"three wide\"},[_vm._v(\"\\n                  \"+_vm._s(object.predicate)+\"\\n                \")]),_c('sui-table-cell',{staticClass:\"eight wide\"},[_vm._v(\"\\n                  \"+_vm._s(object.description)+\"\\n                \")]),_c('sui-table-cell',{staticClass:\"three wide\"},[_vm._v(\"\\n                  \"+_vm._s(object.type.replace(\" Constraints\", \"\"))+\"\\n                \")])],1)}),1)],1)],1)])])]),(_vm.editing && _vm.clicked)?_c('sui-segment',{attrs:{\"emphasis\":\"secondary\"}},[_c('div',[_vm._v(\"\\n      You cannot change the predicate while editing.\\n    \")]),_c('div',[_vm._v(\"\\n      To change it, remove this constraint and add the wanted predicate.\\n    \")])]):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <table class=\"table\">\n      <tr>\n        <td>\n          <sui-table color=\"green\" inverted>\n            <sui-table-header>\n              <sui-table-row>\n                <sui-table-header-cell class=\"two wide\">\n                  <span\n                    class=\"clickable\"\n                    @click=\"setSorting(true, 'predicate')\"\n                  >\n                    Predicate\n                    <span v-if=\"$props.sorting.sortBy === 'predicate'\">\n                      <sui-icon\n                        v-if=\"$props.sorting.ascending\"\n                        name=\"sort up\"\n                      ></sui-icon>\n                      <sui-icon\n                        v-if=\"!$props.sorting.ascending\"\n                        name=\"sort down\"\n                      ></sui-icon>\n                    </span>\n                    <span v-if=\"$props.sorting.sortBy !== 'predicate'\">\n                      <sui-icon name=\"sort\"></sui-icon>\n                    </span>\n                  </span>\n                </sui-table-header-cell>\n\n                <sui-table-header-cell class=\"five wide\">\n                  <span class=\"unclickable\">Description</span>\n                </sui-table-header-cell>\n                <sui-table-header-cell class=\"two wide\">\n                  <span class=\"clickable\" @click=\"setSorting(true, 'type')\">\n                    Type\n                    <span v-if=\"$props.sorting.sortBy === 'type'\">\n                      <sui-icon\n                        v-if=\"$props.sorting.ascending\"\n                        name=\"sort up\"\n                      ></sui-icon>\n                      <sui-icon\n                        v-if=\"!$props.sorting.ascending\"\n                        name=\"sort down\"\n                      ></sui-icon>\n                    </span>\n                    <span v-if=\"$props.sorting.sortBy !== 'type'\">\n                      <sui-icon name=\"sort\"></sui-icon>\n                    </span>\n                  </span>\n                </sui-table-header-cell>\n              </sui-table-row>\n            </sui-table-header>\n          </sui-table>\n        </td>\n      </tr>\n\n      <tr>\n        <td>\n          <div :class=\"{ 'table-body': !editing }\">\n            <sui-table :selectable=\"!editing\">\n              <sui-table-body>\n                <sui-table-row\n                  v-for=\"object of sortList(filterContents())\"\n                  :key=\"object.id\"\n                  :ref=\"object.id\"\n                  :active=\"!editing && selected === object.id\"\n                  @click=\"selectConstraint(object.id)\"\n                >\n                  <sui-table-cell class=\"three wide\">\n                    {{ object.predicate }}\n                  </sui-table-cell>\n                  <sui-table-cell class=\"eight wide\">\n                    {{ object.description }}\n                  </sui-table-cell>\n                  <sui-table-cell class=\"three wide\">\n                    {{ object.type.replace(\" Constraints\", \"\") }}\n                  </sui-table-cell>\n                </sui-table-row>\n              </sui-table-body>\n            </sui-table>\n          </div>\n        </td>\n      </tr>\n    </table>\n\n    <sui-segment v-if=\"editing && clicked\" emphasis=\"secondary\">\n      <!-- TODO allow predicate editing? -->\n      <div>\n        You cannot change the predicate while editing.\n      </div>\n      <div>\n        To change it, remove this constraint and add the wanted predicate.\n      </div>\n    </sui-segment>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"PredicateTable\",\n  props: {\n    contents: {\n      type: Array,\n      required: true\n    },\n    filter: {\n      type: String,\n      required: true\n    },\n    selected: {\n      type: String,\n      required: false,\n      default: \"\"\n    },\n    editing: {\n      type: Boolean,\n      required: true\n    },\n    sorting: {\n      type: Object,\n      required: false,\n      default() {\n        return {\n          sorted: true, // Is the table sorted?\n          sortBy: \"predicate\", // What field is the table sorted with?\n          ascending: true // Is the table sorted alphabetically?\n        };\n      }\n    }\n  },\n  /**\n   * Clicked {boolean} indicates if the row is clicked when the user is editing.\n   * @returns {{clicked: boolean}}\n   */\n  data() {\n    return {\n      clicked: false\n    };\n  },\n  mounted() {\n    const self = this;\n    this.$store.watch(\n      () => self.$store.state.mShape.mConstraint.mModal.selected,\n      () => {\n        self.clicked = false;\n      }\n    );\n  },\n  methods: {\n    /**\n     * Set the sorting to the given values.\n     * @param {boolean} sorted indicates if the table is sorted.\n     * @param {string} sortBy the column that is used to sort the table.\n     */\n    setSorting(sorted, sortBy) {\n      const p = this.$props.sorting;\n      /* Invert the order if the sorting criterium stays the same, otherwise sort alphabetically. */\n      const ascending = p.sortBy === sortBy ? !p.ascending : true;\n      this.$store.commit(\"sortPredicateModal\", {\n        sorted,\n        sortBy,\n        ascending\n      });\n    },\n\n    /**\n     * Filter the table contents according to the entered search term.\n     * If the user is editing the constraint, only show the selected constraint.\n     * If no search term is entered, show everything.\n     * Otherwise, check for each row if the search term occurs in the predicate or type.\n     * The selected predicate will always be shown.\n     * @returns {[]} list of constraint objects: {id, predicate, description, type}\n     */\n    filterContents() {\n      const { contents, selected } = this.$props;\n      if (this.editing) return contents.filter(obj => obj.id === selected);\n      if (this.filter === \"\") {\n        /* If there is no filter, show every entry. */\n        return Object.values(contents);\n      }\n      /* Otherwise, filter the table contents. */\n      const filtered = [];\n      for (const obj of contents) {\n        const type = obj[\"type\"].replace(\" Constraints\", \"\");\n        /* Always show the selected predicate. */\n        /* Check if the search term matches the type. */\n        /* Check if the search term matches the predicate. */\n        if (\n          obj.id === selected ||\n          this.matches(type) ||\n          this.matches(obj.predicate)\n        )\n          filtered.push(obj);\n      }\n      return filtered;\n    },\n\n    /**\n     * Check if the given string matches the current filter.\n     * Make the string and filter lowercase and remove the whitespace and non-alphanumeric characters first.\n     * @param {string} string the string that we want to check.\n     * @returns {boolean} value which indicates if the given string matches the current filter.\n     */\n    matches(string) {\n      const matchString = string.toLowerCase().replace(/[^0-9a-z]/gi, \"\");\n      const search = this.filter.toLowerCase().replace(/[^0-9a-z]/gi, \"\");\n      return matchString.includes(search);\n    },\n\n    /**\n     * Sort the given list using the sorting properties.\n     * `sorted` {boolean} indicates if the list should be sorted.\n     * `sortBy` {string} indicates which field the list should be sorted with.\n     * `ascending` {boolean} indicates if the list should be sorted alphabetically.\n     * @param {[]} list\n     * @returns {[]} the sorted list\n     */\n    sortList(list) {\n      const { sorted, sortBy, ascending } = this.$props.sorting;\n      if (sorted) {\n        /* Sort the given list using the current requirements. */\n        sortBy === \"predicate\"\n          ? list.sort(comparePredicates)\n          : sortBy === \"type\"\n          ? list.sort(compareType)\n          : null;\n\n        /* Reverse the list if needed. */\n        if (!ascending) list.reverse();\n      }\n      return list;\n    },\n\n    /**\n     * Select the constraint with the given key. This will activate the clicked row.\n     * Only allow selecting if the user is not editing the constraint. Otherwise, show a message.\n     * @param {string} key the key of the row we want to select.\n     */\n    selectConstraint(key) {\n      if (this.editing) {\n        this.clicked = true;\n      } else {\n        this.$store.commit(\"selectRow\", { key });\n      }\n    }\n  }\n};\n\n/**\n * Compare the given objects by predicate.\n * @param {object} a the first object that should be compared.\n * @param {object} b the second object that should be compared.\n * @returns {number}\n */\nfunction comparePredicates(a, b) {\n  if (a[\"predicate\"] < b[\"predicate\"]) return -1;\n  if (a[\"predicate\"] > b[\"predicate\"]) return 1;\n  return 0;\n}\n\n/**\n * Compare the given objects by type.\n * @param {object} a the first object that should be compared.\n * @param {object} b the second object that should be compared.\n * @returns {number}\n */\nfunction compareType(a, b) {\n  if (a[\"type\"] < b[\"type\"]) return -1;\n  if (a[\"type\"] > b[\"type\"]) return 1;\n  return 0;\n}\n</script>\n\n<style scoped>\n.table {\n  width: 100%;\n  min-width: 100%;\n  max-width: 100%;\n}\n.table-body {\n  height: 35vh;\n  min-height: 20vh;\n  max-height: 35vh;\n  overflow: auto;\n}\n\n.clickable {\n  cursor: pointer;\n}\n.unclickable {\n  cursor: default;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PredicateTable.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PredicateTable.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PredicateTable.vue?vue&type=template&id=110e542f&scoped=true&\"\nimport script from \"./PredicateTable.vue?vue&type=script&lang=js&\"\nexport * from \"./PredicateTable.vue?vue&type=script&lang=js&\"\nimport style0 from \"./PredicateTable.vue?vue&type=style&index=0&id=110e542f&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"110e542f\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <sui-modal v-model=\"$store.state.mShape.mConstraint.mModal.show\">\n    <sui-modal-header>\n      {{ $props.modalProperties.editing ? \"Edit Predicate\" : \"Add Predicate\" }}\n    </sui-modal-header>\n    <sui-modal-content scrolling>\n      <sui-form @submit.prevent=\"() => {}\">\n        <sui-form-field v-if=\"!$props.modalProperties.editing\">\n          <label for=\"search\">Search</label>\n          <input id=\"search\" v-model=\"values.search\" />\n        </sui-form-field>\n\n        <predicate-table\n          :contents=\"table()\"\n          :filter=\"values.search\"\n          :selected=\"$props.modalProperties.selected\"\n          :editing=\"$props.modalProperties.editing\"\n          :sorting=\"$store.state.mShape.mConstraint.mModal.sorting\"\n        ></predicate-table>\n\n        <br />\n        <sui-form-field\n          v-if=\"$store.getters.objects($props.modalProperties.selected)\"\n          class=\"field\"\n          :inline=\"true\"\n        >\n          <label>Value</label>\n          <input\n            v-if=\"!showDataTypes()\"\n            id=\"field\"\n            v-model=\"values[getModel()]\"\n            :list=\"getDataList()\"\n            :type=\"getType()\"\n            @keyup=\"handleKeyPress\"\n          />\n\n          <datalist v-if=\"showPaths()\" id=\"pathList\" :type=\"getType()\">\n            <option v-for=\"key in getPathOptions()\" :key=\"key\" :value=\"key\">\n              {{ getName(key) }}\n            </option>\n          </datalist>\n          <datalist v-if=\"showShapes()\" id=\"shapeList\" :type=\"getType()\">\n            <option\n              v-for=\"key in getShapeOptions()\"\n              :key=\"getOptionID(key)\"\n              :value=\"getOptionID(key)\"\n            ></option>\n          </datalist>\n\n          <select\n            v-if=\"showDataTypes()\"\n            id=\"dataTypes\"\n            v-model=\"values[getModel()]\"\n            :type=\"getType()\"\n            @keyup=\"handleKeyPress\"\n          >\n            <option v-for=\"key in getDataTypes()\" :key=\"key\" :value=\"key\">\n              {{ getName(key) }}\n            </option>\n          </select>\n        </sui-form-field>\n      </sui-form>\n\n      <sui-segment v-if=\"error\" color=\"red\">\n        Some constraints aren't supported yet by the internal model.\n      </sui-segment>\n    </sui-modal-content>\n    <sui-modal-actions>\n      <sui-button tab-index=\"0\" @click=\"toggleModal\">Cancel</sui-button>\n      <sui-button\n        tab-index=\"0\"\n        positive\n        :disabled=\"\n          $props.modalProperties.selected === '' || values.input === ''\n        \"\n        @click=\"exit\"\n      >\n        {{ $props.modalProperties.editing ? \"Confirm\" : \"Add\" }}\n      </sui-button>\n    </sui-modal-actions>\n  </sui-modal>\n</template>\n\n<script>\nimport ValueType from \"../../util/enums/ValueType\";\nimport {\n  getConstraintCategory,\n  getConstraintValueType,\n  tableContents\n} from \"../../util/shacl/shaclConstraints\";\nimport {\n  extractUrl,\n  isUrl,\n  prefixToUri,\n  uriToPrefix,\n  urlToName\n} from \"../../util/urlParser\";\nimport { TERM } from \"../../translation/terminology\";\nimport { ENTER, SCHEMA_URI } from \"../../util/constants\";\nimport { XML_DATATYPES } from \"../../util\";\nimport PredicateTable from \"../FormElements/PredicateTable.vue\";\n\nexport default {\n  name: \"PredicateModal\",\n  components: { PredicateTable },\n  props: {\n    modalProperties: {\n      required: true,\n      type: Object\n    }\n  },\n  /**\n   * Category {string} the category of the selected predicate.\n   * Predicate {string} the selected predicate.\n   * Input {string} the current input value.\n   * InputBool {boolean} the current input value as a boolean, if applicable.\n   * Object {string}\n   * ConstraintType {string} the constraint type of the selected predicate.\n   * Search {string} the currently entered search/filter value.\n   * Error {boolean} indicates if the current input is invalid.\n   * @returns {{values: {predicate: string, input: string, constraintType: string, inputBool: boolean, search: string, category: string, object: string}, error: boolean}}\n   */\n  data() {\n    return {\n      values: {\n        category: \"\",\n        predicate: \"\",\n        input: \"\",\n        inputBool: false,\n        object: \"\",\n        constraintType: \"\",\n        search: \"\"\n      },\n      error: false\n    };\n  },\n  mounted() {\n    /*\n    The reason this watch is implemented is that this modal cannot work with `v-model=\"$props.something`.\n    A component should not edit his properties directly, since a re-render in the parent component causes them\n    to update (and override) their values. That's why this component keeps a copy of his properties, which he actually\n    can modify directly. With every update of his properties (in `mConstraint.mModal`), he copies these values\n    to his own state.\n     */\n    const self = this;\n    this.$store.watch(\n      () => self.$store.state.mShape.mConstraint.mModal.selected,\n      () => {\n        self.updateValues();\n        const id = self.showPaths()\n          ? \"pathList\"\n          : self.showShapes()\n          ? \"shapeList\"\n          : self.showDataTypes()\n          ? \"dataTypes\"\n          : \"field\";\n        const field = document.getElementById(id);\n        if (field) field.focus();\n      }\n    );\n\n    /* Focus the input field when the modal is called. */\n    this.$store.watch(\n      () => self.$store.state.mShape.mConstraint.mModal.show,\n      () => {\n        if (self.$store.state.mShape.mConstraint.mModal.show) {\n          const field = document.getElementById(\"search\");\n          if (field) field.focus();\n        }\n      }\n    );\n  },\n  methods: {\n    /**\n     * Get the values passed on by the parent.\n     * This method is called when `this.$props.modalProperties` is updated.\n     */\n    updateValues() {\n      const { selected, input } = this.$props.modalProperties;\n      const s = selected && selected !== \"\";\n      this.values = {\n        ...this.values,\n        category: s ? getConstraintCategory(selected) : \"\",\n        predicate: selected,\n        input,\n        inputBool: input === \"true\",\n        inputWithoutUrl: uriToPrefix(\n          this.$store.state.mConfig.namespaces,\n          input\n        ),\n        constraintType: s ? getConstraintValueType(selected) : \"\"\n      };\n    },\n\n    /**\n     * Toggle the visibility of the modal and reset its values.\n     */\n    toggleModal() {\n      this.$store.commit(\"togglePredicateModal\", {});\n      this.reset();\n    },\n\n    /**\n     * Returns the contents of the table.\n     * This method exists since `tableContents()` cannot be called directly from the HTML above.\n     * @returns {[]} list of constraint objects meant for visualization.\n     */\n    table() {\n      return tableContents(this.$store.state.mConfig.namespaces);\n    },\n\n    /**\n     * Execute the changes.\n     * Close and reset the modal.\n     */\n    exit() {\n      const {\n        predicate,\n        category,\n        input,\n        inputBool,\n        inputWithoutUrl\n      } = this.values;\n      let finalInput = input;\n      const valueType = ValueType(predicate);\n      this.error = valueType === undefined;\n\n      /* Add the `schema` url to the path input if necessary. */\n      if (category.includes(\"Property Pair\")) {\n        if (!isUrl(input)) {\n          finalInput = `${SCHEMA_URI}${input}`;\n        }\n      }\n\n      if (this.showCheckbox()) {\n        // Set the input to the value of the checkbox, as a string.\n        finalInput = inputBool.toString();\n      } else if (this.showString() || this.showPaths() || this.showOther()) {\n        finalInput = prefixToUri(\n          this.$store.getters.namespaces,\n          inputWithoutUrl\n        );\n        // Check if the input is an URL or has a prefix.\n        if (!isUrl(finalInput)) {\n          // If not, add the original URL.\n          finalInput = `${extractUrl(input)}${urlToName(inputWithoutUrl)}`;\n        }\n      }\n      if (this.values.constraintType.includes(\"integer\") && input === \"\")\n        finalInput = \"0\";\n\n      if (!this.error) {\n        const { onExit } = this.$props.modalProperties;\n        const args = {\n          predicate,\n          valueType,\n          shapeID: this.$props.modalProperties.shapeID,\n          input: finalInput,\n          inputType: this.$store.getters.objects(predicate)[0]\n        };\n        this.$store.dispatch(onExit, args);\n        /* Save the operation to undo. */\n        this.$store.commit(\"saveOperation\", {\n          state: this.$store.state,\n          action: { type: onExit, args }\n        });\n        this.reset();\n      }\n    },\n\n    /**\n     * Reset the data from the modal and deselect the selected row.\n     */\n    reset() {\n      this.values = {\n        category: \"\",\n        predicate: \"\",\n        input: \"\",\n        object: \"\",\n        constraintType: \"\",\n        search: \"\"\n      };\n      this.error = false;\n      this.$store.commit(\"selectRow\", { key: \"\" });\n    },\n\n    /* INPUT FIELD HELPERS ========================================================================================== */\n\n    /**\n     * Get the wanted input model.\n     * This determines which input field will be shown.\n     * @returns {string} \"inputBool\" || \"inputWithoutUrl\" || \"input\n     */\n    getModel() {\n      return this.showCheckbox()\n        ? \"inputBool\"\n        : this.showString() || this.showPaths() || this.showOther()\n        ? \"inputWithoutUrl\"\n        : \"input\";\n    },\n\n    /**\n     * Get the wanted input type.\n     * This determines the type of the input field.\n     * @returns {string} \"checkbox\" || \"number\" || \"text\"\n     */\n    getType() {\n      return this.showCheckbox()\n        ? \"checkbox\"\n        : this.showInteger()\n        ? \"number\"\n        : \"text\";\n    },\n\n    /**\n     * Get the wanted data list that should be used for the input field.\n     * @returns {string} \"pathList\" || \"shapeList\" || \"\"\n     */\n    getDataList() {\n      return this.showPaths()\n        ? \"pathList\"\n        : this.showShapes()\n        ? \"shapeList\"\n        : \"\";\n    },\n\n    /**\n     * Confirm the modal when the user presses the enter key.\n     * @param {any} e key press event\n     */\n    handleKeyPress(e) {\n      if (e.keyCode === ENTER) this.exit();\n    },\n\n    /* SHOW VALUE INPUT FIELD ======================================================================================= */\n\n    showCheckbox() {\n      return this.values.constraintType.includes(\"boolean\");\n    },\n    showInteger() {\n      return this.values.constraintType.includes(\"integer\");\n    },\n    showString() {\n      return this.values.constraintType.includes(\"string\");\n    },\n    showPaths() {\n      return this.values.category.includes(\"Property Pair\");\n    },\n    showDataTypes() {\n      return urlToName(this.values.predicate).includes(\"datatype\");\n    },\n    showShapes() {\n      const possibilities = [\"Property\", \"PropertyShape\", \"NodeShape\", \"Shape\"];\n      return (\n        !this.showPaths() &&\n        (possibilities.includes(urlToName(this.values.constraintType)) ||\n          this.values.predicate === \"property\" ||\n          this.values.category.includes(\"Logical\"))\n      );\n    },\n    showOther() {\n      return !(\n        this.showCheckbox() ||\n        this.showInteger() ||\n        this.showString() ||\n        this.showShapes() ||\n        this.showPaths() ||\n        this.showDataTypes()\n      );\n    },\n\n    /* POPULATING =================================================================================================== */\n\n    /**\n     * Get the possible options for the datalist object.\n     * @returns {[]} a (possibly empty) list of shape objects.\n     */\n    getShapeOptions() {\n      const ct = this.values.constraintType.toLocaleLowerCase();\n      if (ct.includes(\"property\") || this.values.category.includes(\"Logical\"))\n        return this.$store.getters.propertyShapes;\n      if (ct.includes(\"node\")) return this.$store.getters.nodeShapes;\n      if (ct.includes(\"shape\")) return this.$store.getters.shapes;\n      return [];\n    },\n\n    /**\n     * Get the ID of the given option.\n     * This method exists since calling `shape[\"@id\"]` directly in the HTML causes errors.\n     * @param {shape} shape a shape object.\n     * @returns {string} the ID Of the given shape object.\n     */\n    getOptionID(shape) {\n      return shape[\"@id\"];\n    },\n\n    /**\n     * Get the different options for choosing an existing path.\n     * The path of the current shape is not an option.\n     * @returns {[string]} list of possible paths.\n     */\n    getPathOptions() {\n      const { propertyShapes } = this.$store.getters;\n      const pShape = propertyShapes[this.$props.modalProperties.shapeID];\n\n      // Only property shapes have a path.\n      let thisPath;\n      if (pShape) thisPath = pShape[TERM.path];\n\n      /* Populate the list of paths. */\n      const paths = [];\n      for (const ps in propertyShapes) {\n        const path = propertyShapes[ps][TERM.path];\n        if (\n          path && // Check if the shape has a path.\n          (!thisPath || (thisPath && thisPath[0][\"@id\"] !== path[0][\"@id\"])) // Do not include the shape itself.\n        ) {\n          paths.push(path[0][\"@id\"]);\n        }\n      }\n      return paths;\n    },\n\n    /**\n     * Get the name of the path from the given URI.\n     * Used in the HTML since `urlToName` cannot be used directly.\n     * @param {string} uri the URI we want to extract the name from.\n     * @returns {string} the URI with the namespace replaced by the prefix.\n     */\n    getName(uri) {\n      return uriToPrefix(this.$store.state.mConfig.namespaces, uri);\n    },\n\n    /**\n     * Get the possible XML datatypes.\n     * Used in the HTML since `XML_DATATYPES` cannot be used directly.\n     * @returns {[string]} a list of possible datatype URIs.\n     */\n    getDataTypes() {\n      return Object.values(XML_DATATYPES);\n    }\n  }\n};\n</script>\n\n<style scoped></style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PredicateModal.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PredicateModal.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PredicateModal.vue?vue&type=template&id=07ba6cf0&scoped=true&\"\nimport script from \"./PredicateModal.vue?vue&type=script&lang=js&\"\nexport * from \"./PredicateModal.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"07ba6cf0\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('sui-modal',{model:{value:(_vm.$store.state.showExportModal),callback:function ($$v) {_vm.$set(_vm.$store.state, \"showExportModal\", $$v)},expression:\"$store.state.showExportModal\"}},[_c('sui-modal-header',[_vm._v(\"\\n      Export Shapes as \"+_vm._s(_vm.$store.state.exportType)+\"\\n    \")]),_c('sui-modal-content',[_c('sui-form',{on:{\"submit\":function($event){$event.preventDefault();return _vm.confirm($event)}}},[_c('sui-form-field',{attrs:{\"inline\":\"\"}},[_c('label',[_vm._v(\"Filename\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.filename),expression:\"filename\"}],attrs:{\"id\":\"filename\"},domProps:{\"value\":(_vm.filename)},on:{\"keyup\":_vm.handleKeyPress,\"input\":function($event){if($event.target.composing){ return; }_vm.filename=$event.target.value}}}),_vm._v(\"\\n          .\\n          \"),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.extension),expression:\"extension\"}],staticClass:\"field ui fluid dropdown\",on:{\"keyup\":_vm.handleKeyPress,\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.extension=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',[_vm._v(\"json\")]),_c('option',[_vm._v(\"nt\")]),_c('option',{attrs:{\"disabled\":\"\"}},[_vm._v(\"ttl\")])])])],1),(_vm.error)?_c('sui-segment',{attrs:{\"color\":\"red\"}},[_vm._v(\"\\n        Please enter a valid filename.\\n      \")]):_vm._e()],1),_c('sui-modal-actions',[_c('sui-button',{attrs:{\"tab-index\":\"0\"},on:{\"click\":_vm.cancel}},[_vm._v(\"Cancel\")]),_c('sui-button',{attrs:{\"tab-index\":\"0\",\"positive\":\"\"},nativeOn:{\"click\":function($event){return _vm.confirm($event)}}},[_vm._v(\"\\n        Export\\n      \")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <sui-modal v-model=\"$store.state.showExportModal\">\n      <sui-modal-header>\n        Export Shapes as {{ $store.state.exportType }}\n      </sui-modal-header>\n      <sui-modal-content>\n        <sui-form @submit.prevent=\"confirm\">\n          <sui-form-field inline>\n            <label>Filename</label>\n            <input id=\"filename\" v-model=\"filename\" @keyup=\"handleKeyPress\" />\n            .\n            <select\n              v-model=\"extension\"\n              class=\"field ui fluid dropdown\"\n              @keyup=\"handleKeyPress\"\n            >\n              <option>json</option>\n              <option>nt</option>\n              <option disabled>ttl</option>\n            </select>\n          </sui-form-field>\n        </sui-form>\n\n        <sui-segment v-if=\"error\" color=\"red\">\n          Please enter a valid filename.\n        </sui-segment>\n      </sui-modal-content>\n      <sui-modal-actions>\n        <sui-button tab-index=\"0\" @click=\"cancel\">Cancel</sui-button>\n        <sui-button tab-index=\"0\" positive @click.native=\"confirm\">\n          Export\n        </sui-button>\n      </sui-modal-actions>\n    </sui-modal>\n  </div>\n</template>\n\n<script>\nimport { ENTER } from \"../../util/constants\";\n\nexport default {\n  name: \"ExportModal\",\n  data() {\n    return {\n      filename: \"\",\n      extension: \"json\",\n      error: false\n    };\n  },\n  mounted() {\n    /* Focus the input field when the modal is called. */\n    const self = this;\n    this.$store.watch(\n      () => self.$store.state.showExportModal,\n      () => {\n        if (self.$store.state.showExportModal)\n          document.getElementById(\"filename\").focus();\n      }\n    );\n  },\n  methods: {\n    /**\n     * Confirm on enter press.\n     * @param {any} e key press event\n     */\n    handleKeyPress(e) {\n      if (e.keyCode === ENTER) this.confirm();\n    },\n\n    /**\n     * Check if the entered filename is valid.\n     * If so, export the file and close the modal.\n     */\n    confirm() {\n      const output = `${this.filename}.${this.extension}`;\n      if (this.checkFilename(output)) {\n        this.$store.dispatch(\"exportFileWithName\", {\n          filename: output,\n          extension: this.extension\n        });\n        this.closeExportModal();\n      }\n    },\n\n    /**\n     * Cancel and close the modal without saving any changes.\n     */\n    cancel() {\n      this.closeExportModal();\n    },\n\n    /**\n     * Clear the field and close the modal.\n     */\n    closeExportModal() {\n      this.$store.commit(\"toggleExportModal\", \"\");\n      this.filename = \"\";\n      this.extension = \"json\";\n    },\n\n    /**\n     * Check if the filename is valid.\n     * Toggle the error message if needed.\n     * @param {string} filename the filename we want to check.\n     * @returns {boolean|*} boolean, indicates if the filename is valid.\n     */\n    checkFilename(filename) {\n      const bool = filename.match(/^[\\w,\\s-]+\\.[A-Za-z0-9]+/);\n      this.error = !bool;\n      return bool;\n    }\n  }\n};\n</script>\n\n<style scoped></style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ExportModal.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ExportModal.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ExportModal.vue?vue&type=template&id=4c6eff76&scoped=true&\"\nimport script from \"./ExportModal.vue?vue&type=script&lang=js&\"\nexport * from \"./ExportModal.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4c6eff76\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('sui-modal',{model:{value:(_vm.$store.state.pathModal.show),callback:function ($$v) {_vm.$set(_vm.$store.state.pathModal, \"show\", $$v)},expression:\"$store.state.pathModal.show\"}},[_c('sui-modal-header',[_vm._v(\"\\n      \"+_vm._s(_vm.$props.editing ? \"Edit\" : \"New\")+\" Property Shape\\n    \")]),_c('sui-modal-content',[_c('sui-form',{on:{\"submit\":function($event){$event.preventDefault();return _vm.error($event)}}},[_c('sui-form-field',[_c('label',{attrs:{\"for\":\"path\"}},[_vm._v(\"Path\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.path),expression:\"path\"}],attrs:{\"id\":\"path\"},domProps:{\"value\":(_vm.path)},on:{\"keyup\":_vm.handleKeyPress,\"input\":function($event){if($event.target.composing){ return; }_vm.path=$event.target.value}}}),(_vm.path !== '' && _vm.error())?_c('sui-label',{attrs:{\"basic\":\"\",\"pointing\":\"\",\"color\":\"red\"}},[_vm._v(\"\\n            Please enter a valid IRI\\n          \")]):_vm._e()],1)],1)],1),_c('sui-modal-actions',[_c('sui-button',{on:{\"click\":_vm.cancel}},[_vm._v(\"Cancel\")]),_c('sui-button',{attrs:{\"positive\":\"\",\"disabled\":_vm.path === '' || _vm.error()},on:{\"click\":_vm.confirm}},[_vm._v(\"\\n        Confirm\\n      \")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <sui-modal v-model=\"$store.state.pathModal.show\">\n      <sui-modal-header>\n        {{ $props.editing ? \"Edit\" : \"New\" }} Property Shape\n      </sui-modal-header>\n      <sui-modal-content>\n        <sui-form @submit.prevent=\"error\">\n          <sui-form-field>\n            <label for=\"path\">Path</label>\n            <input id=\"path\" v-model=\"path\" @keyup=\"handleKeyPress\" />\n            <sui-label v-if=\"path !== '' && error()\" basic pointing color=\"red\">\n              Please enter a valid IRI\n            </sui-label>\n          </sui-form-field>\n        </sui-form>\n      </sui-modal-content>\n      <sui-modal-actions>\n        <sui-button @click=\"cancel\">Cancel</sui-button>\n        <sui-button\n          positive\n          :disabled=\"path === '' || error()\"\n          @click=\"confirm\"\n        >\n          Confirm\n        </sui-button>\n      </sui-modal-actions>\n    </sui-modal>\n  </div>\n</template>\n\n<script>\nimport { ENTER, IRI_REGEX } from \"../../util/constants\";\nimport { TERM } from \"../../translation/terminology\";\nimport ValueType from \"../../util/enums/ValueType\";\nimport { prefixToUri } from \"../../util/urlParser\";\n\nexport default {\n  name: \"PathModal\",\n  props: {\n    editing: {\n      type: Boolean,\n      required: true\n    },\n    shapeID: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      path: \"\"\n    };\n  },\n  mounted() {\n    /* Update the path value if the modal is called to edit. */\n    const self = this;\n    this.$store.watch(\n      () => self.$store.state.pathModal.editing,\n      () => {\n        if (self.$store.state.pathModal.editing) {\n          const shape = self.$store.getters.shapeWithID(self.$props.shapeID);\n          self.path = shape[TERM.path][0][\"@id\"];\n        }\n      }\n    );\n\n    /* Focus the input field when the modal is called. */\n    this.$store.watch(\n      () => self.$store.state.pathModal.show,\n      () => {\n        if (self.$store.state.pathModal.show)\n          document.getElementById(\"path\").focus();\n      }\n    );\n  },\n  methods: {\n    /**\n     * Confirm on enter press.\n     * @param {any} e key press event\n     */\n    handleKeyPress(e) {\n      if (e.keyCode === ENTER) this.confirm();\n    },\n\n    /**\n     * Cancel the modal and clear the entered value.\n     */\n    cancel() {\n      this.$store.commit(\"togglePathModal\", {});\n      this.path = \"\";\n    },\n\n    /**\n     * Confirm the modal if the entered value is valid.\n     */\n    confirm() {\n      /* Check if the entered value is valid. */\n      if (!this.error()) {\n        let operation;\n        let args;\n\n        if (this.$props.editing) {\n          /* Edit the path if the user is editing a shape. */\n          const { shapeID } = this.$props;\n          const p = TERM.path;\n          operation = \"stopConstraintEdit\";\n          args = {\n            shapeID,\n            predicate: p,\n            valueType: ValueType(p),\n            input: prefixToUri(this.$store.state.mConfig.namespaces, this.path),\n            inputType: this.$store.getters.objects(p)[0]\n          };\n        } else {\n          /* Create a new property shape. */\n          operation = \"addPropertyShape\";\n          args = { path: this.path };\n        }\n\n        /* Execute the operation with the needed arguments. */\n        this.$store.dispatch(operation, args);\n\n        /* Close and clear the modal. */\n        this.$store.commit(\"togglePathModal\", {});\n        this.path = \"\";\n\n        /* Save the state to undo later. */\n        this.$store.commit(\"saveOperation\", {\n          state: this.$store.state,\n          action: { type: operation, args }\n        });\n      }\n    },\n\n    /**\n     * Check if the entered values passes the regex test.\n     * @returns {boolean} value that indicates if the entered value is not valid.\n     */\n    error() {\n      return !IRI_REGEX.test(this.path);\n    }\n  }\n};\n</script>\n\n<style scoped></style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PathModal.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PathModal.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PathModal.vue?vue&type=template&id=78ccb884&scoped=true&\"\nimport script from \"./PathModal.vue?vue&type=script&lang=js&\"\nexport * from \"./PathModal.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"78ccb884\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('sui-modal',{on:{\"submit\":function($event){$event.preventDefault();return _vm.cancel($event)}},model:{value:(_vm.$store.state.mShape.shapeModal.show),callback:function ($$v) {_vm.$set(_vm.$store.state.mShape.shapeModal, \"show\", $$v)},expression:\"$store.state.mShape.shapeModal.show\"}},[_c('sui-modal-header',[_vm._v(\"\\n      Edit Shape\\n    \")]),_c('sui-modal-content',[_c('sui-form',[_c('sui-form-field',[_c('label',{attrs:{\"for\":\"id\"}},[_vm._v(\"IRI\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.values.id),expression:\"values.id\"}],attrs:{\"id\":\"id\"},domProps:{\"value\":(_vm.values.id)},on:{\"keyup\":_vm.handleKeyPress,\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.values, \"id\", $event.target.value)}}}),(_vm.values.id !== '' && _vm.error())?_c('sui-label',{attrs:{\"basic\":\"\",\"pointing\":\"\",\"color\":\"red\"}},[_vm._v(\"\\n            Please enter a valid IRI\\n          \")]):_vm._e(),(_vm.values.id !== '' && !_vm.unique())?_c('sui-label',{attrs:{\"basic\":\"\",\"pointing\":\"\",\"color\":\"red\"}},[_vm._v(\"\\n            Please enter a unique IRI\\n          \")]):_vm._e()],1),_c('sui-form-fields',{staticClass:\"two\"},[_c('sui-form-field',{staticClass:\"twelve wide\"},[_c('label',{attrs:{\"for\":\"label\"}},[_vm._v(\"\\n              \"+_vm._s(this.$props.modalProperties.nodeShape ? \"Label\" : \"Name\")+\"\\n            \")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.values.label),expression:\"values.label\"}],attrs:{\"id\":\"label\"},domProps:{\"value\":(_vm.values.label)},on:{\"keyup\":_vm.handleKeyPress,\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.values, \"label\", $event.target.value)}}})]),_c('sui-form-field',{staticClass:\"four wide\"},[_c('label',{attrs:{\"for\":\"labelLang\"}},[_vm._v(\"Language\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.values.labelLang),expression:\"values.labelLang\"}],staticClass:\"ui fluid dropdown\",attrs:{\"id\":\"labelLang\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(_vm.values, \"labelLang\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((_vm.getLanguageTags()),function(language){return _c('option',{key:language,domProps:{\"value\":language}},[_vm._v(\"\\n                \"+_vm._s(_vm.getLanguages()[language].name)+\"\\n              \")])}),0)])],1),_c('sui-form-fields',{staticClass:\"two\"},[_c('sui-form-field',{staticClass:\"twelve wide\"},[_c('label',{attrs:{\"for\":\"description\"}},[_vm._v(\"Description\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.values.description),expression:\"values.description\"}],attrs:{\"id\":\"description\"},domProps:{\"value\":(_vm.values.description)},on:{\"keyup\":_vm.handleKeyPress,\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.values, \"description\", $event.target.value)}}})]),_c('sui-form-field',{staticClass:\"four wide\"},[_c('label',{attrs:{\"for\":\"descrLang\"}},[_vm._v(\"Language\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.values.descrLang),expression:\"values.descrLang\"}],staticClass:\"ui fluid dropdown\",attrs:{\"id\":\"descrLang\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(_vm.values, \"descrLang\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((_vm.getLanguageTags()),function(language){return _c('option',{key:language,domProps:{\"value\":language}},[_vm._v(\"\\n                \"+_vm._s(_vm.getLanguages()[language].name)+\"\\n              \")])}),0)])],1)],1)],1),_c('sui-modal-actions',[_c('sui-button',{attrs:{\"tab-index\":\"0\"},on:{\"click\":_vm.cancel}},[_vm._v(\"Cancel\")]),_c('sui-button',{attrs:{\"tab-index\":\"0\",\"positive\":\"\",\"disabled\":_vm.error()},on:{\"click\":_vm.confirm}},[_vm._v(\"\\n        Confirm\\n      \")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * @author Phil Teare\n * using wikipedia data\n */\nconst isoLangs = {\n  ab: {\n    name: \"Abkhaz\",\n    nativeName: \"аҧсуа\"\n  },\n  aa: {\n    name: \"Afar\",\n    nativeName: \"Afaraf\"\n  },\n  af: {\n    name: \"Afrikaans\",\n    nativeName: \"Afrikaans\"\n  },\n  ak: {\n    name: \"Akan\",\n    nativeName: \"Akan\"\n  },\n  sq: {\n    name: \"Albanian\",\n    nativeName: \"Shqip\"\n  },\n  am: {\n    name: \"Amharic\",\n    nativeName: \"አማርኛ\"\n  },\n  ar: {\n    name: \"Arabic\",\n    nativeName: \"العربية\"\n  },\n  an: {\n    name: \"Aragonese\",\n    nativeName: \"Aragonés\"\n  },\n  hy: {\n    name: \"Armenian\",\n    nativeName: \"Հայերեն\"\n  },\n  as: {\n    name: \"Assamese\",\n    nativeName: \"অসমীয়া\"\n  },\n  av: {\n    name: \"Avaric\",\n    nativeName: \"авар мацӀ, магӀарул мацӀ\"\n  },\n  ae: {\n    name: \"Avestan\",\n    nativeName: \"avesta\"\n  },\n  ay: {\n    name: \"Aymara\",\n    nativeName: \"aymar aru\"\n  },\n  az: {\n    name: \"Azerbaijani\",\n    nativeName: \"azərbaycan dili\"\n  },\n  bm: {\n    name: \"Bambara\",\n    nativeName: \"bamanankan\"\n  },\n  ba: {\n    name: \"Bashkir\",\n    nativeName: \"башҡорт теле\"\n  },\n  eu: {\n    name: \"Basque\",\n    nativeName: \"euskara, euskera\"\n  },\n  be: {\n    name: \"Belarusian\",\n    nativeName: \"Беларуская\"\n  },\n  bn: {\n    name: \"Bengali\",\n    nativeName: \"বাংলা\"\n  },\n  bh: {\n    name: \"Bihari\",\n    nativeName: \"भोजपुरी\"\n  },\n  bi: {\n    name: \"Bislama\",\n    nativeName: \"Bislama\"\n  },\n  bs: {\n    name: \"Bosnian\",\n    nativeName: \"bosanski jezik\"\n  },\n  br: {\n    name: \"Breton\",\n    nativeName: \"brezhoneg\"\n  },\n  bg: {\n    name: \"Bulgarian\",\n    nativeName: \"български език\"\n  },\n  my: {\n    name: \"Burmese\",\n    nativeName: \"ဗမာစာ\"\n  },\n  ca: {\n    name: \"Catalan; Valencian\",\n    nativeName: \"Català\"\n  },\n  ch: {\n    name: \"Chamorro\",\n    nativeName: \"Chamoru\"\n  },\n  ce: {\n    name: \"Chechen\",\n    nativeName: \"нохчийн мотт\"\n  },\n  ny: {\n    name: \"Chichewa; Chewa; Nyanja\",\n    nativeName: \"chiCheŵa, chinyanja\"\n  },\n  zh: {\n    name: \"Chinese\",\n    nativeName: \"中文 (Zhōngwén), 汉语, 漢語\"\n  },\n  cv: {\n    name: \"Chuvash\",\n    nativeName: \"чӑваш чӗлхи\"\n  },\n  kw: {\n    name: \"Cornish\",\n    nativeName: \"Kernewek\"\n  },\n  co: {\n    name: \"Corsican\",\n    nativeName: \"corsu, lingua corsa\"\n  },\n  cr: {\n    name: \"Cree\",\n    nativeName: \"ᓀᐦᐃᔭᐍᐏᐣ\"\n  },\n  hr: {\n    name: \"Croatian\",\n    nativeName: \"hrvatski\"\n  },\n  cs: {\n    name: \"Czech\",\n    nativeName: \"česky, čeština\"\n  },\n  da: {\n    name: \"Danish\",\n    nativeName: \"dansk\"\n  },\n  dv: {\n    name: \"Divehi; Dhivehi; Maldivian;\",\n    nativeName: \"ދިވެހި\"\n  },\n  nl: {\n    name: \"Dutch\",\n    nativeName: \"Nederlands, Vlaams\"\n  },\n  en: {\n    name: \"English\",\n    nativeName: \"English\"\n  },\n  eo: {\n    name: \"Esperanto\",\n    nativeName: \"Esperanto\"\n  },\n  et: {\n    name: \"Estonian\",\n    nativeName: \"eesti, eesti keel\"\n  },\n  ee: {\n    name: \"Ewe\",\n    nativeName: \"Eʋegbe\"\n  },\n  fo: {\n    name: \"Faroese\",\n    nativeName: \"føroyskt\"\n  },\n  fj: {\n    name: \"Fijian\",\n    nativeName: \"vosa Vakaviti\"\n  },\n  fi: {\n    name: \"Finnish\",\n    nativeName: \"suomi, suomen kieli\"\n  },\n  fr: {\n    name: \"French\",\n    nativeName: \"français, langue française\"\n  },\n  ff: {\n    name: \"Fula; Fulah; Pulaar; Pular\",\n    nativeName: \"Fulfulde, Pulaar, Pular\"\n  },\n  gl: {\n    name: \"Galician\",\n    nativeName: \"Galego\"\n  },\n  ka: {\n    name: \"Georgian\",\n    nativeName: \"ქართული\"\n  },\n  de: {\n    name: \"German\",\n    nativeName: \"Deutsch\"\n  },\n  el: {\n    name: \"Greek, Modern\",\n    nativeName: \"Ελληνικά\"\n  },\n  gn: {\n    name: \"Guaraní\",\n    nativeName: \"Avañeẽ\"\n  },\n  gu: {\n    name: \"Gujarati\",\n    nativeName: \"ગુજરાતી\"\n  },\n  ht: {\n    name: \"Haitian; Haitian Creole\",\n    nativeName: \"Kreyòl ayisyen\"\n  },\n  ha: {\n    name: \"Hausa\",\n    nativeName: \"Hausa, هَوُسَ\"\n  },\n  he: {\n    name: \"Hebrew (modern)\",\n    nativeName: \"עברית\"\n  },\n  hz: {\n    name: \"Herero\",\n    nativeName: \"Otjiherero\"\n  },\n  hi: {\n    name: \"Hindi\",\n    nativeName: \"हिन्दी, हिंदी\"\n  },\n  ho: {\n    name: \"Hiri Motu\",\n    nativeName: \"Hiri Motu\"\n  },\n  hu: {\n    name: \"Hungarian\",\n    nativeName: \"Magyar\"\n  },\n  ia: {\n    name: \"Interlingua\",\n    nativeName: \"Interlingua\"\n  },\n  id: {\n    name: \"Indonesian\",\n    nativeName: \"Bahasa Indonesia\"\n  },\n  ie: {\n    name: \"Interlingue\",\n    nativeName: \"Originally called Occidental; then Interlingue after WWII\"\n  },\n  ga: {\n    name: \"Irish\",\n    nativeName: \"Gaeilge\"\n  },\n  ig: {\n    name: \"Igbo\",\n    nativeName: \"Asụsụ Igbo\"\n  },\n  ik: {\n    name: \"Inupiaq\",\n    nativeName: \"Iñupiaq, Iñupiatun\"\n  },\n  io: {\n    name: \"Ido\",\n    nativeName: \"Ido\"\n  },\n  is: {\n    name: \"Icelandic\",\n    nativeName: \"Íslenska\"\n  },\n  it: {\n    name: \"Italian\",\n    nativeName: \"Italiano\"\n  },\n  iu: {\n    name: \"Inuktitut\",\n    nativeName: \"ᐃᓄᒃᑎᑐᑦ\"\n  },\n  ja: {\n    name: \"Japanese\",\n    nativeName: \"日本語 (にほんご／にっぽんご)\"\n  },\n  jv: {\n    name: \"Javanese\",\n    nativeName: \"basa Jawa\"\n  },\n  kl: {\n    name: \"Kalaallisut, Greenlandic\",\n    nativeName: \"kalaallisut, kalaallit oqaasii\"\n  },\n  kn: {\n    name: \"Kannada\",\n    nativeName: \"ಕನ್ನಡ\"\n  },\n  kr: {\n    name: \"Kanuri\",\n    nativeName: \"Kanuri\"\n  },\n  ks: {\n    name: \"Kashmiri\",\n    nativeName: \"कश्मीरी, كشميري‎\"\n  },\n  kk: {\n    name: \"Kazakh\",\n    nativeName: \"Қазақ тілі\"\n  },\n  km: {\n    name: \"Khmer\",\n    nativeName: \"ភាសាខ្មែរ\"\n  },\n  ki: {\n    name: \"Kikuyu, Gikuyu\",\n    nativeName: \"Gĩkũyũ\"\n  },\n  rw: {\n    name: \"Kinyarwanda\",\n    nativeName: \"Ikinyarwanda\"\n  },\n  ky: {\n    name: \"Kirghiz, Kyrgyz\",\n    nativeName: \"кыргыз тили\"\n  },\n  kv: {\n    name: \"Komi\",\n    nativeName: \"коми кыв\"\n  },\n  kg: {\n    name: \"Kongo\",\n    nativeName: \"KiKongo\"\n  },\n  ko: {\n    name: \"Korean\",\n    nativeName: \"한국어 (韓國語), 조선말 (朝鮮語)\"\n  },\n  ku: {\n    name: \"Kurdish\",\n    nativeName: \"Kurdî, كوردی‎\"\n  },\n  kj: {\n    name: \"Kwanyama, Kuanyama\",\n    nativeName: \"Kuanyama\"\n  },\n  la: {\n    name: \"Latin\",\n    nativeName: \"latine, lingua latina\"\n  },\n  lb: {\n    name: \"Luxembourgish, Letzeburgesch\",\n    nativeName: \"Lëtzebuergesch\"\n  },\n  lg: {\n    name: \"Luganda\",\n    nativeName: \"Luganda\"\n  },\n  li: {\n    name: \"Limburgish, Limburgan, Limburger\",\n    nativeName: \"Limburgs\"\n  },\n  ln: {\n    name: \"Lingala\",\n    nativeName: \"Lingála\"\n  },\n  lo: {\n    name: \"Lao\",\n    nativeName: \"ພາສາລາວ\"\n  },\n  lt: {\n    name: \"Lithuanian\",\n    nativeName: \"lietuvių kalba\"\n  },\n  lu: {\n    name: \"Luba-Katanga\",\n    nativeName: \"\"\n  },\n  lv: {\n    name: \"Latvian\",\n    nativeName: \"latviešu valoda\"\n  },\n  gv: {\n    name: \"Manx\",\n    nativeName: \"Gaelg, Gailck\"\n  },\n  mk: {\n    name: \"Macedonian\",\n    nativeName: \"македонски јазик\"\n  },\n  mg: {\n    name: \"Malagasy\",\n    nativeName: \"Malagasy fiteny\"\n  },\n  ms: {\n    name: \"Malay\",\n    nativeName: \"bahasa Melayu, بهاس ملايو‎\"\n  },\n  ml: {\n    name: \"Malayalam\",\n    nativeName: \"മലയാളം\"\n  },\n  mt: {\n    name: \"Maltese\",\n    nativeName: \"Malti\"\n  },\n  mi: {\n    name: \"Māori\",\n    nativeName: \"te reo Māori\"\n  },\n  mr: {\n    name: \"Marathi (Marāṭhī)\",\n    nativeName: \"मराठी\"\n  },\n  mh: {\n    name: \"Marshallese\",\n    nativeName: \"Kajin M̧ajeļ\"\n  },\n  mn: {\n    name: \"Mongolian\",\n    nativeName: \"монгол\"\n  },\n  na: {\n    name: \"Nauru\",\n    nativeName: \"Ekakairũ Naoero\"\n  },\n  nv: {\n    name: \"Navajo, Navaho\",\n    nativeName: \"Diné bizaad, Dinékʼehǰí\"\n  },\n  nb: {\n    name: \"Norwegian Bokmål\",\n    nativeName: \"Norsk bokmål\"\n  },\n  nd: {\n    name: \"North Ndebele\",\n    nativeName: \"isiNdebele\"\n  },\n  ne: {\n    name: \"Nepali\",\n    nativeName: \"नेपाली\"\n  },\n  ng: {\n    name: \"Ndonga\",\n    nativeName: \"Owambo\"\n  },\n  nn: {\n    name: \"Norwegian Nynorsk\",\n    nativeName: \"Norsk nynorsk\"\n  },\n  no: {\n    name: \"Norwegian\",\n    nativeName: \"Norsk\"\n  },\n  ii: {\n    name: \"Nuosu\",\n    nativeName: \"ꆈꌠ꒿ Nuosuhxop\"\n  },\n  nr: {\n    name: \"South Ndebele\",\n    nativeName: \"isiNdebele\"\n  },\n  oc: {\n    name: \"Occitan\",\n    nativeName: \"Occitan\"\n  },\n  oj: {\n    name: \"Ojibwe, Ojibwa\",\n    nativeName: \"ᐊᓂᔑᓈᐯᒧᐎᓐ\"\n  },\n  cu: {\n    name:\n      \"Old Church Slavonic, Church Slavic, Church Slavonic, Old Bulgarian, Old Slavonic\",\n    nativeName: \"ѩзыкъ словѣньскъ\"\n  },\n  om: {\n    name: \"Oromo\",\n    nativeName: \"Afaan Oromoo\"\n  },\n  or: {\n    name: \"Oriya\",\n    nativeName: \"ଓଡ଼ିଆ\"\n  },\n  os: {\n    name: \"Ossetian, Ossetic\",\n    nativeName: \"ирон æвзаг\"\n  },\n  pa: {\n    name: \"Panjabi, Punjabi\",\n    nativeName: \"ਪੰਜਾਬੀ, پنجابی‎\"\n  },\n  pi: {\n    name: \"Pāli\",\n    nativeName: \"पाऴि\"\n  },\n  fa: {\n    name: \"Persian\",\n    nativeName: \"فارسی\"\n  },\n  pl: {\n    name: \"Polish\",\n    nativeName: \"polski\"\n  },\n  ps: {\n    name: \"Pashto, Pushto\",\n    nativeName: \"پښتو\"\n  },\n  pt: {\n    name: \"Portuguese\",\n    nativeName: \"Português\"\n  },\n  qu: {\n    name: \"Quechua\",\n    nativeName: \"Runa Simi, Kichwa\"\n  },\n  rm: {\n    name: \"Romansh\",\n    nativeName: \"rumantsch grischun\"\n  },\n  rn: {\n    name: \"Kirundi\",\n    nativeName: \"kiRundi\"\n  },\n  ro: {\n    name: \"Romanian, Moldavian, Moldovan\",\n    nativeName: \"română\"\n  },\n  ru: {\n    name: \"Russian\",\n    nativeName: \"русский язык\"\n  },\n  sa: {\n    name: \"Sanskrit (Saṁskṛta)\",\n    nativeName: \"संस्कृतम्\"\n  },\n  sc: {\n    name: \"Sardinian\",\n    nativeName: \"sardu\"\n  },\n  sd: {\n    name: \"Sindhi\",\n    nativeName: \"सिन्धी, سنڌي، سندھی‎\"\n  },\n  se: {\n    name: \"Northern Sami\",\n    nativeName: \"Davvisámegiella\"\n  },\n  sm: {\n    name: \"Samoan\",\n    nativeName: \"gagana faa Samoa\"\n  },\n  sg: {\n    name: \"Sango\",\n    nativeName: \"yângâ tî sängö\"\n  },\n  sr: {\n    name: \"Serbian\",\n    nativeName: \"српски језик\"\n  },\n  gd: {\n    name: \"Scottish Gaelic; Gaelic\",\n    nativeName: \"Gàidhlig\"\n  },\n  sn: {\n    name: \"Shona\",\n    nativeName: \"chiShona\"\n  },\n  si: {\n    name: \"Sinhala, Sinhalese\",\n    nativeName: \"සිංහල\"\n  },\n  sk: {\n    name: \"Slovak\",\n    nativeName: \"slovenčina\"\n  },\n  sl: {\n    name: \"Slovene\",\n    nativeName: \"slovenščina\"\n  },\n  so: {\n    name: \"Somali\",\n    nativeName: \"Soomaaliga, af Soomaali\"\n  },\n  st: {\n    name: \"Southern Sotho\",\n    nativeName: \"Sesotho\"\n  },\n  es: {\n    name: \"Spanish; Castilian\",\n    nativeName: \"español, castellano\"\n  },\n  su: {\n    name: \"Sundanese\",\n    nativeName: \"Basa Sunda\"\n  },\n  sw: {\n    name: \"Swahili\",\n    nativeName: \"Kiswahili\"\n  },\n  ss: {\n    name: \"Swati\",\n    nativeName: \"SiSwati\"\n  },\n  sv: {\n    name: \"Swedish\",\n    nativeName: \"svenska\"\n  },\n  ta: {\n    name: \"Tamil\",\n    nativeName: \"தமிழ்\"\n  },\n  te: {\n    name: \"Telugu\",\n    nativeName: \"తెలుగు\"\n  },\n  tg: {\n    name: \"Tajik\",\n    nativeName: \"тоҷикӣ, toğikī, تاجیکی‎\"\n  },\n  th: {\n    name: \"Thai\",\n    nativeName: \"ไทย\"\n  },\n  ti: {\n    name: \"Tigrinya\",\n    nativeName: \"ትግርኛ\"\n  },\n  bo: {\n    name: \"Tibetan Standard, Tibetan, Central\",\n    nativeName: \"བོད་ཡིག\"\n  },\n  tk: {\n    name: \"Turkmen\",\n    nativeName: \"Türkmen, Түркмен\"\n  },\n  tl: {\n    name: \"Tagalog\",\n    nativeName: \"Wikang Tagalog, ᜏᜒᜃᜅ᜔ ᜆᜄᜎᜓᜄ᜔\"\n  },\n  tn: {\n    name: \"Tswana\",\n    nativeName: \"Setswana\"\n  },\n  to: {\n    name: \"Tonga (Tonga Islands)\",\n    nativeName: \"faka Tonga\"\n  },\n  tr: {\n    name: \"Turkish\",\n    nativeName: \"Türkçe\"\n  },\n  ts: {\n    name: \"Tsonga\",\n    nativeName: \"Xitsonga\"\n  },\n  tt: {\n    name: \"Tatar\",\n    nativeName: \"татарча, tatarça, تاتارچا‎\"\n  },\n  tw: {\n    name: \"Twi\",\n    nativeName: \"Twi\"\n  },\n  ty: {\n    name: \"Tahitian\",\n    nativeName: \"Reo Tahiti\"\n  },\n  ug: {\n    name: \"Uighur, Uyghur\",\n    nativeName: \"Uyƣurqə, ئۇيغۇرچە‎\"\n  },\n  uk: {\n    name: \"Ukrainian\",\n    nativeName: \"українська\"\n  },\n  ur: {\n    name: \"Urdu\",\n    nativeName: \"اردو\"\n  },\n  uz: {\n    name: \"Uzbek\",\n    nativeName: \"zbek, Ўзбек, أۇزبېك‎\"\n  },\n  ve: {\n    name: \"Venda\",\n    nativeName: \"Tshivenḓa\"\n  },\n  vi: {\n    name: \"Vietnamese\",\n    nativeName: \"Tiếng Việt\"\n  },\n  vo: {\n    name: \"Volapük\",\n    nativeName: \"Volapük\"\n  },\n  wa: {\n    name: \"Walloon\",\n    nativeName: \"Walon\"\n  },\n  cy: {\n    name: \"Welsh\",\n    nativeName: \"Cymraeg\"\n  },\n  wo: {\n    name: \"Wolof\",\n    nativeName: \"Wollof\"\n  },\n  fy: {\n    name: \"Western Frisian\",\n    nativeName: \"Frysk\"\n  },\n  xh: {\n    name: \"Xhosa\",\n    nativeName: \"isiXhosa\"\n  },\n  yi: {\n    name: \"Yiddish\",\n    nativeName: \"ייִדיש\"\n  },\n  yo: {\n    name: \"Yoruba\",\n    nativeName: \"Yorùbá\"\n  },\n  za: {\n    name: \"Zhuang, Chuang\",\n    nativeName: \"Saɯ cueŋƅ, Saw cuengh\"\n  }\n};\n\n/**\n * Get the isoLangs mapped from their name to their language tags.\n * @returns {object} map of languages to language tags.\n */\nexport function isoLangsByName() {\n  const output = {};\n  Object.keys(isoLangs).map(key => {\n    output[isoLangs[key].name] = key;\n  });\n  return output;\n}\n\nexport { isoLangs as default };\n","<template>\n  <div>\n    <sui-modal\n      v-model=\"$store.state.mShape.shapeModal.show\"\n      @submit.prevent=\"cancel\"\n    >\n      <sui-modal-header>\n        Edit Shape\n      </sui-modal-header>\n      <sui-modal-content>\n        <sui-form>\n          <sui-form-field>\n            <label for=\"id\">IRI</label>\n            <input id=\"id\" v-model=\"values.id\" @keyup=\"handleKeyPress\" />\n            <sui-label\n              v-if=\"values.id !== '' && error()\"\n              basic\n              pointing\n              color=\"red\"\n            >\n              Please enter a valid IRI\n            </sui-label>\n            <sui-label\n              v-if=\"values.id !== '' && !unique()\"\n              basic\n              pointing\n              color=\"red\"\n            >\n              Please enter a unique IRI\n            </sui-label>\n          </sui-form-field>\n          <sui-form-fields class=\"two\">\n            <sui-form-field class=\"twelve wide\">\n              <label for=\"label\">\n                <!-- Node shape has a label, property shape has a name. -->\n                {{ this.$props.modalProperties.nodeShape ? \"Label\" : \"Name\" }}\n              </label>\n              <input\n                id=\"label\"\n                v-model=\"values.label\"\n                @keyup=\"handleKeyPress\"\n              />\n            </sui-form-field>\n            <sui-form-field class=\"four wide\">\n              <label for=\"labelLang\">Language</label>\n              <select\n                id=\"labelLang\"\n                v-model=\"values.labelLang\"\n                class=\"ui fluid dropdown\"\n              >\n                <option\n                  v-for=\"language of getLanguageTags()\"\n                  :key=\"language\"\n                  :value=\"language\"\n                >\n                  {{ getLanguages()[language].name }}\n                </option>\n              </select>\n            </sui-form-field>\n          </sui-form-fields>\n\n          <sui-form-fields class=\"two\">\n            <sui-form-field class=\"twelve wide\">\n              <label for=\"description\">Description</label>\n              <input\n                id=\"description\"\n                v-model=\"values.description\"\n                @keyup=\"handleKeyPress\"\n            /></sui-form-field>\n            <sui-form-field class=\"four wide\">\n              <label for=\"descrLang\">Language</label>\n              <select\n                id=\"descrLang\"\n                v-model=\"values.descrLang\"\n                class=\"ui fluid dropdown\"\n              >\n                <option\n                  v-for=\"language of getLanguageTags()\"\n                  :key=\"language\"\n                  :value=\"language\"\n                >\n                  {{ getLanguages()[language].name }}\n                </option>\n              </select>\n            </sui-form-field>\n          </sui-form-fields>\n        </sui-form>\n      </sui-modal-content>\n      <sui-modal-actions>\n        <sui-button tab-index=\"0\" @click=\"cancel\">Cancel</sui-button>\n        <sui-button tab-index=\"0\" positive :disabled=\"error()\" @click=\"confirm\">\n          Confirm\n        </sui-button>\n      </sui-modal-actions>\n    </sui-modal>\n  </div>\n</template>\n\n<script>\nimport { XML_DATATYPES } from \"../../util\";\nimport { TERM } from \"../../translation/terminology\";\nimport { BLANK_REGEX, ENTER, IRI_REGEX, LABEL } from \"../../util/constants\";\nimport getValueType from \"../../util/enums/ValueType\";\nimport isoLangs, { isoLangsByName } from \"../../util/enums/isoLangs\";\n\nexport default {\n  name: \"EditShapeModal\",\n  props: {\n    modalProperties: {\n      required: true,\n      type: Object\n    }\n  },\n  /**\n   * ID {string} the IRI of the shape.\n   * Label {string} the label/name of the shape.\n   * LabelLang {string} the language tag of the label.\n   * Description {string} the description of the shape.\n   * DescLang {string} the language tag of the description.\n   * @returns {{values: {labelLang: string, descrLang: string, description: string, id: string, label: string}}}\n   */\n  data() {\n    return {\n      values: {\n        id: \"\",\n        label: \"\",\n        labelLang: \"en\",\n        description: \"\",\n        descrLang: \"en\"\n      }\n    };\n  },\n  mounted() {\n    /*\n    The reason this watch is implemented is that this modal cannot work with `v-model=\"$props.something`.\n    A component should not edit his properties directly, since a re-render in the parent component causes them\n    to update (and override) their values. That's why this component keeps a copy of his properties, which he actually\n    can modify directly. With every update of his properties (in `mConstraint.predicateModal`), he copies these values\n    to his own state.\n     */\n    const self = this;\n    this.$store.watch(\n      () => self.$store.state.mShape.shapeModal,\n      () => self.updateValues()\n    );\n\n    /* Focus the id input field when the modal is called. */\n    this.$store.watch(\n      () => self.$store.state.mShape.shapeModal.show,\n      () => {\n        if (self.$store.state.mShape.shapeModal.show)\n          document.getElementById(\"id\").focus();\n      }\n    );\n  },\n  methods: {\n    /**\n     * Get a list of language tags.\n     * @returns {[string]}\n     */\n    getLanguageTags() {\n      const sortedLangs = Object.keys(isoLangsByName()).sort();\n      return sortedLangs.map(lang => isoLangsByName()[lang]);\n    },\n    /**\n     * Get the language tags mapped to their language object.\n     * `isoLangs` cannot be called directly from HTML.\n     * @returns {object} map of language tags to language object.\n     */\n    getLanguages() {\n      return isoLangs;\n    },\n\n    /**\n     * Confirm when the user presses the enter key.\n     * @param {any} e key press event\n     */\n    handleKeyPress(e) {\n      if (e.keyCode === ENTER && !this.error()) this.confirm();\n    },\n\n    /**\n     * Confirm the modal.\n     * Update the shape ID, name/label and description accordingly.\n     */\n    confirm() {\n      const { id, label, labelLang, description, descrLang } = this.values;\n      const modProps = this.$props.modalProperties;\n\n      /* Close the modal. */\n      this.$store.commit(\"toggleEditShapeModal\", {});\n\n      /* Update the shape ID. */\n      const args = {\n        oldID: modProps.id,\n        newID: id\n      };\n      this.$store.dispatch(\"editShape\", args);\n\n      /* Update the shape label (in case of a node shape) or name (in case of a property shape). */\n      this.handleConstraint(\n        modProps.nodeShape ? LABEL : TERM.name,\n        label,\n        labelLang\n      );\n      /* Update the shape description. */\n      this.handleConstraint(TERM.description, description, descrLang);\n\n      /* Save the state to undo later. */\n      this.$store.commit(\"saveOperation\", {\n        state: this.$store.state,\n        action: { type: \"editShape\", args } // FIXME actually multiple actions executed\n      });\n    },\n\n    /**\n     * Handle the update of the given constraint.\n     * @param {string} constraintID the key of the constraint.\n     * @param {string} value the value of the constraint.\n     * @param {string} language the language tag for this value.\n     */\n    handleConstraint(constraintID, value, language) {\n      const shapeID = this.values.id;\n\n      /* Check if the user has filled in a value. */\n      if (value && value !== \"\") {\n        const shape = this.$store.getters.shapeWithID(shapeID);\n\n        /* Update or add the value accordingly. */\n        if (shape[constraintID]) {\n          /* Update the value of the existing constraint if the shape already has this predicate. */\n          const args = {\n            shapeID,\n            constraintID,\n            newValue: [{ \"@value\": value, \"@language\": language }]\n          };\n          this.$store.dispatch(\"updateConstraint\", args);\n        } else {\n          /* Add the predicate to the shape if needed. */\n          const args = {\n            shapeID,\n            predicate: constraintID,\n            valueType: getValueType(constraintID),\n            input: value,\n            object: XML_DATATYPES.string,\n            language\n          };\n          this.$store.dispatch(\"addPredicate\", args);\n        }\n      } else {\n        /* Delete the value if the user has not filled in anything. */\n        const args = {\n          shapeID,\n          constraintID\n        };\n        this.$store.dispatch(\"deleteConstraintFromShapeWithID\", args);\n      }\n    },\n\n    /**\n     * Cancel and close the modal.\n     */\n    cancel() {\n      this.$store.commit(\"toggleEditShapeModal\", {});\n    },\n\n    /**\n     * Update the data values using the properties.\n     * This method is called whenever `this.$props.modalProperties` changes.\n     */\n    updateValues() {\n      const {\n        id,\n        label,\n        labelLang,\n        description,\n        descrLang\n      } = this.$props.modalProperties;\n      this.values = { id, label, labelLang, description, descrLang };\n    },\n\n    /**\n     * Checks if the entered values are valid.\n     * @returns {boolean} value to indicate if the entered value is valid.\n     */\n    error() {\n      return !(\n        IRI_REGEX.test(this.values.id) || BLANK_REGEX.test(this.values.id)\n      );\n    },\n\n    /**\n     * Checks if the entered ID is unique.\n     * @returns {boolean} value to indicate if the entered id is unique.\n     */\n    unique() {\n      return (\n        this.values.id === this.$props.modalProperties.id || // The ID hasn't changed.\n        !Object.keys(this.$store.getters.shapes).includes(this.values.id) // The changed ID is unique.\n      );\n    }\n  }\n};\n</script>\n\n<style scoped></style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EditShapeModal.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EditShapeModal.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./EditShapeModal.vue?vue&type=template&id=0c0c28da&scoped=true&\"\nimport script from \"./EditShapeModal.vue?vue&type=script&lang=js&\"\nexport * from \"./EditShapeModal.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0c0c28da\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('sui-modal',{model:{value:(_vm.$store.state.mConfig.mModal.show),callback:function ($$v) {_vm.$set(_vm.$store.state.mConfig.mModal, \"show\", $$v)},expression:\"$store.state.mConfig.mModal.show\"}},[_c('sui-modal-header',[_vm._v(\"Namespaces\")]),_c('sui-modal-content',[_c('namespace-table',{attrs:{\"table-properties\":_vm.$store.state.mConfig.mModal}}),_c('br'),_c('sui-form',{on:{\"submit\":function($event){$event.preventDefault();return _vm.addNamespace($event)}}},[_c('sui-form-fields',[_c('sui-form-field',{staticClass:\"four wide field\",class:{ error: _vm.prefix !== '' && !_vm.validPrefix() }},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.prefix),expression:\"prefix\"}],attrs:{\"id\":\"prefixField\",\"placeholder\":\"Prefix\"},domProps:{\"value\":(_vm.prefix)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.prefix=$event.target.value}}})]),_c('sui-form-field',{staticClass:\"eleven wide field\",class:{ error: _vm.uri !== '' && !_vm.validURI() }},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.uri),expression:\"uri\"}],attrs:{\"id\":\"uriField\",\"placeholder\":\"URI\"},domProps:{\"value\":(_vm.uri)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.uri=$event.target.value}}})]),_c('sui-form-field',{staticClass:\"one wide field\"},[_c('sui-button',{attrs:{\"color\":\"green\",\"icon\":\"plus\",\"disabled\":!_vm.validPrefix() || !_vm.validURI()}})],1)],1)],1)],1),_c('sui-modal-actions',[_c('sui-button',{attrs:{\"id\":\"close\",\"tab-index\":\"0\"},on:{\"click\":_vm.closeModal}},[_vm._v(\"\\n      Close\\n    \")])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"namespaceTable\"}},[_c('div',{ref:\"form\",staticClass:\"ui transparent form\"},[_c('sui-form-field',{class:{ error: _vm.error() }},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.input),expression:\"input\"}],ref:\"inputField\",attrs:{\"focus\":_vm.$props.tableProperties.editRow !== ''},domProps:{\"value\":(_vm.input)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.input=$event.target.value},function (e) { return (_vm.input = e.target.value); }],\"blur\":_vm.stopEditing,\"keyup\":_vm.handleKeyUp}})])],1),_c('table',{staticClass:\"table\"},[_c('tr',[_c('td',[_c('sui-table',{attrs:{\"color\":\"green\",\"inverted\":\"\"}},[_c('sui-table-header',[_c('sui-table-row',[_c('sui-table-header-cell',{staticClass:\"one wide\"},[_c('span',{staticClass:\"unclickable\"},[_vm._v(\"Base URI\")])]),_c('sui-table-header-cell',{staticClass:\"four wide\"},[_c('span',{staticClass:\"unclickable\"},[_vm._v(\"Prefix\")])]),_c('sui-table-header-cell',{staticClass:\"twelve wide unclickable\"},[_c('span',{staticClass:\"unclickable\"},[_vm._v(\"URI\")])])],1)],1)],1)],1)]),_c('tr',[_c('td',[_c('div',{staticClass:\"table-body\",attrs:{\"id\":\"table-body\"}},[_c('sui-table',[_c('sui-table-body',_vm._l((_vm.$store.getters.namespaces),function(uri,prefix){return _c('sui-table-row',{key:prefix},[_c('sui-table-cell',{staticClass:\"one wide\"},[_c('sui-checkbox',{staticClass:\"clickable\",attrs:{\"id\":prefix},on:{\"mouseup\":function (e) { return _vm.updateBaseUri(e.target, prefix); }},model:{value:(_vm.checked[prefix]),callback:function ($$v) {_vm.$set(_vm.checked, prefix, $$v)},expression:\"checked[prefix]\"}})],1),_c('sui-table-cell',{staticClass:\"four wide\"},[_c('div',{attrs:{\"id\":prefix + 'prefix'}}),(!_vm.editingThis(prefix, 'prefix'))?_c('div',{on:{\"click\":function($event){return _vm.startEditing(prefix, 'prefix', prefix)}}},[_vm._v(\"\\n                    \"+_vm._s(prefix)+\"\\n                  \")]):_vm._e()]),_c('sui-table-cell',{staticClass:\"eleven wide\"},[_c('div',{attrs:{\"id\":prefix + 'uri'}}),(!_vm.editingThis(prefix, 'uri'))?_c('div',{on:{\"click\":function($event){return _vm.startEditing(prefix, 'uri', uri)}}},[_vm._v(\"\\n                    \"+_vm._s(uri)+\"\\n                  \")]):_vm._e()]),_c('sui-table-cell',{staticClass:\"one wide\"},[(!_vm.isBaseURI(prefix))?_c('sui-icon',{staticClass:\"clickable\",attrs:{\"name\":\"x icon\"},on:{\"click\":function($event){return _vm.deleteElement(prefix)}}}):_vm._e()],1)],1)}),1)],1)],1)])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"namespaceTable\">\n    <div ref=\"form\" class=\"ui transparent form\">\n      <sui-form-field :class=\"{ error: error() }\">\n        <input\n          ref=\"inputField\"\n          v-model=\"input\"\n          :focus=\"$props.tableProperties.editRow !== ''\"\n          @input=\"e => (input = e.target.value)\"\n          @blur=\"stopEditing\"\n          @keyup=\"handleKeyUp\"\n        />\n      </sui-form-field>\n    </div>\n\n    <table class=\"table\">\n      <tr>\n        <td>\n          <sui-table color=\"green\" inverted>\n            <sui-table-header>\n              <sui-table-row>\n                <sui-table-header-cell class=\"one wide\">\n                  <span class=\"unclickable\">Base URI</span>\n                </sui-table-header-cell>\n                <sui-table-header-cell class=\"four wide\">\n                  <span class=\"unclickable\">Prefix</span>\n                </sui-table-header-cell>\n                <sui-table-header-cell class=\"twelve wide unclickable\">\n                  <span class=\"unclickable\">URI</span>\n                </sui-table-header-cell>\n              </sui-table-row>\n            </sui-table-header>\n          </sui-table>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <div id=\"table-body\" class=\"table-body\">\n            <sui-table>\n              <sui-table-body>\n                <sui-table-row\n                  v-for=\"(uri, prefix) of $store.getters.namespaces\"\n                  :key=\"prefix\"\n                >\n                  <sui-table-cell class=\"one wide\">\n                    <sui-checkbox\n                      :id=\"prefix\"\n                      v-model=\"checked[prefix]\"\n                      class=\"clickable\"\n                      @mouseup=\"e => updateBaseUri(e.target, prefix)\"\n                    ></sui-checkbox>\n                  </sui-table-cell>\n\n                  <sui-table-cell class=\"four wide\">\n                    <div :id=\"prefix + 'prefix'\"></div>\n                    <div\n                      v-if=\"!editingThis(prefix, 'prefix')\"\n                      @click=\"startEditing(prefix, 'prefix', prefix)\"\n                    >\n                      {{ prefix }}\n                    </div>\n                  </sui-table-cell>\n\n                  <sui-table-cell class=\"eleven wide\">\n                    <div :id=\"prefix + 'uri'\"></div>\n                    <div\n                      v-if=\"!editingThis(prefix, 'uri')\"\n                      @click=\"startEditing(prefix, 'uri', uri)\"\n                    >\n                      {{ uri }}\n                    </div>\n                  </sui-table-cell>\n\n                  <sui-table-cell class=\"one wide\">\n                    <sui-icon\n                      v-if=\"!isBaseURI(prefix)\"\n                      class=\"clickable\"\n                      name=\"x icon\"\n                      @click=\"deleteElement(prefix)\"\n                    ></sui-icon>\n                  </sui-table-cell>\n                </sui-table-row>\n              </sui-table-body>\n            </sui-table>\n          </div>\n        </td>\n      </tr>\n    </table>\n  </div>\n</template>\n\n<script>\nimport Vue from \"vue\";\nimport { ENTER } from \"../../util/constants\";\n\nexport default {\n  name: \"NamespaceTable\",\n  props: {\n    tableProperties: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      input: \"\",\n      currentBaseURI: \"\",\n      checked: {}\n    };\n  },\n  created() {\n    /* Populate the checked dictionary. */\n    const self = this;\n    Object.keys(self.$store.getters.namespaces).map(prefix => {\n      self.checked[prefix] = self.isBaseURI(prefix);\n    });\n  },\n  mounted() {\n    /* Remove the input field from the top of the table. */\n    document.getElementById(\"namespaceTable\").removeChild(this.$refs.form);\n    /* Scroll to the top of the table. */\n    const body = document.getElementById(\"table-body\");\n    body.scrollTop = 0;\n\n    /* Stop editing when the modal is being closed. */\n    const self = this;\n    this.$store.watch(\n      () => self.$store.state.mConfig.mModal.show,\n      () => {\n        const { editRow, editField } = self.$props.tableProperties;\n        if (editRow !== \"\" && editField !== \"\") self.stopEditing();\n      }\n    );\n\n    /* Set the value of the current base URI to match the store state. */\n    this.$store.watch(\n      () => self.$store.getters.baseURI,\n      () => {\n        this.currentBaseURI = self.$store.getters.baseURI;\n      }\n    );\n  },\n  methods: {\n    /**\n     * Stop editing when the enter key is pressed.\n     * @param {any} e key press event.\n     */\n    handleKeyUp(e) {\n      if (e.keyCode === ENTER) this.stopEditing();\n    },\n\n    /**\n     * Indicates that the entered value is invalid.\n     * A value is valid if the input is valid and unique.\n     */\n    error() {\n      const { editRow, editField } = this.$props.tableProperties;\n\n      if (editField === \"prefix\") {\n        // Check if the input is valid.\n        if (!/^[a-zA-Z0-9]+$/i.test(this.input)) return true;\n\n        const newPrefix = this.$store.getters.prefixByURI(this.input);\n        const oldPrefix = this.$store.getters.prefixByURI(editRow);\n\n        // Check if the prefix is unique.\n        if (newPrefix) return newPrefix !== oldPrefix;\n      } else if (editField === \"uri\") {\n        // Check if the input is valid.\n        if (!\"/#\".includes(this.input.slice(-1))) return true;\n\n        // Check if the uri is unique.\n        const newPrefix = this.$store.getters.uriByPrefix(this.input);\n        if (newPrefix) return newPrefix !== editRow;\n      }\n\n      return false; // Default: no errors.\n    },\n\n    /**\n     * Update the base URI to the URI corresponding to the given prefix.\n     */\n    updateBaseUri(target, prefix) {\n      const { namespaces, uriByPrefix } = this.$store.getters;\n      const uri = namespaces[prefix];\n      const { baseURI } = this.$store.state.mConfig;\n      const currentPrefix = uriByPrefix(this.currentBaseURI);\n\n      if (uri === baseURI) {\n        // Uncheck the prefix if it was previously checked.\n        target.checked = false;\n      } else {\n        target.checked = true;\n        if (currentPrefix && currentPrefix !== \"\") {\n          // Uncheck the old one.\n          this.checked[currentPrefix] = false;\n          document.getElementById(currentPrefix).children[0].checked = false;\n        }\n      }\n      this.$store.commit(\"setBaseUri\", { uri: uri === baseURI ? \"\" : uri });\n    },\n\n    /**\n     * Are we editing the given field in the given row?\n     * @returns {boolean} `true` if we are currently editing the given field in the given row.\n     */\n    editingThis(uri, field) {\n      return (\n        this.$props.tableProperties.editRow === uri &&\n        this.$props.tableProperties.editField === field\n      );\n    },\n\n    /**\n     * Start editing the given row.\n     * @param {string} row the prefix of the row we want to edit.\n     * @param {string} field the name of the field we want to edit.\n     * @param {string} currentValue the current value we want to edit.\n     */\n    startEditing(row, field, currentValue) {\n      this.$store.commit(\"startEditingNamespace\", {\n        editRow: row,\n        editField: field\n      });\n      /* Set the initial value. */\n      this.input = currentValue;\n      /* Add the input field in the right place. */\n      document.getElementById(row + field).appendChild(this.$refs.form);\n      /* Focus on the input field so the user can start typing immediately. */\n      this.$refs.inputField.focus();\n    },\n\n    /**\n     * Stop editing the current row.\n     * Set the value of the given row and field to the entered data.\n     */\n    stopEditing() {\n      const { editRow, editField } = this.$props.tableProperties;\n      /* Check if the input is valid. */\n      if (this.error()) {\n        this.$store.commit(\"clearTableEdit\");\n      } else {\n        /* Update the internal checked value. */\n        this.checked[this.input] = this.checked[editRow];\n        Vue.delete(this.checked, editRow);\n        this.$store.dispatch(\"stopEditingNamespace\", { input: this.input });\n      }\n      /* Remove the input field from the table. */\n      const cell = document.getElementById(editRow + editField);\n      if (cell && this.$refs.form) cell.removeChild(this.$refs.form);\n    },\n\n    /**\n     * Delete the element with the given prefix from the table.\n     * @param {string} prefix the prefix we want to remove.\n     */\n    deleteElement(prefix) {\n      this.$store.commit(\"deletePrefix\", { prefix });\n    },\n\n    /**\n     * Check if the given prefix is the current base URI.\n     * @param {string} prefix the prefix of the namespace we want to check.\n     * @returns {boolean} `true` if the corresponding URI of the given prefix is the current base URI.\n     */\n    isBaseURI(prefix) {\n      const { baseURI, prefixByURI } = this.$store.getters;\n      return baseURI === prefixByURI(prefix);\n    },\n\n    /**\n     * Get the full URI for the given prefix.\n     * @param {string} prefix the prefix we want to get the URI from.\n     * @returns {string} the URI associated to the given prefix.\n     */\n    getURI(prefix) {\n      const { namespaces } = this.$store.getters;\n      return namespaces[prefix];\n    }\n  }\n};\n</script>\n\n<style scoped>\n.table {\n  width: 100%;\n  min-width: 100%;\n  max-width: 100%;\n}\n\n.table-body {\n  height: 35vh;\n  min-height: 20vh;\n  max-height: 35vh;\n  overflow: auto;\n}\n\n.clickable {\n  cursor: pointer;\n}\n\n.unclickable {\n  cursor: default;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NamespaceTable.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NamespaceTable.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NamespaceTable.vue?vue&type=template&id=a28eba1c&scoped=true&\"\nimport script from \"./NamespaceTable.vue?vue&type=script&lang=js&\"\nexport * from \"./NamespaceTable.vue?vue&type=script&lang=js&\"\nimport style0 from \"./NamespaceTable.vue?vue&type=style&index=0&id=a28eba1c&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"a28eba1c\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <sui-modal v-model=\"$store.state.mConfig.mModal.show\">\n    <sui-modal-header>Namespaces</sui-modal-header>\n    <sui-modal-content>\n      <namespace-table\n        :table-properties=\"$store.state.mConfig.mModal\"\n      ></namespace-table>\n\n      <br />\n\n      <sui-form @submit.prevent=\"addNamespace\">\n        <sui-form-fields>\n          <sui-form-field\n            class=\"four wide field\"\n            :class=\"{ error: prefix !== '' && !validPrefix() }\"\n          >\n            <input id=\"prefixField\" v-model=\"prefix\" placeholder=\"Prefix\" />\n          </sui-form-field>\n          <sui-form-field\n            class=\"eleven wide field\"\n            :class=\"{ error: uri !== '' && !validURI() }\"\n          >\n            <input id=\"uriField\" v-model=\"uri\" placeholder=\"URI\" />\n          </sui-form-field>\n          <sui-form-field class=\"one wide field\">\n            <sui-button\n              color=\"green\"\n              icon=\"plus\"\n              :disabled=\"!validPrefix() || !validURI()\"\n            ></sui-button>\n          </sui-form-field>\n        </sui-form-fields>\n      </sui-form>\n    </sui-modal-content>\n\n    <sui-modal-actions>\n      <sui-button id=\"close\" tab-index=\"0\" @click=\"closeModal\">\n        Close\n      </sui-button>\n    </sui-modal-actions>\n  </sui-modal>\n</template>\n\n<script>\nimport NamespaceTable from \"../FormElements/NamespaceTable.vue\";\nimport { IRI_REGEX } from \"../../util/constants\";\n\nexport default {\n  name: \"NamespaceModal\",\n  components: {\n    NamespaceTable\n  },\n  /**\n   * Prefix {string} the prefix that is currently filled in.\n   * URI {string} the uri that is currently filled in.\n   * @returns {{prefix: string, uri: string}}\n   */\n  data() {\n    return {\n      prefix: \"\",\n      uri: \"\"\n    };\n  },\n  methods: {\n    /**\n     * Close the modal and clear the entered values.\n     */\n    closeModal() {\n      this.$store.commit(\"toggleNamespaceModal\", false);\n      this.prefix = \"\";\n      this.uri = \"\";\n    },\n\n    /**\n     * Add the given prefix and URI to the list with namespaces.\n     * Clear the entered values.\n     */\n    addNamespace() {\n      const { prefix, uri } = this;\n      if (this.validURI() && this.validPrefix()) {\n        this.$store.dispatch(\"addNewPrefix\", { prefix, uri });\n        this.prefix = \"\";\n        this.uri = \"\";\n      }\n    },\n\n    /**\n     * Check if the entered prefix is valid.\n     * @returns {boolean}\n     */\n    validPrefix() {\n      const { prefix } = this;\n      return (\n        prefix !== \"\" &&\n        /^[a-zA-Z0-9]+$/i.test(prefix) &&\n        !Object.keys(this.$store.getters.namespaces).includes(prefix)\n      );\n    },\n\n    /**\n     * Check if the entered URI is valid.\n     * @returns {boolean}\n     */\n    validURI() {\n      const { uri } = this;\n      return (\n        uri !== \"\" &&\n        IRI_REGEX.test(uri) &&\n        \"/#\".includes(uri.slice(-1)) &&\n        !Object.values(this.$store.getters.namespaces).includes(uri)\n      );\n    }\n  }\n};\n</script>\n\n<style scoped></style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NamespaceModal.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NamespaceModal.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NamespaceModal.vue?vue&type=template&id=d04cc954&scoped=true&\"\nimport script from \"./NamespaceModal.vue?vue&type=script&lang=js&\"\nexport * from \"./NamespaceModal.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"d04cc954\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div>\n    <sui-menu id=\"navbar\" ref=\"navbar\" attached=\"top\" inverted>\n      <sui-dropdown item icon=\"file alternate\" simple>\n        <sui-dropdown-menu>\n          <sui-dropdown-item @mouseup=\"() => $refs.importShapes.click()\">\n            <label for=\"file\">Import Shapes...</label>\n            <input\n              id=\"file\"\n              ref=\"importShapes\"\n              type=\"file\"\n              style=\"display: none\"\n              @change=\"readTextFile()\"\n            />\n          </sui-dropdown-item>\n\n          <sui-dropdown-item @mouseup=\"() => $refs.importData.click()\">\n            <label for=\"dataFile\">Import Data...</label>\n            <input\n              id=\"dataFile\"\n              ref=\"importData\"\n              type=\"file\"\n              style=\"display: none\"\n              @change=\"uploadDataFile()\"\n            />\n          </sui-dropdown-item>\n\n          <sui-dropdown-item @click=\"exportFile(shacl)\">\n            Export as SHACL\n          </sui-dropdown-item>\n\n          <sui-dropdown-divider></sui-dropdown-divider>\n\n          <sui-dropdown-item @click=\"loadExample\">\n            Load Example\n          </sui-dropdown-item>\n\n          <sui-dropdown-divider></sui-dropdown-divider>\n\n          <sui-dropdown-item @click=\"toggleNamespaceModal\">\n            Namespaces...\n          </sui-dropdown-item>\n        </sui-dropdown-menu>\n      </sui-dropdown>\n      <sui-menu-item class=\"clickable\" icon=\"add\" @click=\"createNodeShape\">\n        Shape\n      </sui-menu-item>\n      <sui-menu-item class=\"clickable\" icon=\"add\" @click=\"createPropertyShape\">\n        Property\n      </sui-menu-item>\n\n      <sui-menu-item\n        class=\"clickable\"\n        icon=\"check\"\n        :disabled=\"!dataFileUploaded()\"\n        @click=\"validate\"\n      >\n        Validate\n        <sui-label v-if=\"!dataFileUploaded()\" color=\"red\">\n          No data file uploaded\n        </sui-label>\n        <sui-label v-if=\"dataFileUploaded()\" color=\"green\">\n          {{ $store.state.mData.dataFileName }}\n        </sui-label>\n      </sui-menu-item>\n\n      <sui-menu-item\n        class=\"clickable\"\n        icon=\"trash\"\n        :disabled=\"!canClear()\"\n        @click=\"toggleClearModal\"\n      ></sui-menu-item>\n\n      <sui-menu-item\n        class=\"clickable\"\n        icon=\"undo alterate\"\n        :disabled=\"!$root.canUndo()\"\n        @click=\"undoOperation\"\n      ></sui-menu-item>\n      <sui-menu-item\n        class=\"clickable\"\n        icon=\"redo alternate\"\n        :disabled=\"!$root.canRedo()\"\n        @click=\"redoOperation\"\n      ></sui-menu-item>\n\n      <!--\n      <sui-menu-menu position=\"right\">\n        <sui-menu-item class=\"clickable\" icon=\"user\"></sui-menu-item>\n      </sui-menu-menu>\n      -->\n      <sui-menu-menu position=\"right\">\n        <a href=\"https://github.com/oSoc19/unshacled/\" target=\"_blank\">\n          <sui-menu-item class=\"clickable\" icon=\"github\"></sui-menu-item>\n        </a>\n      </sui-menu-menu>\n    </sui-menu>\n\n    <clear-modal></clear-modal>\n    <export-modal></export-modal>\n    <namespace-modal></namespace-modal>\n\n    <path-modal\n      :editing=\"$store.state.pathModal.editing\"\n      :shape-i-d=\"$store.state.pathModal.shapeID\"\n    ></path-modal>\n    <validation-report-modal\n      :report=\"this.$store.state.mData.validationReport\"\n    ></validation-report-modal>\n\n    <predicate-modal\n      :modal-properties=\"$store.state.mShape.mConstraint.mModal\"\n    ></predicate-modal>\n    <edit-shape-modal\n      :modal-properties=\"$store.state.mShape.shapeModal\"\n    ></edit-shape-modal>\n  </div>\n</template>\n\n<script>\nimport SuiDropdown from \"semantic-ui-vue/dist/commonjs/modules/Dropdown/Dropdown\";\nimport SuiDropdownDivider from \"semantic-ui-vue/dist/commonjs/modules/Dropdown/DropdownDivider\";\nimport languages from \"../util/enums/languages\";\n\n// Modals\nimport ClearModal from \"./Modals/ClearModal.vue\";\nimport ValidationReportModal from \"./Modals/ValidationReportModal.vue\";\nimport PredicateModal from \"./Modals/PredicateModal.vue\";\nimport ExportModal from \"./Modals/ExportModal.vue\";\nimport PathModal from \"./Modals/PathModal.vue\";\nimport EditShapeModal from \"./Modals/EditShapeModal.vue\";\nimport NamespaceModal from \"./Modals/NamespaceModal.vue\";\n\nexport default {\n  name: \"NavBar\",\n  components: {\n    NamespaceModal,\n    EditShapeModal,\n    PathModal,\n    ExportModal,\n    ClearModal,\n    SuiDropdownDivider,\n    SuiDropdown,\n    ValidationReportModal,\n    PredicateModal\n  },\n  /**\n   * Get the string representations of the given languages.\n   * Used because the values from `languages` cannot be referenced directly from the HTML.\n   * @returns {{shacl: *, shex: *}}\n   */\n  data() {\n    return {\n      shacl: languages.SHACL,\n      shex: languages.SHEX\n    };\n  },\n  methods: {\n    /** Toggle the visibility of the clear modal. */\n    toggleClearModal() {\n      if (this.canClear()) this.$store.commit(\"toggleClearModal\");\n    },\n    /** Toggle the visibility of the namespace modal. */\n    toggleNamespaceModal() {\n      this.$store.commit(\"toggleNamespaceModal\");\n    },\n\n    /** Create a new node shape. */\n    createNodeShape() {\n      this.$store.dispatch(\"addNodeShape\");\n      /* Save the state to undo later. */\n      this.$store.commit(\"saveOperation\", {\n        state: this.$store.state,\n        action: { type: \"addNodeShape\" }\n      });\n    },\n    /** Toggle the visibility of the path modal to add a new property. */\n    createPropertyShape() {\n      this.$store.commit(\"togglePathModal\", {});\n    },\n\n    /** Load the example. */\n    loadExample() {\n      const self = this;\n      this.$store.dispatch(\"loadExample\").then(\n        () => {\n          /* Save the state to undo later. */\n          self.$store.commit(\"saveOperation\", {\n            state: self.$store.state,\n            action: { type: \"loadExample\" }\n          });\n        },\n        err => console.log(err)\n      );\n    },\n\n    /** Read the entered text file and upload it as the new model. */\n    readTextFile() {\n      const file = document.getElementById(\"file\").files[0];\n      this.$store.dispatch(\"uploadSchemaFile\", file);\n    },\n    /** Toggle the export modal using the given file type. */\n    exportFile(type) {\n      this.$store.commit(\"toggleExportModal\", type);\n    },\n    /** Read the entered data file and upload it as the new data. */\n    uploadDataFile() {\n      const file = document.getElementById(\"dataFile\").files[0];\n      this.$store.dispatch(\"uploadDataFile\", file);\n    },\n    /**\n     * Check if there is a data file loaded.\n     * @returns {boolean} `true` if there is at least one data file loaded.\n     */\n    dataFileUploaded() {\n      return this.$store.state.mData.dataFile.length > 0;\n    },\n\n    /**\n     * Check if there is anything to clear in the current state.\n     */\n    canClear() {\n      return (\n        this.$store.state.mShape.model.length > 0 ||\n        this.$store.state.mData.dataText.length > 0\n      );\n    },\n\n    /**\n     * Undo the most recent operation, if possible.\n     */\n    undoOperation() {\n      if (this.$root.canUndo()) this.$root.undo();\n    },\n    /**\n     * Undo the most recent operation, if possible.\n     */\n    redoOperation() {\n      if (this.$root.canRedo()) this.$root.redo();\n    },\n\n    /** Validate the data using the current model. */\n    validate() {\n      this.$store.dispatch(\"validateWithCurrentModel\");\n    }\n  }\n};\n</script>\n\n<style scoped>\n.clickable {\n  cursor: pointer;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NavBar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NavBar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NavBar.vue?vue&type=template&id=06370f3e&scoped=true&\"\nimport script from \"./NavBar.vue?vue&type=script&lang=js&\"\nexport * from \"./NavBar.vue?vue&type=script&lang=js&\"\nimport style0 from \"./NavBar.vue?vue&type=style&index=0&id=06370f3e&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"06370f3e\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-stage',{ref:\"stage\",attrs:{\"id\":\"stage\",\"config\":_vm.configKonva,\"draggable\":true},on:{\"wheel\":_vm.scroll,\"mouseover\":_vm.handleResize}},[_c('v-layer',[_vm._l((this.$store.getters.relationships),function(obj,key){return _c('v-group',{key:key,ref:\"relationships\",refInFor:true},[_c('relationship',{attrs:{\"id\":key,\"from\":obj.from,\"to\":obj.to,\"constraint-i-d\":obj.constraintID,\"on-click-props\":obj.onClick}})],1)}),_vm._l((this.$store.getters.propertyShapes),function(obj,key){return _c('div',{key:key},[_c('shape',{ref:key,refInFor:true,attrs:{\"id\":key,\"node-shape\":false}})],1)}),_vm._l((this.$store.getters.nodeShapes),function(obj,key){return _c('div',{key:key},[_c('shape',{ref:key,refInFor:true,attrs:{\"id\":key,\"node-shape\":true}})],1)})],2)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-group',{ref:\"posRef\",attrs:{\"draggable\":true},on:{\"mouseenter\":function($event){_vm.hover = true},\"mouseleave\":function($event){_vm.hover = false},\"dragmove\":_vm.updatePosition}},[_c('v-group',{on:{\"mouseenter\":function($event){_vm.titleHover = true},\"mouseleave\":function($event){_vm.titleHover = false}}},[_c('v-group',{on:{\"click\":_vm.startEditing}},[_c('v-rect',{attrs:{\"config\":_vm.shapeConfig}}),_c('v-text',{ref:\"shapeLabel\",attrs:{\"config\":_vm.getLabelTextConfig()},on:{\"mouseenter\":function($event){return _vm.setCursor('text')},\"mouseleave\":function($event){return _vm.setCursor('')}}}),_c('v-text',{ref:\"shapeURI\",attrs:{\"config\":_vm.getURITextConfig()}})],1),(_vm.hasDescription() && _vm.titleHover)?_c('v-group',[_c('v-rect',{attrs:{\"config\":_vm.getDescriptionConfig().rect}}),_c('v-text',{attrs:{\"config\":_vm.getDescriptionConfig().title}}),_c('v-text',{attrs:{\"config\":_vm.getDescriptionConfig().text}})],1):_vm._e()],1),_c('v-group',[(_vm.hover)?_c('v-circle',{attrs:{\"config\":_vm.deleteNodeConfig},on:{\"click\":_vm.deleteShape,\"mouseenter\":function($event){return _vm.setCursor('pointer')},\"mouseleave\":function($event){return _vm.setCursor('')}}}):_vm._e(),(_vm.hover)?_c('v-circle',{attrs:{\"config\":_vm.addPredicateConfig},on:{\"click\":_vm.addPredicate,\"mouseenter\":function($event){return _vm.setCursor('pointer')},\"mouseleave\":function($event){return _vm.setCursor('')}}}):_vm._e()],1),_vm._l((_vm.getConstraints()),function(prop,key){return _c('div',{key:key},[_c('constraint',{attrs:{\"constraint-i-d\":key,\"shape-i-d\":_vm.$props.id,\"node-shape\":_vm.$props.nodeShape,\"stroke\":_vm.shapeConfig.stroke}})],1)})],2)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-group',[_c('v-rect',{attrs:{\"config\":_vm.getConfigs().rectangleConfig}}),_c('v-group',{on:{\"mouseenter\":function($event){_vm.hoverKey = true},\"mouseleave\":function($event){_vm.hoverKey = false}}},[_c('v-text',{ref:\"key\",attrs:{\"config\":_vm.getConfigs().keyConfig}}),(_vm.hoverKey && _vm.canBeDeleted())?_c('v-circle',{attrs:{\"config\":_vm.getConfigs().deleteConstraint},on:{\"click\":_vm.deleteConstraint,\"mouseenter\":function($event){return _vm.setCursor('pointer')},\"mouseleave\":function($event){return _vm.setCursor('')}}}):_vm._e()],1),_c('v-line',{attrs:{\"config\":_vm.getConfigs().lineConfig}}),_c('v-group',{on:{\"mouseenter\":function($event){_vm.hoverValues = true},\"mouseleave\":function($event){_vm.hoverValues = false}}},_vm._l((_vm.getConstraintValues()),function(value,index){return _c('div',{key:index},[_c('v-text',{attrs:{\"config\":_vm.getValueConfig(value, index)},on:{\"click\":function($event){return _vm.editValue(index)},\"mouseenter\":function($event){return _vm.setCursor('text')},\"mouseleave\":function($event){return _vm.setCursor('')}}}),(_vm.hoverValues && !_vm.isListOfValues() && _vm.canBeDeleted())?_c('v-circle',{attrs:{\"config\":_vm.getDeleteValueConfig(index)},on:{\"click\":function($event){return _vm.deleteConstraintValue(index)},\"mouseenter\":function($event){return _vm.setCursor('pointer')},\"mouseleave\":function($event){return _vm.setCursor('')}}}):_vm._e()],1)}),0)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-group>\n    <v-rect :config=\"getConfigs().rectangleConfig\"></v-rect>\n\n    <v-group @mouseenter=\"hoverKey = true\" @mouseleave=\"hoverKey = false\">\n      <v-text ref=\"key\" :config=\"getConfigs().keyConfig\"></v-text>\n      <v-circle\n        v-if=\"hoverKey && canBeDeleted()\"\n        :config=\"getConfigs().deleteConstraint\"\n        @click=\"deleteConstraint\"\n        @mouseenter=\"setCursor('pointer')\"\n        @mouseleave=\"setCursor('')\"\n      ></v-circle>\n    </v-group>\n\n    <v-line :config=\"getConfigs().lineConfig\"></v-line>\n\n    <v-group @mouseenter=\"hoverValues = true\" @mouseleave=\"hoverValues = false\">\n      <div v-for=\"(value, index) of getConstraintValues()\" :key=\"index\">\n        <v-text\n          :config=\"getValueConfig(value, index)\"\n          @click=\"editValue(index)\"\n          @mouseenter=\"setCursor('text')\"\n          @mouseleave=\"setCursor('')\"\n        ></v-text>\n        <v-circle\n          v-if=\"hoverValues && !isListOfValues() && canBeDeleted()\"\n          :config=\"getDeleteValueConfig(index)\"\n          @click=\"deleteConstraintValue(index)\"\n          @mouseenter=\"setCursor('pointer')\"\n          @mouseleave=\"setCursor('')\"\n        ></v-circle>\n      </div>\n    </v-group>\n  </v-group>\n</template>\n\n<script>\nimport {\n  HEIGHT,\n  WIDTH,\n  CONSTRAINT_CONFIG,\n  CONSTRAINT_TEXT_CONFIG,\n  CONSTRAINT_SEPARATION_LINE,\n  DELETE_BUTTON_CONFIG,\n  TEXT_OFFSET,\n  MAX_LENGTH,\n  pointerCursor,\n  textCursor,\n  resetCursor\n} from \"../../config/konvaConfigs\";\nimport { uriToPrefix, urlToName } from \"../../util/urlParser\";\nimport { SINGLE_ENTRY } from \"../../util/constants\";\nimport ValueType, {\n  getValueTypeFromConstraint,\n  ValueTypes\n} from \"../../util/enums/ValueType\";\nimport { TERM } from \"../../translation/terminology\";\nimport { abbreviate } from \"../../util/strings\";\n\nexport default {\n  name: \"Constraint\",\n  props: {\n    shapeID: {\n      type: String,\n      required: true\n    },\n    nodeShape: {\n      type: Boolean,\n      required: true\n    },\n    constraintID: {\n      type: String,\n      required: true\n    },\n    stroke: {\n      type: String,\n      required: false,\n      default: \"black\"\n    }\n  },\n  /**\n   * HoverKey {boolean} indicates if the mouse is hovering over the key of the constraint.\n   * HoverValues {boolean} indicates if the mouse is hovering over the values of the constraint.\n   *\n   * LineConfig {} the configuration of the line that seperates the key and the value.\n   * RectangleConfig {} the configuration of the rectangle.\n   * KeyConfig {} the configuration of the key text field.\n   * ValueConfig {} the configuration of the value text field.\n   * DeleteConstraintConfig {} the configuration of the delete button.\n   *\n   * @returns {{hoverKey: boolean, hoverValues: boolean, lineConfig: {}, rectangleConfig: {}, keyConfig: {}, valueConfig: {}, deleteConstraintConfig: {}}}\n   */\n  data() {\n    return {\n      hoverKey: false,\n      hoverValues: false,\n\n      lineConfig: {\n        ...CONSTRAINT_SEPARATION_LINE,\n        points: [0, HEIGHT, WIDTH, HEIGHT] // [x1, y1, x2, y2]\n      },\n      rectangleConfig: {\n        ...CONSTRAINT_CONFIG,\n        stroke: this.$props.stroke\n      },\n      keyConfig: {\n        ...CONSTRAINT_TEXT_CONFIG,\n        y: TEXT_OFFSET,\n        fontStyle: \"italic\",\n        text: uriToPrefix(\n          this.$store.state.mConfig.namespaces,\n          this.$props.constraintID\n        )\n      },\n      valueConfig: {\n        ...CONSTRAINT_TEXT_CONFIG,\n        y: TEXT_OFFSET + HEIGHT\n      },\n      deleteConstraintConfig: {\n        ...DELETE_BUTTON_CONFIG,\n        y: HEIGHT / 2\n      }\n    };\n  },\n  methods: {\n    /* EDIT/DELETE  ================================================================================================= */\n\n    /**\n     * Check if this constraint can be removed.\n     * @returns {boolean} value that indicates if this constraint can be removed from the shape.\n     */\n    canBeDeleted() {\n      return this.$props.constraintID !== TERM.path;\n    },\n\n    /**\n     * Start editing the value of the given constraint.\n     * NOTE: We don't want to edit every constraint this way.\n     *       Some constraint can be edited using the visual relationships.\n     * @param {number} index the index of the value in the constraint object.\n     */\n    editValue(index) {\n      const { constraintID } = this.$props;\n      const shape = this.$store.getters.shapeWithID(this.$props.shapeID);\n      const values = shape[constraintID];\n      const vt = ValueType(constraintID)\n        ? ValueType(constraintID)\n        : getValueTypeFromConstraint(values);\n\n      // Determine the list we have to iterate over.\n      let iter = values;\n      if (\n        vt.includes(ValueTypes.LIST) &&\n        values.length === 1 &&\n        values[0][\"@list\"]\n      ) {\n        iter = values[0][\"@list\"];\n      }\n      // Determine the key we have to check.\n      const key = vt.includes(ValueTypes.ID) ? \"@id\" : \"@value\";\n      const value = iter[index][key];\n\n      if (constraintID === TERM.path) {\n        /* The path of a property shape is handled differently. */\n        this.$store.commit(\"togglePathModal\", {\n          shapeID: this.$props.shapeID,\n          editing: true\n        });\n      } else if (!this.isListOfValues()) {\n        /* Lists of values cannot be edited. */\n        this.$store.dispatch(\"startConstraintEdit\", {\n          shapeID: this.$props.shapeID,\n          shapeType: this.$props.nodeShape ? \"NodeShape\" : \"PropertyShape\",\n          constraintID: this.$props.constraintID,\n          index,\n          value\n        });\n      }\n    },\n\n    /**\n     * Delete the current constraint from its shape.\n     */\n    deleteConstraint() {\n      const args = {\n        shapeID: this.$props.shapeID,\n        constraintID: this.$props.constraintID\n      };\n      this.$store.dispatch(\"deleteConstraintFromShapeWithID\", args);\n      this.$store.commit(\"updateYValues\", {\n        shapeID: this.$props.shapeID,\n        shapes: this.$store.state.mShape.model\n      });\n\n      /* Save the state to undo later. */\n      this.$store.commit(\"saveOperation\", {\n        state: this.$store.state,\n        action: { type: \"deleteConstraintFromShapeWithID\", args }\n      });\n    },\n\n    /**\n     * Delete the constraint value at the given index,\n     * @param {number} index the index of the value in the constraint.\n     */\n    deleteConstraintValue(index) {\n      const args = {\n        shapeID: this.$props.shapeID,\n        constraintID: this.$props.constraintID,\n        valueIndex: index\n      };\n      this.$store.dispatch(\"deleteConstraintValueWithIndex\", args);\n      /* Save the state to undo later. */\n      this.$store.commit(\"saveOperation\", {\n        state: this.$store.state,\n        action: {\n          type: \"deleteConstraintValueWithIndex\",\n          args\n        }\n      });\n      this.$store.commit(\"updateYValues\", {\n        shapeID: this.$props.shapeID,\n        shapes: this.$store.state.mShape.model\n      });\n    },\n\n    /* HELPERS ====================================================================================================== */\n\n    /**\n     * Checks if the current constraint value should be visualized as a list of values in a single entry.\n     * @returns {boolean} value which indicates if the constraint value should be visualized as a list of values.\n     */\n    isListOfValues() {\n      const { shapeID, constraintID } = this.$props;\n      const constraints = this.$store.getters.shapeConstraints(shapeID);\n      return (\n        constraints &&\n        constraints[constraintID] &&\n        SINGLE_ENTRY.includes(urlToName(constraintID))\n      );\n    },\n\n    /**\n     * Get all the constraint values of this predicate, used to visualize the constraint.\n     * @returns {[string]} a list of all the constraint values as strings.\n     */\n    getConstraintValues() {\n      const { shapeID, constraintID } = this.$props;\n      const constraints = this.$store.getters.shapeConstraints(shapeID);\n      const output = [];\n\n      if (constraints && constraints[constraintID]) {\n        if (constraintID === TERM.path) {\n          /* Show the full path. */\n          return [constraints[constraintID][0][\"@id\"]];\n        }\n\n        /* Get the constraint's value type. */\n        const values = constraints[constraintID];\n        const vt = ValueType(constraintID)\n          ? ValueType(constraintID)\n          : getValueTypeFromConstraint(constraints[constraintID]);\n\n        /* Specified constraint values should be listed in a single entry. */\n        let iter;\n        if (this.isListOfValues()) {\n          iter =\n            values.length > 1 || !vt.includes(ValueTypes.LIST)\n              ? values\n              : values[0][\"@list\"];\n        } else {\n          iter = values;\n        }\n\n        /* Other constraints should be visualized as an array of their value representations. */\n        if (\n          vt.includes(ValueTypes.LIST) &&\n          values.length === 1 &&\n          values[0][\"@list\"]\n        ) {\n          iter = values[0][\"@list\"];\n        }\n        for (const v of iter) {\n          const key = vt.includes(ValueTypes.ID) ? \"@id\" : \"@value\";\n          const name = v[key] ? v[key] : v;\n          /* If the shape has a label, abbreviate and use it. */\n          const text =\n            this.$store.getters.labelsForIds[name] ||\n            uriToPrefix(this.$store.state.mConfig.namespaces, name);\n          output.push(abbreviate(text));\n        }\n        if (this.isListOfValues()) {\n          const joined = output.join(\", \");\n          /* Abbreviate the label of every element depending on the number of elements in the list. */\n          if (joined.length > MAX_LENGTH - 8) {\n            return [\n              output\n                .map(e => abbreviate(e, (2 * MAX_LENGTH) / output.length))\n                .join(\", \")\n            ];\n          }\n          return [joined];\n        }\n      }\n      return output;\n    },\n\n    /**\n     * Get the number of constraint values in this constraint.\n     * This is used to determine the size of the rectangle.\n     * @returns {number} the number of constraint values.\n     */\n    getNumConstraintValues() {\n      const { shapeID, constraintID } = this.$props;\n      const cvs = this.$store.getters.shapeWithID(shapeID)[constraintID];\n      return SINGLE_ENTRY.includes(urlToName(constraintID))\n        ? 1 /* For certain constraints, the values will be listed as a single value. */\n        : cvs.length > 0 && cvs[0][\"@list\"]\n        ? cvs[0][\"@list\"].length // Get the number of elements if it's a list.\n        : cvs.length;\n    },\n\n    /* CONFIGURATIONS =============================================================================================== */\n\n    /**\n     * Get the y value of this constraint.\n     * @returns {number} the y value of this constraint.\n     */\n    getYValue() {\n      return this.$store.state.mShape.mCoordinate.yValues[this.$props.shapeID][\n        this.$props.constraintID\n      ];\n    },\n\n    /**\n     * Get the configurations for the different visualization components.\n     * This is mainly to dynamically set the y values and heights of the different components.\n     * @returns {{lineConfig: object, rectangleConfig: object, keyConfig: object, valueConfig: object, deleteConstraint: object}}\n     */\n    getConfigs() {\n      /* Determine the current y value. */\n      const y = this.getYValue();\n      const points = [...this.lineConfig.points];\n      points[1] += y;\n      points[3] += y;\n\n      return {\n        lineConfig: { ...this.lineConfig, points },\n        rectangleConfig: {\n          ...this.rectangleConfig,\n          y,\n          height: (this.getNumConstraintValues() + 1) * HEIGHT\n        },\n        keyConfig: {\n          ...this.keyConfig,\n          y: this.keyConfig.y + y\n        },\n        valueConfig: {\n          ...this.valueConfig,\n          y: this.valueConfig.y + y\n        },\n        deleteConstraint: {\n          ...this.deleteConstraintConfig,\n          y: this.deleteConstraintConfig.y + y\n        }\n      };\n    },\n\n    /**\n     * Get the configuration for a constraint value.\n     * This will set the y coordinate and the text using the given value and index.\n     * @param {string} value text that should be visualized in this constraint component.\n     * @param {number} index the index of the constraint value.\n     * @returns {{y: number, text: string}}\n     */\n    getValueConfig(value, index) {\n      const text = uriToPrefix(this.$store.state.mConfig.namespaces, value);\n      // Determine if the value has to move up to free up space for the label/name.\n      const move = text.length - 2 > MAX_LENGTH ? -HEIGHT / 6 : 0;\n      return {\n        ...this.valueConfig,\n        y: this.valueConfig.y + this.getYValue() + index * HEIGHT + move,\n        text\n      };\n    },\n\n    /**\n     * Get the configuration of the delete button for the constraint value at the given index.\n     * @param {number} index the index of the constraint value.\n     * @returns {object} the configuration object with an updated y value.\n     */\n    getDeleteValueConfig(index) {\n      return {\n        ...this.deleteConstraintConfig,\n        y:\n          this.deleteConstraintConfig.y +\n          (index + 1) * HEIGHT +\n          this.getYValue()\n      };\n    },\n\n    /**\n     * Set the cursor type according to the passed argument.\n     * @param {string} type the type of pointer we want to use: \"pointer\" || \"text\"\n     */\n    setCursor(type) {\n      if (type === \"pointer\") pointerCursor();\n      else if (type === \"text\") textCursor();\n      else resetCursor();\n    }\n  }\n};\n</script>\n\n<style scoped></style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Constraint.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Constraint.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Constraint.vue?vue&type=template&id=4a087584&scoped=true&\"\nimport script from \"./Constraint.vue?vue&type=script&lang=js&\"\nexport * from \"./Constraint.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4a087584\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div>\n    <v-group\n      ref=\"posRef\"\n      :draggable=\"true\"\n      @mouseenter=\"hover = true\"\n      @mouseleave=\"hover = false\"\n      @dragmove=\"updatePosition\"\n    >\n      <v-group @mouseenter=\"titleHover = true\" @mouseleave=\"titleHover = false\">\n        <!-- Header -->\n        <v-group @click=\"startEditing\">\n          <v-rect :config=\"shapeConfig\"></v-rect>\n          <v-text\n            ref=\"shapeLabel\"\n            :config=\"getLabelTextConfig()\"\n            @mouseenter=\"setCursor('text')\"\n            @mouseleave=\"setCursor('')\"\n          ></v-text>\n          <v-text ref=\"shapeURI\" :config=\"getURITextConfig()\"></v-text>\n        </v-group>\n\n        <!-- Description -->\n        <v-group v-if=\"hasDescription() && titleHover\">\n          <v-rect :config=\"getDescriptionConfig().rect\"></v-rect>\n          <v-text :config=\"getDescriptionConfig().title\"></v-text>\n          <v-text :config=\"getDescriptionConfig().text\"></v-text>\n        </v-group>\n      </v-group>\n\n      <!-- Buttons -->\n      <v-group>\n        <v-circle\n          v-if=\"hover\"\n          :config=\"deleteNodeConfig\"\n          @click=\"deleteShape\"\n          @mouseenter=\"setCursor('pointer')\"\n          @mouseleave=\"setCursor('')\"\n        ></v-circle>\n        <v-circle\n          v-if=\"hover\"\n          :config=\"addPredicateConfig\"\n          @click=\"addPredicate\"\n          @mouseenter=\"setCursor('pointer')\"\n          @mouseleave=\"setCursor('')\"\n        ></v-circle>\n      </v-group>\n\n      <!-- Constraints -->\n      <div v-for=\"(prop, key) in getConstraints()\" :key=\"key\">\n        <constraint\n          :constraint-i-d=\"key\"\n          :shape-i-d=\"$props.id\"\n          :node-shape=\"$props.nodeShape\"\n          :stroke=\"shapeConfig.stroke\"\n        ></constraint>\n      </div>\n    </v-group>\n  </div>\n</template>\n\n<script>\nimport Constraint from \"./Constraint.vue\";\nimport { uriToPrefix } from \"../../util/urlParser\";\nimport {\n  DELETE_BUTTON_CONFIG,\n  LABEL_TEXT_CONFIG,\n  NODE_SHAPE_CONFIG,\n  PROPERTY_SHAPE_CONFIG,\n  ADD_PREDICATE_CONFIG,\n  URI_TEXT_CONFIG,\n  TEXT_OFFSET,\n  OFFSET,\n  DESCRIPTION_RECT_CONFIG,\n  DESCRIPTION_TITLE_CONFIG,\n  DESCRIPTION_TEXT_CONFIG,\n  MAX_LENGTH,\n  TEXT_SIZE,\n  pointerCursor,\n  resetCursor,\n  textCursor\n} from \"../../config/konvaConfigs\";\nimport { TERM } from \"../../translation/terminology\";\nimport { abbreviate } from \"../../util/strings\";\nimport { LABEL } from \"../../util/constants\";\n\nexport default {\n  name: \"Shape\",\n  components: { Constraint },\n  props: {\n    id: {\n      type: String,\n      required: true\n    },\n    nodeShape: {\n      type: Boolean,\n      required: true\n    }\n  },\n  /**\n   * Hover {boolean} indicates if the user is hovering over this shape.\n   * TitleHover {boolean} indicates if the user is hovering over the title of this shape.\n   * ShapeConfig {object} configuration object for the rectangle of the shape.\n   * DeleteNodeConfig {object} configuration of the delete button.\n   * IDTextConfig {object} configuration of the ID text.\n   * AddPredicateConfig {object} configuration of the \"add predicate\"-button\n   * @returns {{hover: boolean, titleHover: boolean, shapeConfig: object, deleteNodeConfig: object, idTextConfig: object, addPredicateConfig: object}}}\n   */\n  data() {\n    return {\n      hover: false,\n      titleHover: false,\n      shapeConfig: this.$props.nodeShape\n        ? NODE_SHAPE_CONFIG\n        : PROPERTY_SHAPE_CONFIG,\n      deleteNodeConfig: DELETE_BUTTON_CONFIG,\n      idTextConfig: {\n        ...LABEL_TEXT_CONFIG,\n        text: uriToPrefix(this.$store.state.mConfig.namespaces, this.$props.id)\n      },\n      addPredicateConfig: ADD_PREDICATE_CONFIG\n    };\n  },\n  mounted() {\n    const self = this;\n    const { id } = this.$props;\n    /* Move the shape to the defined coordinate. */\n    this.$refs.posRef\n      .getNode()\n      .setPosition(this.$store.state.mShape.mCoordinate.coordinates[id]);\n    this.updatePosition();\n\n    /* Update the constraints when the store state changes. */\n    this.$store.watch(\n      () => self.$store.getters.shapeConstraints(self.$props.id),\n      () => {\n        self.getConstraints();\n        self.getDescriptionConfig();\n      }\n    );\n  },\n  methods: {\n    /**\n     * Create the label text configuration object.\n     * Abbreviate the text if needed and change the namespace URL to the prefix if possible.\n     * @returns {object} the configuration object for the label.\n     */\n    getLabelTextConfig() {\n      const label = this.$store.getters.labelsForIds[this.id];\n      const text = label\n        ? abbreviate(label)\n        : abbreviate(\n            uriToPrefix(this.$store.state.mConfig.namespaces, this.id)\n          );\n      return {\n        ...LABEL_TEXT_CONFIG,\n        y: label ? OFFSET : TEXT_OFFSET,\n        text\n      };\n    },\n\n    /**\n     * Create the URI text configuration object.\n     * Abbreviate the URI if needed.\n     * @returns {object} the configuration of the URI.\n     */\n    getURITextConfig() {\n      const label = this.$store.getters.labelsForIds[this.id];\n      const text = label ? abbreviate(this.id) : \"\";\n      return { ...URI_TEXT_CONFIG, text };\n    },\n\n    /**\n     * Check if this shape has a description.\n     * @returns {boolean} value that indicates if this shape has a description.\n     */\n    hasDescription() {\n      const shape = this.$store.getters.shapeWithID(this.id);\n      if (shape) {\n        const constraint = shape[TERM.description];\n        if (constraint) {\n          const description = constraint[0][\"@value\"];\n          return description && description !== \"\";\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Get the configuration objects for the visualization of the description.\n     * @returns {{rect: object, title: object, text: object}}\n     */\n    getDescriptionConfig() {\n      /* Check if the shape has a description first. */\n      if (this.hasDescription()) {\n        const text = this.$store.getters.shapeWithID(this.id)[\n          TERM.description\n        ][0][\"@value\"];\n\n        // Constants for the configuration.\n        let lines = Math.ceil(text.length / MAX_LENGTH);\n        if (lines < 2) lines = 2;\n\n        return {\n          rect: {\n            ...DESCRIPTION_RECT_CONFIG,\n            height: lines * TEXT_SIZE + TEXT_OFFSET\n          },\n          title: DESCRIPTION_TITLE_CONFIG,\n          text: {\n            ...DESCRIPTION_TEXT_CONFIG,\n            text\n          }\n        };\n      }\n\n      /* If the shape does not have a description, no configurations are needed. */\n      return {\n        rect: {},\n        title: {},\n        text: {}\n      };\n    },\n\n    /**\n     * Get an object containing all the constraints.\n     * @returns {object} an object mapping every constraint name to a (list of) values.\n     */\n    getConstraints() {\n      return this.$store.getters.shapeConstraints(this.$props.id);\n    },\n\n    /**\n     * Takes the coordinates from this node shape and calls store to update them.\n     */\n    updatePosition() {\n      /* Determine the current position. */\n      const pos = this.$refs.posRef.getNode().position();\n      /* Update the y values of the components relative to this shape. */\n      this.$store.commit(\"updateYValues\", {\n        shapeID: this.$props.id,\n        shapes: this.$store.state.mShape.model\n      });\n      /* Update the coordinates of this shape. */\n      this.$store.commit(\"updateCoordinates\", {\n        shapeID: this.$props.id,\n        x: pos.x,\n        y: pos.y\n      });\n    },\n\n    /**\n     * Toggle the predicate model to add a constraint to this shape.\n     */\n    addPredicate() {\n      this.$store.commit(\"resetPredicateModal\");\n      this.$store.commit(\"togglePredicateModal\", {\n        shapeID: this.id,\n        shapeType: this.nodeShape ? \"NodeShape\" : \"PropertyShape\",\n        onExit: \"addPredicate\",\n        editing: false\n      });\n    },\n\n    /**\n     * Toggle the shape modal to start editing this shape's properties.\n     */\n    startEditing() {\n      const shape = this.$store.getters.shapeWithID(this.id);\n\n      /* Get the label and its language. */\n      const labelConstraint = shape[TERM.name]\n        ? shape[TERM.name]\n        : shape[LABEL]\n        ? shape[LABEL]\n        : null;\n      const label = labelConstraint ? labelConstraint[0][\"@value\"] : \"\";\n      const labelLang = labelConstraint\n        ? labelConstraint[0][\"@language\"]\n        : \"en\";\n\n      /* Get the description and its language. */\n      const description = shape[TERM.description]\n        ? shape[TERM.description][0][\"@value\"]\n        : \"\";\n      const descrLang = shape[TERM.description]\n        ? shape[TERM.description][0][\"@language\"]\n        : \"en\";\n\n      /* Toggle the modal. */\n      this.$store.commit(\"toggleEditShapeModal\", {\n        id: this.id,\n        label,\n        labelLang,\n        description,\n        descrLang,\n        nodeShape: this.nodeShape\n      });\n    },\n\n    /**\n     * Delete this shape.\n     */\n    deleteShape() {\n      const action = this.$props.nodeShape\n        ? \"deleteNodeShape\"\n        : \"deletePropertyShape\";\n      this.$store.dispatch(action, this.$props.id);\n      /* Save the state to undo later. */\n      this.$store.commit(\"saveOperation\", {\n        state: this.$store.state,\n        action: {\n          type: action,\n          args: this.$props.id\n        }\n      });\n    },\n\n    /**\n     * Set the cursor type according to the passed argument.\n     * @param {string} type \"pointer\" || \"text\" || *: the type of cursor we want to use.\n     */\n    setCursor(type) {\n      if (type === \"pointer\") pointerCursor();\n      else if (type === \"text\") textCursor();\n      else resetCursor();\n    }\n  }\n};\n</script>\n\n<style scoped></style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Shape.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Shape.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Shape.vue?vue&type=template&id=6830d20d&scoped=true&\"\nimport script from \"./Shape.vue?vue&type=script&lang=js&\"\nexport * from \"./Shape.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6830d20d\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-group',{ref:\"group\",on:{\"mouseenter\":function($event){_vm.hover = true},\"mouseleave\":function($event){_vm.hover = false}}},[_c('v-arrow',{ref:\"arrow\",attrs:{\"config\":_vm.getConfigs().line}}),_c('v-group',{ref:\"label\",attrs:{\"config\":_vm.getConfigs().label}},[_c('v-rect',{attrs:{\"config\":_vm.getLabelRectConfig()}}),_c('v-text',{ref:\"text\",attrs:{\"config\":_vm.getConfigs().text}})],1),(_vm.hover)?_c('v-circle',{attrs:{\"config\":_vm.getButtonConfig()},on:{\"click\":function($event){return _vm.click()},\"mouseenter\":function($event){return _vm.setCursor('pointer')},\"mouseleave\":function($event){return _vm.setCursor('')}}}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * Return the nearest point to the given reference on the perimeter of the rectangle\n * defined by the given top left and bottom right coordiantes.\n * @param {{x: number, y: number}} topLeft the top left coordinate of the rectangle.\n * @param {{x: number, y: number}} bottomRight the bottom right coordinate of the rectangle.\n * @param {{x: number, y: number}} reference the reference point.\n * @returns {{x: number, y: number}} the nearest point to the reference point on the perimeter of the given rectangle.\n */\nexport function nearestPointOnPerimeter(topLeft, bottomRight, reference) {\n  // Reference: https://stackoverflow.com/questions/20453545/how-to-find-the-nearest-point-in-the-perimeter-of-a-rectangle-to-a-given-point\n  const [l, r, t, b] = [topLeft.x, bottomRight.x, topLeft.y, bottomRight.y];\n  const [x, y] = [clamp(reference.x, l, r), clamp(reference.y, t, b)];\n  const [dl, dr, dt, db] = [x - l, x - r, y - t, y - b].map(o => Math.abs(o));\n  const m = Math.min(dl, dr, dt, db);\n  return m === dl\n    ? { x: l, y }\n    : m === dr\n    ? { x: r, y }\n    : m === dt\n    ? { x, y: t }\n    : { x, y: b };\n}\n\n/**\n * If the given number is outside of the given boundaries, then return the respecitve boundary.\n * @param {number} a the reference number.\n * @param {number} lower the lower boundary.\n * @param {number} upper the upper boundary.\n * @returns {number} a if a is between the given boundaries, otherwise one of the boundaries.\n */\nfunction clamp(a, lower, upper) {\n  return Math.max(lower, Math.min(a, upper));\n}\n\n/**\n * Calculate the distance between the two given points.\n * @param x1 {number} the x coordinate of the first point.\n * @param y1 {number} the y coordinate of the first point.\n * @param x2 {number} the x coordinate of the second point.\n * @param y2 {number} the y coordinate of the second point.\n * @returns {number} the distance between the given points.\n */\nexport function distance(x1, y1, x2, y2) {\n  return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n}\n","<template>\n  <v-group ref=\"group\" @mouseenter=\"hover = true\" @mouseleave=\"hover = false\">\n    <v-arrow ref=\"arrow\" :config=\"getConfigs().line\"></v-arrow>\n    <v-group ref=\"label\" :config=\"getConfigs().label\">\n      <v-rect :config=\"getLabelRectConfig()\"></v-rect>\n      <v-text ref=\"text\" :config=\"getConfigs().text\"></v-text>\n    </v-group>\n    <v-circle\n      v-if=\"hover\"\n      :config=\"getButtonConfig()\"\n      @click=\"click()\"\n      @mouseenter=\"setCursor('pointer')\"\n      @mouseleave=\"setCursor('')\"\n    ></v-circle>\n  </v-group>\n</template>\n\n<script>\nimport {\n  WIDTH,\n  HEIGHT,\n  DELETE_BUTTON_CONFIG,\n  RELATIONSHIP_ARROW_CONFIG,\n  RELATIONSHIP_LABEL_RECT_CONFIG,\n  RELATIONSHIP_LABEL_TEXT_CONFIG,\n  MARGIN,\n  pointerCursor,\n  resetCursor\n} from \"../../config/konvaConfigs\";\nimport { nearestPointOnPerimeter, distance } from \"../../util/calculations\";\nimport { uriToPrefix } from \"../../util/urlParser\";\n\nexport default {\n  name: \"Relationship\",\n  props: {\n    from: {\n      type: String,\n      required: true\n    },\n    to: {\n      type: String,\n      required: true\n    },\n    constraintID: {\n      type: String,\n      required: true\n    },\n    onClickProps: {\n      type: Object,\n      required: true\n    }\n  },\n  /**\n   * Hover {boolean} indicates if the mouse is hovering over this relationship.\n   * @returns {{hover: boolean}}\n   */\n  data() {\n    return {\n      hover: false\n    };\n  },\n  methods: {\n    /**\n     * Get the end points of the relationship line.\n     * @returns {[number]} a list of coordinates: [x1, y1, x2, y2]\n     */\n    getEndPoints() {\n      const { from, to, constraintID } = this.$props;\n      const {\n        coordinates,\n        heights,\n        yValues\n      } = this.$store.state.mShape.mCoordinate;\n\n      /* Determine the center points of the start shape. */\n      const start = {\n        x: coordinates[from].x + WIDTH / 2,\n        y: coordinates[from].y + yValues[from][constraintID] + HEIGHT\n      };\n      /* Determine the closest point on the end shape's perimeter. */\n      const end = nearestPointOnPerimeter(\n        coordinates[to],\n        {\n          x: coordinates[to].x + WIDTH,\n          y: coordinates[to].y + heights[to]\n        },\n        start\n      );\n\n      /* Grab the nearest edge of the start shape. */\n      const edges = {\n        xl: coordinates[from].x,\n        xr: coordinates[from].x + WIDTH,\n        y: coordinates[from].y + yValues[from][constraintID] + HEIGHT\n      };\n      const distLeft = distance(edges.xl, edges.y, end.x, end.y);\n      const distRight = distance(edges.xr, edges.y, end.x, end.y);\n      start.x = distLeft < distRight ? edges.xl : edges.xr;\n      start.y = edges.y;\n\n      return [start.x, start.y, end.x, end.y]; // x1, y1, x2, y2\n    },\n\n    /**\n     * Get the configurations for the components of the relationship depending on the end points of the arrow.\n     * @returns {{line: object, label: object, text: object, rect: object}}\n     */\n    getConfigs() {\n      const DEGREES = 180;\n\n      /* Determine the end points and the rotation of the arrow. */\n      const points = this.getEndPoints();\n      const dx = points[2] - points[0];\n      const dy = points[3] - points[1];\n\n      let rotation = Math.atan2(dy, dx) * (DEGREES / Math.PI);\n      rotation > DEGREES / 2 ? (rotation -= DEGREES) : null;\n      rotation < -DEGREES / 2 ? (rotation += DEGREES) : null;\n\n      /* Create and return the configuration objects using these end points and rotations. */\n      return {\n        line: {\n          ...RELATIONSHIP_ARROW_CONFIG,\n          points\n        },\n        label: {\n          x: (points[0] + points[2]) / 2,\n          y: (points[1] + points[3] - 2 * MARGIN) / 2,\n          rotation\n        },\n        text: {\n          ...RELATIONSHIP_LABEL_TEXT_CONFIG,\n          text: uriToPrefix(\n            this.$store.state.mConfig.namespaces,\n            this.$props.constraintID\n          )\n        },\n        rect: {\n          ...RELATIONSHIP_LABEL_RECT_CONFIG,\n          x: -MARGIN,\n          y: -MARGIN\n        }\n      };\n    },\n\n    /**\n     * Get the configuration for the label rectangle.\n     * This one is not included in `getConfigs` because it relies on the previously drawn line.\n     * @returns {any} a configuration object.\n     */\n    getLabelRectConfig() {\n      const configs = this.getConfigs();\n      if (this.$refs.text && this.$refs.text.getNode()) {\n        return {\n          ...configs.rect,\n          width: this.$refs.text.getNode().width() + MARGIN * 2\n        };\n      }\n      return configs.rect;\n    },\n\n    /**\n     * Get the button configuration.\n     * This one is not included in `getConfigs` because it relies on the previously drawn line.\n     * @returns {any} a configuration object.\n     */\n    getButtonConfig() {\n      const arrow = this.$refs.arrow.getNode();\n      const transform = arrow.getAbsoluteTransform().copy();\n      transform.invert();\n      const pointer = arrow.getStage().getPointerPosition();\n      const relative = transform.point(pointer);\n\n      return {\n        ...DELETE_BUTTON_CONFIG,\n        x: relative.x,\n        y: relative.y\n      };\n    },\n\n    /**\n     * Call the delete function using the given arguments.\n     */\n    click() {\n      this.hover = false;\n      this.$store.dispatch(\"deleteConstraintValue\", this.$props.onClickProps);\n      this.$store.commit(\"saveOperation\", {\n        state: this.$store.state,\n        action: {\n          type: \"deleteConstraintValue\",\n          args: this.$props.onClickProps\n        }\n      });\n    },\n\n    /**\n     * Set the cursor type according to the passed argument.\n     * @param {string} type the type of cursor we want to use.\n     */\n    setCursor(type) {\n      if (type === \"pointer\") pointerCursor();\n      else resetCursor();\n    }\n  }\n};\n</script>\n\n<style scoped></style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Relationship.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Relationship.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Relationship.vue?vue&type=template&id=6dd5bf21&scoped=true&\"\nimport script from \"./Relationship.vue?vue&type=script&lang=js&\"\nexport * from \"./Relationship.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6dd5bf21\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <v-stage\n    id=\"stage\"\n    ref=\"stage\"\n    :config=\"configKonva\"\n    :draggable=\"true\"\n    @wheel=\"scroll\"\n    @mouseover=\"handleResize\"\n  >\n    <v-layer>\n      <v-group\n        v-for=\"(obj, key) in this.$store.getters.relationships\"\n        :key=\"key\"\n        ref=\"relationships\"\n      >\n        <relationship\n          :id=\"key\"\n          :from=\"obj.from\"\n          :to=\"obj.to\"\n          :constraint-i-d=\"obj.constraintID\"\n          :on-click-props=\"obj.onClick\"\n        ></relationship>\n      </v-group>\n      <div v-for=\"(obj, key) in this.$store.getters.propertyShapes\" :key=\"key\">\n        <shape :id=\"key\" :ref=\"key\" :node-shape=\"false\"></shape>\n      </div>\n      <div v-for=\"(obj, key) in this.$store.getters.nodeShapes\" :key=\"key\">\n        <shape :id=\"key\" :ref=\"key\" :node-shape=\"true\"></shape>\n      </div>\n    </v-layer>\n  </v-stage>\n</template>\n\n<script>\nimport Shape from \"./Shapes/Shape.vue\";\nimport Relationship from \"./Shapes/Relationship.vue\";\nimport { MARGIN_TOP } from \"../config/konvaConfigs\";\n\nexport default {\n  name: \"Editor\",\n  components: { Relationship, Shape },\n\n  /**\n   * ConfigKonva {{width: number, height: number}} the configuration for the Konva stage.\n   * @returns {{configConva: object}}}\n   */\n  data() {\n    return {\n      configKonva: {\n        width: window.innerWidth,\n        height: window.innerHeight - MARGIN_TOP\n      }\n    };\n  },\n\n  mounted() {\n    /* Save a reference to the stage when it's loaded. */\n    this.$store.commit(\"setEditor\", this.$refs.stage.getNode());\n    /* React to window resizing. */\n    window.addEventListener(\"resize\", this.handleResize);\n    this.handleResize();\n\n    const self = this;\n    /* React to undo operations. */\n    this.$store.subscribe(mutation => {\n      /* Update the shape's positions to make sure the relationship arrows are updated accordingly. */\n      if (mutation.type === \"undo\")\n        for (const shape of Object.values(self.getShapeObjects()))\n          if (shape) shape.updatePosition();\n    });\n  },\n\n  updated() {\n    /* Put the arrows on the bottom layer. */\n    const layer = this.$refs.relationships;\n    if (layer && layer.getNode) layer.getNode.zIndex(0);\n  },\n\n  methods: {\n    /**\n     * Resize the canvas on resizing of the window or when the div has resized.\n     * Redraw the canvas on the next tick.\n     */\n    handleResize() {\n      if (this.$refs.stage) {\n        const editorContainer = document.getElementById(\"editorContainer\");\n        const dataContainer = document.getElementById(\"dataTextView\");\n        const navbar = document.getElementById(\"navbar\");\n\n        const stage = this.$refs.stage.getNode();\n        const newWidth = window.innerWidth - dataContainer.offsetWidth;\n\n        editorContainer.style.width = newWidth.toString();\n        this.configKonva.height = window.innerHeight - navbar.offsetHeight;\n        this.configKonva.width = newWidth;\n        this.$nextTick(() => stage.draw());\n      }\n    },\n\n    /**\n     * Scale the canvas depending on the pointer position when scrolling.\n     * This will zoom in on scrolling up and zoom out on scrolling down.\n     * @param {any} e scoll event\n     */\n    scroll(e) {\n      const stage = this.$refs.stage.getNode();\n      const scaleBy = 0.99; // 1.01 for other direction (down = zoom in, up = zoom out)\n      const oldScale = stage.scaleX();\n      e.evt.preventDefault();\n\n      /* Determine where the mouse points to. */\n      const mousePointTo = {\n        x: stage.getPointerPosition().x / oldScale - stage.x() / oldScale,\n        y: stage.getPointerPosition().y / oldScale - stage.y() / oldScale\n      };\n\n      /* Determine the new scale of the stage. */\n      const newScale =\n        e.evt.deltaY > 0 ? oldScale * scaleBy : oldScale / scaleBy;\n      stage.scale({ x: newScale, y: newScale }); /* Rescale the stage. */\n\n      /* Determine the new position of the stage. */\n      const newPos = {\n        x:\n          -(mousePointTo.x - stage.getPointerPosition().x / newScale) *\n          newScale,\n        y:\n          -(mousePointTo.y - stage.getPointerPosition().y / newScale) * newScale\n      };\n\n      stage.position(newPos); /* Reposition the stage. */\n      stage.batchDraw(); /* Redraw the stage. */\n    },\n\n    /**\n     * Return all the shape objects that are currently visualized in the editor.\n     */\n    getShapeObjects() {\n      const output = {};\n      for (const ref of Object.keys(this.$refs))\n        if (![\"relationships\", \"stage\"].includes(ref))\n          output[ref] = this.$refs[ref][0];\n      return output;\n    }\n  }\n};\n</script>\n\n<style scoped></style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Editor.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Editor.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Editor.vue?vue&type=template&id=0dc5109e&scoped=true&\"\nimport script from \"./Editor.vue?vue&type=script&lang=js&\"\nexport * from \"./Editor.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0dc5109e\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"height\":\"96%\"}},[_c('sui-segment',{staticStyle:{\"padding-bottom\":\"0\"},attrs:{\"basic\":\"\"}},[_c('sui-grid',{attrs:{\"columns\":3}},[_c('sui-grid-column',{attrs:{\"width\":4}},[_c('sui-header',{attrs:{\"id\":\"header\"}},[_vm._v(\"Data\")])],1),(_vm.dataText !== '')?_c('sui-grid-column',{attrs:{\"width\":12,\"text-align\":\"right\"}},[(_vm.invalidData())?_c('sui-label',{attrs:{\"basic\":\"\",\"color\":\"red\",\"pointing\":\"right\"}},[_vm._v(\"\\n          Invalid JSON\\n        \")]):_vm._e(),_c('sui-button',{attrs:{\"disabled\":_vm.invalidData() || !_vm.dataHasChanged(),\"color\":\"green\"},on:{\"click\":_vm.updateData}},[_vm._v(\"\\n          Update\\n        \")]),_c('sui-button',{attrs:{\"disabled\":!_vm.dataHasChanged(),\"color\":\"red\"},on:{\"click\":_vm.updateText}},[_vm._v(\"\\n          Reset\\n        \")])],1):_vm._e()],1)],1),_c('sui-divider',{staticStyle:{\"margin-bottom\":\"0\"}}),_c('div',{staticStyle:{\"height\":\"95%\"},attrs:{\"id\":\"textContainer\"}},[(_vm.dataText !== '')?_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.dataText),expression:\"dataText\"}],domProps:{\"value\":(_vm.dataText)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.dataText=$event.target.value}}}):_vm._e(),(_vm.dataText === '')?_c('sui-segment',{attrs:{\"basic\":\"\"}},[_vm._v(\"\\n      No data loaded.\\n    \")]):_vm._e()],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div style=\"height: 96%;\">\n    <sui-segment basic style=\"padding-bottom: 0;\">\n      <sui-grid :columns=\"3\">\n        <sui-grid-column :width=\"4\">\n          <sui-header id=\"header\">Data</sui-header>\n        </sui-grid-column>\n        <sui-grid-column v-if=\"dataText !== ''\" :width=\"12\" text-align=\"right\">\n          <sui-label v-if=\"invalidData()\" basic color=\"red\" pointing=\"right\">\n            Invalid JSON\n          </sui-label>\n          <sui-button\n            :disabled=\"invalidData() || !dataHasChanged()\"\n            color=\"green\"\n            @click=\"updateData\"\n          >\n            Update\n          </sui-button>\n          <sui-button\n            :disabled=\"!dataHasChanged()\"\n            color=\"red\"\n            @click=\"updateText\"\n          >\n            Reset\n          </sui-button>\n        </sui-grid-column>\n      </sui-grid>\n    </sui-segment>\n\n    <sui-divider style=\"margin-bottom: 0;\" />\n\n    <div id=\"textContainer\" style=\"height: 95%\">\n      <textarea v-if=\"dataText !== ''\" v-model=\"dataText\"></textarea>\n      <sui-segment v-if=\"dataText === ''\" basic>\n        No data loaded.\n      </sui-segment>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"DataTextView\",\n  props: {\n    height: {\n      type: Number,\n      required: true\n    }\n  },\n  /**\n   * DataText {string} the current (possibly edited) data in JSON text format.\n   * @returns {{dataText: string}}\n   */\n  data() {\n    return {\n      dataText: \"\"\n    };\n  },\n  mounted() {\n    /* Update the shown text whenever the store state is updated. */\n    const self = this;\n    this.$store.watch(\n      () => self.$store.state.mData.dataText,\n      () => self.updateText()\n    );\n  },\n  methods: {\n    /**\n     * Update the shown text depending on the store state.\n     */\n    updateText() {\n      const { dataText } = this.$store.state.mData;\n      this.dataText = dataText || \"\";\n    },\n    /**\n     * Update the data in the store using the data in the text field.\n     */\n    updateData() {\n      this.$store.dispatch(\"updateData\", { dataText: this.dataText });\n      /* Save the state to undo later. */\n      this.$store.commit(\"saveOperation\", {\n        state: this.$store.state,\n        action: {\n          type: \"updateData\",\n          args: { dataText: this.dataText }\n        }\n      });\n    },\n    /**\n     * Check if the data in the text field has changed in comparison to the data in the store.\n     * @returns {boolean} indicates if the data has changed.\n     */\n    dataHasChanged() {\n      return this.dataText !== this.$store.state.mData.dataText;\n    },\n    /**\n     * Check if the data is invalid.\n     * This will try to parse the data in the text field and return `true` if this is invalid JSON.\n     * @returns {boolean} indicates if the data is invalid.\n     */\n    invalidData() {\n      try {\n        JSON.parse(this.dataText);\n        return false;\n      } catch (e) {\n        return true; // Something went wrong while parsing.\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n#header {\n  margin: 1vh;\n  text-align: left;\n}\ntextarea {\n  border-color: white;\n  border-width: 0;\n  padding: 0 0 0 2vh;\n  font-family: monospace;\n  resize: none;\n  height: 100%;\n  width: 100%;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DataTextView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DataTextView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DataTextView.vue?vue&type=template&id=cab1047c&scoped=true&\"\nimport script from \"./DataTextView.vue?vue&type=script&lang=js&\"\nexport * from \"./DataTextView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./DataTextView.vue?vue&type=style&index=0&id=cab1047c&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"cab1047c\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <portal-target name=\"semantic-ui-vue\"></portal-target>\n    <nav-bar></nav-bar>\n\n    <multipane id=\"multipane\" layout=\"vertical\">\n      <div id=\"dataTextView\" class=\"text-panel\">\n        <data-text-view :height=\"getHeight()\"></data-text-view>\n      </div>\n      <multipane-resizer id=\"resizer\"></multipane-resizer>\n      <div id=\"editorContainer\" class=\"fill-height\">\n        <editor></editor>\n      </div>\n    </multipane>\n  </div>\n</template>\n<script>\nimport { Multipane, MultipaneResizer } from \"vue-multipane\";\nimport NavBar from \"./components/NavBar.vue\";\nimport Editor from \"./components/Editor.vue\";\nimport DataTextView from \"./components/DataTextView.vue\";\nimport { MARGIN_TOP } from \"./config/konvaConfigs\";\n\nexport default {\n  name: \"App\",\n  components: {\n    NavBar,\n    Editor,\n    Multipane,\n    MultipaneResizer,\n    DataTextView\n  },\n  methods: {\n    /**\n     * Determine the available height for the data text view.\n     * @returns {number} the available height.\n     */\n    getHeight() {\n      return window.innerHeight - MARGIN_TOP;\n    }\n  }\n};\n\n/* Require approval before closing the page. */\nwindow.onbeforeunload = function() {\n  return \"Are you sure you want to quit without saving? Any unsaved progress will be lost.\";\n};\n</script>\n\n<style lang=\"scss\">\n#app {\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n#resizer {\n  width: 3px;\n  min-width: 3px;\n  height: 100%;\n  padding-bottom: 95vh;\n  margin-left: -5px;\n  margin-right: 5px;\n  background: black;\n}\n#editorContainer {\n  min-width: 100px;\n}\n\n.text-panel {\n  width: 30vw;\n  min-width: 250px;\n  max-width: 70vw;\n}\n.fill-height {\n  height: 100%;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=29fe3a92&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","const shacl = [\n  {\n    \"@id\": \"_:b0\",\n    \"https://www.w3.org/ns/shacl#prefix\": [\n      {\n        \"@value\": \"sh\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#namespace\": [\n      {\n        \"@value\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#\",\n    \"@type\": [\"https://www.w3.org/2002/07/owl#Ontology\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"W3C Shapes Constraint Language (SHACL) Vocabulary\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"This vocabulary defines terms used in SHACL, the W3C Shapes Constraint Language.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#declare\": [\n      {\n        \"@id\": \"_:b0\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#suggestedShapesGraph\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl-shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#AbstractResult\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Abstract result\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The base class of validation results, typically not instantiated directly.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#AndConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"And constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to test whether a value node conforms to all members of a provided list of shapes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#AndConstraintComponent-and\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#AndConstraintComponent-and\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#and\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#BlankNode\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#NodeKind\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Blank node\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The node kind of all blank nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#BlankNodeOrIRI\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#NodeKind\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Blank node or IRI\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The node kind of all blank nodes or IRIs.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#BlankNodeOrLiteral\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#NodeKind\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Blank node or literal\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The node kind of all blank nodes or literals.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#ClassConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Class constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to verify that each value node is an instance of a given type.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#ClassConstraintComponent-class\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#ClassConstraintComponent-class\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#class\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#nodeKind\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#IRI\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#ClosedConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Closed constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to indicate that focus nodes must only have values for those properties that have been explicitly enumerated via sh:property/sh:path.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#ClosedConstraintComponent-closed\"\n      },\n      {\n        \"@id\":\n          \"https://www.w3.org/ns/shacl#ClosedConstraintComponent-ignoredProperties\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#ClosedConstraintComponent-closed\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#closed\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#datatype\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#boolean\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\":\n      \"https://www.w3.org/ns/shacl#ClosedConstraintComponent-ignoredProperties\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#ignoredProperties\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#optional\": [\n      {\n        \"@value\": \"true\",\n        \"@type\": \"https://www.w3.org/2001/XMLSchema#boolean\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#ConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The class of constraint components.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Parameterizable\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#DatatypeConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Datatype constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to restrict the datatype of all value nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#DatatypeConstraintComponent-datatype\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#DatatypeConstraintComponent-datatype\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#datatype\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#nodeKind\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#IRI\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#maxCount\": [\n      {\n        \"@value\": \"1\",\n        \"@type\": \"https://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#DisjointConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Disjoint constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to verify that the set of value nodes is disjoint with the the set of nodes that have the focus node as subject and the value of a given property as predicate.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#DisjointConstraintComponent-disjoint\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#DisjointConstraintComponent-disjoint\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#disjoint\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#nodeKind\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#IRI\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#EqualsConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Equals constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to verify that the set of value nodes is equal to the set of nodes that have the focus node as subject and the value of a given property as predicate.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#EqualsConstraintComponent-equals\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#EqualsConstraintComponent-equals\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#equals\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#nodeKind\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#IRI\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#ExpressionConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Expression constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to verify that a given node expression produces true for all value nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\":\n          \"https://www.w3.org/ns/shacl#ExpressionConstraintComponent-expression\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\":\n      \"https://www.w3.org/ns/shacl#ExpressionConstraintComponent-expression\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#expression\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#Function\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Function\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The class of SHACL functions.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Parameterizable\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#HasValueConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Has-value constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to verify that one of the value nodes is a given RDF node.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#HasValueConstraintComponent-hasValue\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#HasValueConstraintComponent-hasValue\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#hasValue\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#IRI\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#NodeKind\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"IRI\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The node kind of all IRIs.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#IRIOrLiteral\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#NodeKind\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"IRI or literal\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The node kind of all IRIs or literals.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#InConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"In constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to exclusively enumerate the permitted value nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#InConstraintComponent-in\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#InConstraintComponent-in\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#in\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#maxCount\": [\n      {\n        \"@value\": \"1\",\n        \"@type\": \"https://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#Info\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Severity\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Info\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The severity for an informational validation result.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#JSConstraint\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"JavaScript-based constraint\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The class of constraints backed by a JavaScript function.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#JSExecutable\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#JSConstraint-js\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#js\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#JSConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"JavaScript constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component with the parameter sh:js linking to a sh:JSConstraint containing a sh:script.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#JSConstraint-js\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#JSExecutable\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"JavaScript executable\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Abstract base class of resources that declare an executable JavaScript.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#JSFunction\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"JavaScript function\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The class of SHACL functions that execute a JavaScript function when called.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Function\"\n      },\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#JSExecutable\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#JSLibrary\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"JavaScript library\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Represents a JavaScript library, typically identified by one or more URLs of files to include.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#JSRule\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"JavaScript rule\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The class of SHACL rules expressed using JavaScript.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#JSExecutable\"\n      },\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Rule\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#JSTarget\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"JavaScript target\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The class of targets that are based on JavaScript functions.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Target\"\n      },\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#JSExecutable\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#JSTargetType\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"JavaScript target type\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The (meta) class for parameterizable targets that are based on JavaScript functions.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#TargetType\"\n      },\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#JSExecutable\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#JSValidator\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"JavaScript validator\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A SHACL validator based on JavaScript. This can be used to declare SHACL constraint components that perform JavaScript-based validation when used.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#JSExecutable\"\n      },\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Validator\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#LanguageInConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Language-in constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to enumerate language tags that all value nodes must have.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\":\n          \"https://www.w3.org/ns/shacl#LanguageInConstraintComponent-languageIn\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\":\n      \"https://www.w3.org/ns/shacl#LanguageInConstraintComponent-languageIn\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#languageIn\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#maxCount\": [\n      {\n        \"@value\": \"1\",\n        \"@type\": \"https://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#LessThanConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Less-than constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to verify that each value node is smaller than all the nodes that have the focus node as subject and the value of a given property as predicate.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#LessThanConstraintComponent-lessThan\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#LessThanConstraintComponent-lessThan\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#lessThan\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#nodeKind\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#IRI\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#LessThanOrEqualsConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"less-than-or-equals constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to verify that every value node is smaller than all the nodes that have the focus node as subject and the value of a given property as predicate.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\":\n          \"https://www.w3.org/ns/shacl#LessThanOrEqualsConstraintComponent-lessThanOrEquals\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\":\n      \"https://www.w3.org/ns/shacl#LessThanOrEqualsConstraintComponent-lessThanOrEquals\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#lessThanOrEquals\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#nodeKind\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#IRI\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#Literal\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#NodeKind\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Literal\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The node kind of all literals.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#MaxCountConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Max-count constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to restrict the maximum number of value nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#MaxCountConstraintComponent-maxCount\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#MaxCountConstraintComponent-maxCount\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#maxCount\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#datatype\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#maxCount\": [\n      {\n        \"@value\": \"1\",\n        \"@type\": \"https://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#MaxExclusiveConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Max-exclusive constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to restrict the range of value nodes with a maximum exclusive value.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\":\n          \"https://www.w3.org/ns/shacl#MaxExclusiveConstraintComponent-maxExclusive\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\":\n      \"https://www.w3.org/ns/shacl#MaxExclusiveConstraintComponent-maxExclusive\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#maxExclusive\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#maxCount\": [\n      {\n        \"@value\": \"1\",\n        \"@type\": \"https://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#nodeKind\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Literal\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#MaxInclusiveConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Max-inclusive constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to restrict the range of value nodes with a maximum inclusive value.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\":\n          \"https://www.w3.org/ns/shacl#MaxInclusiveConstraintComponent-maxInclusive\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\":\n      \"https://www.w3.org/ns/shacl#MaxInclusiveConstraintComponent-maxInclusive\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#maxInclusive\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#maxCount\": [\n      {\n        \"@value\": \"1\",\n        \"@type\": \"https://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#nodeKind\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Literal\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#MaxLengthConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Max-length constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to restrict the maximum string length of value nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\":\n          \"https://www.w3.org/ns/shacl#MaxLengthConstraintComponent-maxLength\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#MaxLengthConstraintComponent-maxLength\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#maxLength\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#datatype\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#maxCount\": [\n      {\n        \"@value\": \"1\",\n        \"@type\": \"https://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#MinCountConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Min-count constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to restrict the minimum number of value nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#MinCountConstraintComponent-minCount\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#MinCountConstraintComponent-minCount\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#minCount\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#datatype\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#maxCount\": [\n      {\n        \"@value\": \"1\",\n        \"@type\": \"https://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#MinExclusiveConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Min-exclusive constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to restrict the range of value nodes with a minimum exclusive value.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\":\n          \"https://www.w3.org/ns/shacl#MinExclusiveConstraintComponent-minExclusive\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\":\n      \"https://www.w3.org/ns/shacl#MinExclusiveConstraintComponent-minExclusive\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#minExclusive\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#maxCount\": [\n      {\n        \"@value\": \"1\",\n        \"@type\": \"https://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#nodeKind\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Literal\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#MinInclusiveConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Min-inclusive constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to restrict the range of value nodes with a minimum inclusive value.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\":\n          \"https://www.w3.org/ns/shacl#MinInclusiveConstraintComponent-minInclusive\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\":\n      \"https://www.w3.org/ns/shacl#MinInclusiveConstraintComponent-minInclusive\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#minInclusive\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#maxCount\": [\n      {\n        \"@value\": \"1\",\n        \"@type\": \"https://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#nodeKind\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Literal\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#MinLengthConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Min-length constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to restrict the minimum string length of value nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\":\n          \"https://www.w3.org/ns/shacl#MinLengthConstraintComponent-minLength\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#MinLengthConstraintComponent-minLength\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#minLength\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#datatype\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#maxCount\": [\n      {\n        \"@value\": \"1\",\n        \"@type\": \"https://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#NodeConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Node constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to verify that all value nodes conform to the given node shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#NodeConstraintComponent-node\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#NodeConstraintComponent-node\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#node\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#NodeKind\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Node kind\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The class of all node kinds, including sh:BlankNode, sh:IRI, sh:Literal or the combinations of these: sh:BlankNodeOrIRI, sh:BlankNodeOrLiteral, sh:IRIOrLiteral.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#NodeKindConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Node-kind constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to restrict the RDF node kind of each value node.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#NodeKindConstraintComponent-nodeKind\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#NodeKindConstraintComponent-nodeKind\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#nodeKind\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#in\": [\n      {\n        \"@list\": [\n          {\n            \"@id\": \"https://www.w3.org/ns/shacl#BlankNode\"\n          },\n          {\n            \"@id\": \"https://www.w3.org/ns/shacl#IRI\"\n          },\n          {\n            \"@id\": \"https://www.w3.org/ns/shacl#Literal\"\n          },\n          {\n            \"@id\": \"https://www.w3.org/ns/shacl#BlankNodeOrIRI\"\n          },\n          {\n            \"@id\": \"https://www.w3.org/ns/shacl#BlankNodeOrLiteral\"\n          },\n          {\n            \"@id\": \"https://www.w3.org/ns/shacl#IRIOrLiteral\"\n          }\n        ]\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#maxCount\": [\n      {\n        \"@value\": \"1\",\n        \"@type\": \"https://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#NodeShape\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Node shape\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A node shape is a shape that specifies constraint that need to be met with respect to focus nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Shape\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#NotConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Not constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to verify that value nodes do not conform to a given shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#NotConstraintComponent-not\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#NotConstraintComponent-not\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#not\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#OrConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Or constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to restrict the value nodes so that they conform to at least one out of several provided shapes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#OrConstraintComponent-or\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#OrConstraintComponent-or\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#or\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#Parameter\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Parameter\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The class of parameter declarations, consisting of a path predicate and (possibly) information about allowed value type, cardinality and other characteristics.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#PropertyShape\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#Parameterizable\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Parameterizable\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Superclass of components that can take parameters, especially functions and constraint components.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#PatternConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Pattern constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to verify that every value node matches a given regular expression.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#PatternConstraintComponent-pattern\"\n      },\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#PatternConstraintComponent-flags\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#PatternConstraintComponent-flags\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#flags\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#datatype\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#string\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#optional\": [\n      {\n        \"@value\": \"true\",\n        \"@type\": \"https://www.w3.org/2001/XMLSchema#boolean\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#PatternConstraintComponent-pattern\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#pattern\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#datatype\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#string\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#PrefixDeclaration\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Prefix declaration\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The class of prefix declarations, consisting of pairs of a prefix with a namespace.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#PropertyConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Property constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to verify that all value nodes conform to the given property shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#PropertyConstraintComponent-property\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#PropertyConstraintComponent-property\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#property\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#PropertyGroup\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Property group\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Instances of this class represent groups of property shapes that belong together.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#PropertyShape\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Property shape\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A property shape is a shape that specifies constraints on the values of a focus node for a given property or path.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Shape\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#QualifiedMaxCountConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Qualified-max-count constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to verify that a specified maximum number of value nodes conforms to a given shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\":\n          \"https://www.w3.org/ns/shacl#QualifiedMaxCountConstraintComponent-qualifiedMaxCount\"\n      },\n      {\n        \"@id\":\n          \"https://www.w3.org/ns/shacl#QualifiedMaxCountConstraintComponent-qualifiedValueShape\"\n      },\n      {\n        \"@id\":\n          \"https://www.w3.org/ns/shacl#QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\":\n      \"https://www.w3.org/ns/shacl#QualifiedMaxCountConstraintComponent-qualifiedMaxCount\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#qualifiedMaxCount\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#datatype\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\":\n      \"https://www.w3.org/ns/shacl#QualifiedMaxCountConstraintComponent-qualifiedValueShape\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#qualifiedValueShape\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\":\n      \"https://www.w3.org/ns/shacl#QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#qualifiedValueShapesDisjoint\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#datatype\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#boolean\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#optional\": [\n      {\n        \"@value\": \"true\",\n        \"@type\": \"https://www.w3.org/2001/XMLSchema#boolean\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#QualifiedMinCountConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Qualified-min-count constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to verify that a specified minimum number of value nodes conforms to a given shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\":\n          \"https://www.w3.org/ns/shacl#QualifiedMinCountConstraintComponent-qualifiedMinCount\"\n      },\n      {\n        \"@id\":\n          \"https://www.w3.org/ns/shacl#QualifiedMinCountConstraintComponent-qualifiedValueShape\"\n      },\n      {\n        \"@id\":\n          \"https://www.w3.org/ns/shacl#QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\":\n      \"https://www.w3.org/ns/shacl#QualifiedMinCountConstraintComponent-qualifiedMinCount\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#qualifiedMinCount\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#datatype\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\":\n      \"https://www.w3.org/ns/shacl#QualifiedMinCountConstraintComponent-qualifiedValueShape\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#qualifiedValueShape\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\":\n      \"https://www.w3.org/ns/shacl#QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#qualifiedValueShapesDisjoint\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#datatype\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#boolean\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#optional\": [\n      {\n        \"@value\": \"true\",\n        \"@type\": \"https://www.w3.org/2001/XMLSchema#boolean\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#ResultAnnotation\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Result annotation\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A class of result annotations, which define the rules to derive the values of a given annotation property as extra values for a validation result.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#Rule\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Rule\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The class of SHACL rules. Never instantiated directly.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#SPARQLAskExecutable\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"SPARQL ASK executable\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The class of SPARQL executables that are based on an ASK query.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#SPARQLExecutable\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#SPARQLAskValidator\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"SPARQL ASK validator\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The class of validators based on SPARQL ASK queries. The queries are evaluated for each value node and are supposed to return true if the given node conforms.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Validator\"\n      },\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#SPARQLAskExecutable\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#SPARQLConstraint\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"SPARQL constraint\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The class of constraints based on SPARQL SELECT queries.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#SPARQLSelectExecutable\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#SPARQLConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"SPARQL constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to define constraints based on SPARQL queries.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#SPARQLConstraintComponent-sparql\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#SPARQLConstraintComponent-sparql\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#sparql\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#SPARQLConstructExecutable\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"SPARQL CONSTRUCT executable\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The class of SPARQL executables that are based on a CONSTRUCT query.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#SPARQLExecutable\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#SPARQLExecutable\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"SPARQL executable\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The class of resources that encapsulate a SPARQL query.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#SPARQLFunction\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"SPARQL function\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"A function backed by a SPARQL query - either ASK or SELECT.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Function\"\n      },\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#SPARQLAskExecutable\"\n      },\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#SPARQLSelectExecutable\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#SPARQLRule\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"SPARQL CONSTRUCT rule\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The class of SHACL rules based on SPARQL CONSTRUCT queries.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Rule\"\n      },\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#SPARQLConstructExecutable\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#SPARQLSelectExecutable\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"SPARQL SELECT executable\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The class of SPARQL executables based on a SELECT query.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#SPARQLExecutable\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#SPARQLSelectValidator\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"SPARQL SELECT validator\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The class of validators based on SPARQL SELECT queries. The queries are evaluated for each focus node and are supposed to produce bindings for all focus nodes that do not conform.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Validator\"\n      },\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#SPARQLSelectExecutable\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#SPARQLTarget\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"SPARQL target\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The class of targets that are based on SPARQL queries.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Target\"\n      },\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#SPARQLAskExecutable\"\n      },\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#SPARQLSelectExecutable\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#SPARQLTargetType\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"SPARQL target type\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The (meta) class for parameterizable targets that are based on SPARQL queries.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#TargetType\"\n      },\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#SPARQLAskExecutable\"\n      },\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#SPARQLSelectExecutable\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#SPARQLUpdateExecutable\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"SPARQL UPDATE executable\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The class of SPARQL executables based on a SPARQL UPDATE.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#SPARQLExecutable\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#Severity\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Severity\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The class of validation result severity levels, including violation and warning levels.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#Shape\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Shape\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A shape is a collection of constraints that may be targeted for certain nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#Target\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Target\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The base class of targets such as those based on SPARQL queries.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#TargetType\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Target type\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The (meta) class for parameterizable targets.\\tInstances of this are instantiated as values of the sh:target property.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/2000/01/rdf-schema#Class\"\n      },\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Parameterizable\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#TripleRule\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\":\n          \"A rule based on triple (subject, predicate, object) pattern.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Rule\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#UniqueLangConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Unique-languages constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to specify that no pair of value nodes may use the same language tag.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\":\n          \"https://www.w3.org/ns/shacl#UniqueLangConstraintComponent-uniqueLang\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\":\n      \"https://www.w3.org/ns/shacl#UniqueLangConstraintComponent-uniqueLang\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#uniqueLang\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#datatype\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#boolean\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#maxCount\": [\n      {\n        \"@value\": \"1\",\n        \"@type\": \"https://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#ValidationReport\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Validation report\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The class of SHACL validation reports.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#ValidationResult\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Validation result\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The class of validation results.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#AbstractResult\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#Validator\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Class\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Validator\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The class of validators, which provide instructions on how to process a constraint definition. This class serves as base class for the SPARQL-based validators and other possible implementations.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#subClassOf\": [\n      {\n        \"@id\": \"https://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#Violation\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Severity\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Violation\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The severity for a violation validation result.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#Warning\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Severity\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Warning\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The severity for a warning validation result.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#XoneConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#ConstraintComponent\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"Exactly one constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A constraint component that can be used to restrict the value nodes so that they conform to exactly one out of several provided shapes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/ns/shacl#parameter\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#XoneConstraintComponent-xone\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#XoneConstraintComponent-xone\",\n    \"@type\": [\"https://www.w3.org/ns/shacl#Parameter\"],\n    \"https://www.w3.org/ns/shacl#path\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#xone\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#alternativePath\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"alternative path\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The (single) value of this property must be a list of path elements, representing the elements of alternative paths.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/1999/02/22-rdf-syntax-ns#List\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#and\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"and\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"RDF list of shapes to validate the value nodes against.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/1999/02/22-rdf-syntax-ns#List\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#annotationProperty\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"annotation property\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The annotation property that shall be set.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#ResultAnnotation\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#annotationValue\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"annotation value\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The (default) values of the annotation property.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#ResultAnnotation\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#annotationVarName\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"annotation variable name\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The name of the SPARQL variable from the SELECT clause that shall be used for the values.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#ResultAnnotation\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#string\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#ask\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"ask\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The SPARQL ASK query to execute.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#SPARQLAskExecutable\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#string\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#class\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"class\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The type that all value nodes must have.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2000/01/rdf-schema#Class\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#closed\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"closed\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"If set to true then the shape is closed.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#boolean\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#condition\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"condition\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The shapes that the focus nodes need to conform to before a rule is executed on them.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Rule\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Shape\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#conforms\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"conforms\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"True if the validation did not produce any validation results, and false otherwise.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#ValidationReport\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#boolean\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#construct\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"construct\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The SPARQL CONSTRUCT query to execute.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#SPARQLConstructExecutable\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#string\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#datatype\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"datatype\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"Specifies an RDF datatype that all value nodes must have.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2000/01/rdf-schema#Datatype\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#deactivated\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"deactivated\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"If set to true then all nodes conform to this.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#boolean\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#declare\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"declare\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"Links a resource with its namespace prefix declarations.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/2002/07/owl#Ontology\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#PrefixDeclaration\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#defaultValue\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"default value\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A default value for a property, for example for user interface tools to pre-populate input fields.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#PropertyShape\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#description\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"description\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Human-readable descriptions for the property in the context of the surrounding shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#PropertyShape\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#detail\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"detail\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Links a result with other results that provide more details, for example to describe violations against nested shapes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#AbstractResult\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#AbstractResult\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#disjoint\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"disjoint\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Specifies a property where the set of values must be disjoint with the value nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#entailment\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"entailment\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"An entailment regime that indicates what kind of inferencing is required by a shapes graph.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/2002/07/owl#Ontology\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#equals\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"equals\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Specifies a property that must have the same values as the value nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#expression\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"expression\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The node expression that must return true for the value nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#filterShape\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"filter shape\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The shape that all input nodes of the expression need to conform to.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Shape\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#flags\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"flags\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"An optional flag to be used with regular expression pattern matching.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#string\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#focusNode\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"focus node\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The focus node that was validated when the result was produced.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#AbstractResult\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#group\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"group\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Can be used to link to a property group to indicate that a property shape belongs to a group of related property shapes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#PropertyShape\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#PropertyGroup\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#hasValue\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"has value\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"Specifies a value that must be among the value nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#ignoredProperties\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"ignored properties\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"An optional RDF list of properties that are also permitted in addition to those explicitly enumerated via sh:property/sh:path.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/1999/02/22-rdf-syntax-ns#List\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#in\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"in\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Specifies a list of allowed values so that each value node must be among the members of the given list.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/1999/02/22-rdf-syntax-ns#List\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#intersection\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"intersection\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"A list of node expressions that shall be intersected.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#inversePath\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"inverse path\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The (single) value of this property represents an inverse path (object to subject).\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#js\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"JavaScript constraint\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"Constraints expressed in JavaScript.\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#JSConstraint\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#jsFunctionName\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"JavaScript function name\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The name of the JavaScript function to execute.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#JSExecutable\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#string\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#jsLibrary\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"JavaScript library\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Declares which JavaScript libraries are needed to execute this.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#JSLibrary\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#jsLibraryURL\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"JavaScript library URL\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Declares the URLs of a JavaScript library. This should be the absolute URL of a JavaScript file. Implementations may redirect those to local files.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#JSLibrary\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#anyURI\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#labelTemplate\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"label template\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Outlines how human-readable labels of instances of the associated Parameterizable shall be produced. The values can contain {?paramName} as placeholders for the actual values of the given parameter.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Parameterizable\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#languageIn\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"language in\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Specifies a list of language tags that all value nodes must have.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/1999/02/22-rdf-syntax-ns#List\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#lessThan\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"less than\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Specifies a property that must have smaller values than the value nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#lessThanOrEquals\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"less than or equals\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Specifies a property that must have smaller or equal values than the value nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#maxCount\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"max count\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Specifies the maximum number of values in the set of value nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#maxExclusive\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"max exclusive\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"Specifies the maximum exclusive value of each value node.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#maxInclusive\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"max inclusive\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"Specifies the maximum inclusive value of each value node.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#maxLength\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"max length\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"Specifies the maximum string length of each value node.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#message\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"message\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"A human-readable message (possibly with placeholders for variables) explaining the cause of the result.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#minCount\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"min count\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Specifies the minimum number of values in the set of value nodes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#minExclusive\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"min exclusive\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"Specifies the minimum exclusive value of each value node.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#minInclusive\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"min inclusive\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"Specifies the minimum inclusive value of each value node.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#minLength\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"min length\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"Specifies the minimum string length of each value node.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#name\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"name\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Human-readable labels for the property in the context of the surrounding shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#PropertyShape\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#namespace\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"namespace\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The namespace associated with a prefix in a prefix declaration.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#PrefixDeclaration\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#anyURI\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#node\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"node\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Specifies the node shape that all value nodes must conform to.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#NodeShape\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#nodeKind\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"node kind\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Specifies the node kind (e.g. IRI or literal) each value node.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#NodeKind\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#nodeValidator\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"shape validator\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The validator(s) used to evaluate a constraint in the context of a node shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#ConstraintComponent\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Validator\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#nodes\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"nodes\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The node expression producing the input nodes of a filter shape expression.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#not\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"not\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"Specifies a shape that the value nodes must not conform to.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Shape\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#object\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"object\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"An expression producing the nodes that shall be inferred as objects.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#TripleRule\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#oneOrMorePath\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"one or more path\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The (single) value of this property represents a path that is matched one or more times.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#optional\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"optional\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"Indicates whether a parameter is optional.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Parameter\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#boolean\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#or\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"or\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Specifies a list of shapes so that the value nodes must conform to at least one of the shapes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/1999/02/22-rdf-syntax-ns#List\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#order\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"order\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Specifies the relative order of this compared to its siblings. For example use 0 for the first, 1 for the second.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#parameter\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"parameter\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The parameters of a function or constraint component.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Parameterizable\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Parameter\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#path\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"path\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"Specifies the property path of a property shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#PropertyShape\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#pattern\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"pattern\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Specifies a regular expression pattern that the string representations of the value nodes must match.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#string\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#predicate\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"predicate\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"An expression producing the properties that shall be inferred as predicates.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#TripleRule\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#prefix\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"prefix\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The prefix of a prefix declaration.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#PrefixDeclaration\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#string\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#prefixes\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"prefixes\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The prefixes that shall be applied before parsing the associated SPARQL query.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#SPARQLExecutable\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2002/07/owl#Ontology\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#property\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"property\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"Links a shape to its property shapes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Shape\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#PropertyShape\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#propertyValidator\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"property validator\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The validator(s) used to evaluate a constraint in the context of a property shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#ConstraintComponent\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Validator\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#qualifiedMaxCount\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"qualified max count\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The maximum number of value nodes that can conform to the shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#qualifiedMinCount\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"qualified min count\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The minimum number of value nodes that must conform to the shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#integer\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#qualifiedValueShape\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"qualified value shape\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The shape that a specified number of values must conform to.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Shape\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#qualifiedValueShapesDisjoint\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"qualified value shapes disjoint\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Can be used to mark the qualified value shape to be disjoint with its sibling shapes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#boolean\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#result\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"result\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The validation results contained in a validation report.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#ValidationReport\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#ValidationResult\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#resultAnnotation\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"result annotation\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Links a SPARQL validator with zero or more sh:ResultAnnotation instances, defining how to derive additional result properties based on the variables of the SELECT query.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#SPARQLSelectValidator\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#ResultAnnotation\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#resultMessage\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"result message\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"Human-readable messages explaining the cause of the result.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#AbstractResult\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#resultPath\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"result path\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The path of a validation result, based on the path of the validated property shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#AbstractResult\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#resultSeverity\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"result severity\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The severity of the result, e.g. warning.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#AbstractResult\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Severity\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#returnType\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"return type\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The expected type of values returned by the associated function.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Function\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2000/01/rdf-schema#Class\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#rule\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"rule\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The rules linked to a shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Shape\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Rule\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#select\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"select\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The SPARQL SELECT query to execute.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#string\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#SPARQLSelectExecutable\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#severity\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"severity\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Defines the severity that validation results produced by a shape must have. Defaults to sh:Violation.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Shape\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Severity\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#shapesGraph\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"shapes graph\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Shapes graphs that should be used when validating this data graph.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/2002/07/owl#Ontology\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2002/07/owl#Ontology\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#shapesGraphWellFormed\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"shapes graph well-formed\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"If true then the validation engine was certain that the shapes graph has passed all SHACL syntax requirements during the validation process.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#ValidationReport\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#boolean\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#sourceConstraint\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"source constraint\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The constraint that was validated when the result was produced.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#AbstractResult\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#sourceConstraintComponent\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"source constraint component\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The constraint component that is the source of the result.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#AbstractResult\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#ConstraintComponent\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#sourceShape\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"source shape\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The shape that is was validated when the result was produced.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#AbstractResult\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Shape\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#sparql\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"constraint (in SPARQL)\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"Links a shape with SPARQL constraints.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Shape\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#SPARQLConstraint\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#subject\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"subject\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"An expression producing the resources that shall be inferred as subjects.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#TripleRule\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#suggestedShapesGraph\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"suggested shapes graph\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Suggested shapes graphs for this ontology. The values of this property may be used in the absence of specific sh:shapesGraph statements.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/2002/07/owl#Ontology\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2002/07/owl#Ontology\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#target\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"target\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Links a shape to a target specified by an extension language, for example instances of sh:SPARQLTarget.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Shape\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Target\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#targetClass\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"target class\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Links a shape to a class, indicating that all instances of the class must conform to the shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Shape\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2000/01/rdf-schema#Class\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#targetNode\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"target node\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Links a shape to individual nodes, indicating that these nodes must conform to the shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Shape\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#targetObjectsOf\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"target objects of\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Links a shape to a property, indicating that all all objects of triples that have the given property as their predicate must conform to the shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Shape\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#targetSubjectsOf\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"target subjects of\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Links a shape to a property, indicating that all subjects of triples that have the given property as their predicate must conform to the shape.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Shape\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#this\",\n    \"@type\": [\"https://www.w3.org/2000/01/rdf-schema#Resource\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"this\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"A node expression that represents the current focus node.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#union\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"union\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"A list of node expressions that shall be used together.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#uniqueLang\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"unique languages\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Specifies whether all node values must have a unique (or no) language tag.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#boolean\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#update\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"update\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"The SPARQL UPDATE to execute.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#SPARQLUpdateExecutable\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2001/XMLSchema#string\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#validator\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"validator\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The validator(s) used to evaluate constraints of either node or property shapes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#ConstraintComponent\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#Validator\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#value\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"value\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\": \"An RDF node that has caused the result.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#domain\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#AbstractResult\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#xone\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"exactly one\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"Specifies a list of shapes so that the value nodes must conform to exactly one of the shapes.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/1999/02/22-rdf-syntax-ns#List\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#zeroOrMorePath\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"zero or more path\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The (single) value of this property represents a path that is matched zero or more times.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  },\n  {\n    \"@id\": \"https://www.w3.org/ns/shacl#zeroOrOnePath\",\n    \"@type\": [\"https://www.w3.org/1999/02/22-rdf-syntax-ns#Property\"],\n    \"https://www.w3.org/2000/01/rdf-schema#label\": [\n      {\n        \"@value\": \"zero or one path\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#comment\": [\n      {\n        \"@value\":\n          \"The (single) value of this property represents a path that is matched zero or one times.\",\n        \"@language\": \"en\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#range\": [\n      {\n        \"@id\": \"https://www.w3.org/2000/01/rdf-schema#Resource\"\n      }\n    ],\n    \"https://www.w3.org/2000/01/rdf-schema#isDefinedBy\": [\n      {\n        \"@id\": \"https://www.w3.org/ns/shacl#\"\n      }\n    ]\n  }\n];\n\nexport { shacl as default };\n","import shacl from \"./shacl\";\nimport { TERM } from \"../../translation/terminology\";\nimport SHACLTranslator from \"../../translation/shaclTranslator\";\n\n/** Dictionary with distinct Types\n {\n  Ontology: 'https://www.w3.org/2002/07/owl#Ontology',\n  Class: 'https://www.w3.org/2000/01/rdf-schema#Class',\n  ConstraintComponent: 'https://www.w3.org/ns/shacl#ConstraintComponent',\n  Parameter: 'https://www.w3.org/ns/shacl#Parameter',\n  NodeKind: 'https://www.w3.org/ns/shacl#NodeKind',\n  Severity: 'https://www.w3.org/ns/shacl#Severity',\n  Property: 'https://www.w3.org/1999/02/22-rdf-syntax-ns#Property',\n  Resource: 'https://www.w3.org/2000/01/rdf-schema#Resource'\n}\n */\nconst Types = listDistinctTypes(shacl);\n\n/** Gathering information from SHACL.js */\nconst Shape = \"https://www.w3.org/ns/shacl#Shape\";\nconst NodeShape = \"https://www.w3.org/ns/shacl#NodeShape\";\nconst PropertyShape = \"https://www.w3.org/ns/shacl#PropertyShape\";\n\n/* Add all concepts to the dictionary. */\nlet Dictionary = {};\nshacl.forEach(obj => {\n  Dictionary[obj[\"@id\"]] = [];\n});\n\n/* Add predicates of shapes via rdfs:domain. */\nconst ShapeFields = findPredicatesWithSubject(shacl, Shape).map(\n  obj => obj[\"@id\"]\n);\nDictionary[NodeShape].push(...ShapeFields);\nconst PropertyShapeFields = ShapeFields.concat(\n  findPredicatesWithSubject(shacl, PropertyShape).map(obj => obj[\"@id\"])\n);\nDictionary[PropertyShape].push(...PropertyShapeFields);\n\n/* Add constraints of shapes and remove double entries */\nconst Constraints = findObjectsWithType(shacl, Types.Parameter).map(\n  obj => obj[\"https://www.w3.org/ns/shacl#path\"][0][\"@id\"]\n);\n\n// FIXME Not every constraint is applicable to a NodeShape or a PropertyShape\nDictionary[NodeShape].push(...Constraints);\nDictionary[NodeShape] = removeDuplicates(Dictionary[NodeShape]);\nDictionary[PropertyShape].push(...Constraints);\nDictionary[PropertyShape] = removeDuplicates(Dictionary[PropertyShape]);\n\n/* Add possible values for predicates. */\nDictionary[PropertyShape].forEach(predicate => {\n  const range = findObjectWithId(shacl, predicate)[\n    \"https://www.w3.org/2000/01/rdf-schema#range\"\n  ];\n  Dictionary[predicate].push(\n    range ? range[0][\"@id\"] : \"https://www.w3.org/2000/01/rdf-schema#Resource\"\n  );\n});\n\n/* Translate to internal terminology. */\nDictionary = SHACLTranslator.toModel(Dictionary);\n\n/* FUNCTIONS TO GATHER INFORMATION FROM SHACL.JS ==================================================================== */\n\n/**\n * Returns first object with a matching `@id` from document.\n * @param {[object]} doc array with objects that have an `@id`.\n * @param {string} id the given URI we want to match.\n * @returns {any} the first object that matches.\n */\nfunction findObjectWithId(doc, id) {\n  return doc.filter(object => object[\"@id\"] === id)[0];\n}\n\n/**\n * Returns array with all objects that have a certain type.\n * @param {[object]} doc array with objects.\n * @param {string} type the type we want to match.\n * @returns {[object]} all objects that have the given type.\n */\nfunction findObjectsWithType(doc, type) {\n  return doc.filter(object => object[\"@type\"] && object[\"@type\"][0] === type);\n}\n\n/**\n * Uses rdfs:domain to find predicates that have a specified subject.\n * @param {[object]} doc array with objects.\n * @param {string} subject the subject we want to match.\n * @returns {[object]} all objects that match the given subject.\n */\nfunction findPredicatesWithSubject(doc, subject) {\n  return doc.filter(obj => {\n    const domain = obj[\"https://www.w3.org/2000/01/rdf-schema#domain\"];\n    return domain && domain[0][\"@id\"] === subject;\n  });\n}\n\n/**\n * Returns object with all distinct types such as rdfs:class and shacl:ConstraintComponent\n * NOTE: The term for each type is used as key so duplicate terms WILL override eachother\n * @param {[object]} doc array with objects.\n * @returns {object} an object with the distinct types.\n */\nfunction listDistinctTypes(doc) {\n  const types = {};\n  doc.forEach(object => {\n    if (object[\"@type\"]) {\n      const uri = object[\"@type\"][0];\n      const term = uri.substring(uri.lastIndexOf(\"#\") + 1, uri.length);\n      types[term] = uri;\n    }\n  });\n  return types;\n}\n\n/**\n * Removes duplicate entries from array of strings.\n * @param {[string]} array an array of strings.\n * @returns {[string]} the input array with duplicates removed.\n */\nfunction removeDuplicates(array) {\n  const dictionary = array.reduce((dict, entry) => {\n    dict[entry] = true;\n    return dict;\n  }, {});\n  return Object.keys(dictionary);\n}\n\n/* EXPORTED FUNCTIONS TO USE ======================================================================================== */\n\n/**\n * Checks whether URI is of a class.\n * @param {string} uri the URI we want to check.\n * @returns {boolean} true if class.\n */\nexport function isClass(uri) {\n  const character = uri.substring(\n    uri.lastIndexOf(\"#\") + 1,\n    uri.lastIndexOf(\"#\") + 2\n  );\n  return character === character.toUpperCase();\n}\n\n/**\n * Checks whether the URI is of a predicate.\n * @param {string} uri the URI we want to check.\n * @returns {boolean} true if predicate\n */\nexport function isPredicate(uri) {\n  return !isClass(uri);\n}\n\n/**\n * Check whether the URI is known in the dictionary.\n * @param {string} uri the URI we want to check.\n * @returns {boolean} true if the URI is found in the dictionary.\n */\nexport function isInDictionary(uri) {\n  return Dictionary[uri] !== undefined;\n}\n\n/**\n * Returns array of possible entries for a list with the given predicate.\n * @param {string} predicate the predicate we want to check.\n * @returns {[Object]} an array with possible values for the list.\n */\nexport function listValues(predicate) {\n  // The (single) value of this property must be a list of path elements, representing the elements of alternative paths.\n  if (predicate === TERM.alternativePath) {\n    return null; // TODO\n  }\n  // RDF list of shapes to validate the value nodes against.\n  if (predicate === TERM.and) {\n    return null; // TODO List of all existing Shape instance id's\n  }\n  // An optional RDF list of properties that are also permitted in addition to those explicitly enumerated via sh:property/sh:path.\n  if (predicate === TERM.ignoredProperties) {\n    return null; // TODO\n  }\n  // Specifies a list of allowed values so that each value node must be among the members of the given list.\n  if (predicate === TERM.in) {\n    return null; // TODO\n  }\n  // Specifies a list of language tags that all value nodes must have.\n  if (predicate === TERM.languageIn) {\n    return null; // TODO\n  }\n  // Specifies a list of shapes so that the value nodes must conform to at least one of the shapes.\n  if (predicate === TERM.or) {\n    return null; // TODO\n  }\n  // Specifies a list of shapes so that the value nodes must conform to exactly one of the shapes.\n  if (predicate === TERM.xone) {\n    return null; // TODO\n  }\n}\n\n/**\n * Returns URI's of all possible predicates for given subject.\n * @param {string} subject the subject we want to get the predicates of.\n * @returns {[string]} array of URIs of all the predicates for the given subject.\n */\nexport function possiblePredicates(subject) {\n  return Dictionary[subject];\n}\n\n/**\n * Returns URI's of all possible objects for given predicate.\n * @param {string} predicate the predicate we want to get the objects of.\n * @returns {[string]} array of URIs of all the objects for the given predicate.\n */\nexport function possibleObjects(predicate) {\n  return Dictionary[predicate];\n}\n","import ShaclTranslator from \"./shaclTranslator\";\nimport language from \"../util/enums/languages\";\n/**\n * The TranslatorManager assigns translation tasks to the correct translator.\n */\nexport default class TranslatorManager {\n  /**\n   * Translates from a constraint language to internal used model\n   * @param {any} doc Document in JSON-LD\n   * @param {string} lang Language e.g. SHACL or ShEx\n   * @returns {any}\n   */\n  static translateToModel(doc, lang) {\n    switch (lang) {\n      case language.SHACL:\n        return ShaclTranslator.toModel(doc);\n      case language.SHEX:\n        console.log(\"SHEX IS NOT YET SUPPORTED\");\n        break;\n      default:\n        console.log(\"UNSUPPORTED CONSTRAINT LANGUAGE\");\n    }\n  }\n\n  /**\n   * Translates from internal used model to a constraint language\n   * @param {any} doc Model in JSON-LD\n   * @param {string} lang Language e.g. SHACL or ShEx\n   * @returns {any}\n   */\n  static translateToLanguage(doc, lang) {\n    switch (lang) {\n      case language.SHACL:\n        return ShaclTranslator.toSHACL(doc);\n      case language.SHEX:\n        console.log(\"SHEX IS NOT YET SUPPORTED\");\n        break;\n      default:\n        console.log(\"UNSUPPORTED CONSTRAINT LANGUAGE\");\n    }\n  }\n}\n","import Vue from \"vue\";\n\n/**\n * This module contains all the state data related to the predicate modal.\n * @type {{mutations: {selectRow(*=, {key: string}): void, togglePredicateModal(*=, {shapeID: string, shapeType: string, editing: boolean, onExit: string, selected: string, input: string}): void, resetPredicateModal(*=): void, sortPredicateModal(*, {sorted: boolean, sortBy: string, ascending: boolean}): void}, state: {shapeType: string, input: string, shapeID: string, onExit: *, sorting: {sorted: boolean, sortBy: string, ascending: boolean}, show: boolean, selected: string, object: string, editing: boolean}}}\n */\nconst predicateModalModule = {\n  state: {\n    show: false,\n    shapeID: \"\",\n    shapeType: \"\",\n    input: \"\",\n    object: \"\",\n    editing: false,\n    onExit: undefined,\n    selected: \"\",\n    sorting: {\n      sorted: true,\n      sortBy: \"predicate\",\n      ascending: true\n    }\n  },\n\n  mutations: {\n    /**\n     * Toggle the visibility of the predicate modal.\n     * @param state\n     * @param {string} shapeID the ID of the shape.\n     * @param {string} shapeType the type of the shape.\n     * @param {boolean} editing indicates if we are editing a predicate.\n     * @param {string} onExit the action that should be dispatched when the modal is confirmed.\n     * @param {string} selected the prefix of the predicate that is currently selected.\n     * @param {string} input the search term that is currently entered.\n     */\n    togglePredicateModal(\n      state,\n      { shapeID, shapeType, editing, onExit, selected, input }\n    ) {\n      Vue.set(state, \"show\", !state.show);\n      Vue.set(state, \"shapeID\", shapeID || \"\");\n      Vue.set(state, \"shapeType\", shapeType || \"\");\n      Vue.set(state, \"editing\", editing || false);\n      Vue.set(state, \"input\", input || \"\");\n      Vue.set(state, \"onExit\", onExit || \"\");\n      Vue.set(state, \"selected\", selected || \"\");\n      Vue.set(state, \"sorting\", {\n        sorted: true,\n        sortBy: \"predicate\",\n        ascending: true\n      });\n    },\n\n    /**\n     * Set the sorting of the table in the predicate modal.\n     * @param state\n     * @param {boolean} sorted indicates if the modal is sorted.\n     * @param {string} sortBy the column the modal is sorted on.\n     * @param {boolean} ascending indicates if the column is sorted alphabetically.\n     */\n    sortPredicateModal(state, { sorted, sortBy, ascending }) {\n      Vue.set(state.sorting, \"sorted\", sorted);\n      Vue.set(state.sorting, \"sortBy\", sortBy);\n      Vue.set(state.sorting, \"ascending\", ascending);\n    },\n\n    /**\n     * Select the row with the given key (constraint ID).\n     * If the row was already selected, then deselect it.\n     * @param state\n     * @param {string} key the key of the row that is selected.\n     */\n    selectRow(state, { key }) {\n      const selected = state.selected === key ? \"\" : key;\n      Vue.set(state, \"selected\", selected);\n    },\n\n    /**\n     * Reset the properties of the predicate modal.\n     * @param state\n     */\n    resetPredicateModal(state) {\n      Vue.set(state, \"show\", false);\n      Vue.set(state, \"shapeID\", \"\");\n      Vue.set(state, \"shapeType\", \"\");\n      Vue.set(state, \"input\", \"\");\n      Vue.set(state, \"object\", \"\");\n      Vue.set(state, \"editing\", false);\n      Vue.set(state, \"onExit\", undefined);\n      Vue.set(state, \"sorting\", {\n        sorted: true,\n        sortBy: \"predicate\",\n        ascending: true\n      });\n    }\n  }\n};\n\nexport { predicateModalModule as default };\n","import { clone } from \"ramda\";\nimport Vue from \"vue\";\nimport { TERM } from \"../translation/terminology\";\nimport { prefixToUri } from \"../util/urlParser\";\nimport getValueType, {\n  getValueTypeFromConstraint,\n  ValueTypes\n} from \"../util/enums/ValueType\";\nimport { IGNORED_PROPERTIES } from \"../util/constants\";\nimport predicateModalModule from \"./modals/predicateModalModule\";\n\n/**\n * This module contains everything to change the shape constraints.\n * @type {{mutations: {setConstraintValue(*, {shape: Object, constraintID: string, value: Object}): void, deleteConstraintFromShape(*, {shape: Object, constraintID?: *}): void}, state: {constraintIndex: number}, getters: {shapeConstraints: (function(*, *, *, *): Function), shapeProperties: (function(*, *, *): function(*): []), shapeIDConstraints: (function(*, *, *, *): function(*=))}, actions: {startConstraintEdit({state: *, commit: *}, {shapeID: string, shapeType: string, constraintID: string, index: number, value: string}): void, updateConstraint({rootGetters: *, commit: *}, {shapeID: string, constraintID: string, newValue: Object}): void, addPredicate({state: *, getters: *, commit: *, dispatch: *, rootState: *}, {shapeID: string, predicate: string, valueType: string, input: string, object: string, language: string}): void, deleteConstraintValueWithIndex({getters: *, commit: *, rootState: *}, {shapeID: string, constraintID: string, valueIndex: number}): void, stopConstraintEdit({state: *, rootGetters: *}, {shapeID: string, predicate: string, object: string, valueType: string, input: string}): void, deleteConstraintValue({getters: *, commit: *, rootState: *}, {shapeID: string, constraintID: string, value: string}): void, deleteConstraintFromShapeWithID({getters: *, commit: *, rootState: *}, {shapeID: string, constraintID: *}): void}, modules: {mModal: *}}}\n */\nconst constraintModule = {\n  state: {\n    constraintIndex: 0\n  },\n  modules: {\n    mModal: predicateModalModule\n  },\n\n  mutations: {\n    /**\n     * Set the value of the constraint with the given ID to the given value.\n     * @param state\n     * @param {object} shape the shape object that has to be updated.\n     * @param {string} constraintID the ID of the constraint that should be updated.\n     * @param {object} value the new value of the given constraint.\n     */\n    setConstraintValue(state, { shape, constraintID, value }) {\n      Vue.set(shape, constraintID, value);\n    },\n\n    /**\n     * Delete the given constraint from the given shape object.\n     * @param state\n     * @param {object} shape the shape object that should be updated.\n     * @param {string} constraint the ID of the constraint that should be deleted.\n     */\n    deleteConstraintFromShape(state, { shape, constraintID }) {\n      Vue.delete(shape, constraintID);\n    }\n  },\n\n  actions: {\n    /* ADD ========================================================================================================== */\n\n    /**\n     * Add a constraint with the given values to the given shape.\n     * @param state\n     * @param getters\n     * @param commit\n     * @param dispatch\n     * @param rootState\n     * @param {string} shapeID the IRI of the shape we want to add the predicate to.\n     * @param {string} predicate the predicate we want to add.\n     * @param {string} valueType the value type of this predicate.\n     * @param {string} input the desired value of this constraint.\n     * @param {string} inputType the type of the input.\n     * @param {string} language the language tag of the input value.\n     */\n    addPredicate(\n      { state, getters, commit, dispatch, rootState },\n      { shapeID, predicate, valueType, input, inputType, language }\n    ) {\n      const shape = getters.shapeWithID(shapeID);\n      const isID = valueType.includes(ValueTypes.ID);\n      const isList = valueType.includes(ValueTypes.LIST);\n      let duplicate = false;\n\n      if (shape[predicate]) {\n        const iter = isList ? shape[predicate][0][\"@list\"] : shape[predicate];\n        /* Check if this new value is a duplicate. */\n        const key = isID ? \"@id\" : \"@value\";\n        for (const j in iter) {\n          if (iter[j][key] === input) duplicate = true;\n        }\n      } else {\n        /* Create an empty list to add to if necessary. */\n        shape[predicate] = [];\n        if (isList) shape[predicate].push({ \"@list\": [] });\n      }\n\n      /* Don't add the value if it is a duplicate. */\n      if (!duplicate) {\n        /* Create the object we want to add. */\n        let value = isID\n          ? { \"@id\": input }\n          : { \"@type\": inputType, \"@value\": input };\n        if (language) {\n          value[\"@language\"] = language;\n          Vue.delete(value, \"@type\");\n        }\n\n        /* Add a property shape if needed. */\n        if (predicate === TERM.property && !getters.shapeWithID(input)) {\n          dispatch(\"addPropertyShape\", { path: input });\n          value = rootState.mShape.model[rootState.mShape.model.length - 1]; // Update the constraint value.\n        }\n\n        // TODO take multiple languages into account\n        if (valueType === \"type\") {\n          /* If there can only be one value, replace the existing value. */\n          Vue.set(shape[predicate], 0, value);\n        } else {\n          /* Otherwise, determine which list we want to add the predicate to. */\n          const list = isList ? shape[predicate][0][\"@list\"] : shape[predicate];\n          list.push(value);\n        }\n\n        /* Add the predicate to the shape. */\n        commit(\"updateShape\", {\n          shapeID,\n          value: rootState.mShape.model[shapeID]\n        });\n\n        /* Update the y values. */\n        commit(\n          \"updateYValues\",\n          { shapeID, shapes: rootState.mShape.model },\n          { root: true }\n        );\n      }\n\n      /* Close the predicate modal if needed. */\n      if (state.mModal.show) commit(\"togglePredicateModal\", {});\n    },\n\n    /* EDIT ========================================================================================================= */\n\n    /**\n     * Prepare and toggle the predicate modal.\n     * @param state\n     * @param commit\n     * @param {string} shapeID the ID of the shape we want to update.\n     * @param {string} shapeType the type of the shape we want to update.\n     * @param {string} constraintID the ID of the constraint we want to edit.\n     * @param {number} index the index of the constraint value we want to edit.\n     * @param {string} value the current value of the constraint value.\n     */\n    startConstraintEdit(\n      { state, commit },\n      { shapeID, shapeType, constraintID, index, value }\n    ) {\n      state.constraintIndex = index;\n      commit(\"togglePredicateModal\", {\n        shapeID,\n        shapeType,\n        editing: true,\n        input: value,\n        onExit: \"stopConstraintEdit\",\n        selected: constraintID\n      });\n    },\n\n    /**\n     * Get the values from the predicate model and execute the edit.\n     * @param state\n     * @param commit\n     * @param dispatch\n     * @param rootGetters\n     * @param {string} shapeID the ID of the shape we are editing.\n     * @param {string} constraintID the ID of the constraint we are editing.\n     * @param {string} valueType the value type of the constraint.\n     * @param {string} input the input entered by the user.\n     * @param {string} inputType the type of the input\n     */\n    stopConstraintEdit(\n      { state, dispatch, rootGetters },\n      { shapeID, predicate: constraintID, valueType, input, inputType }\n    ) {\n      /* Update the modal state. */\n      Vue.set(state.mModal, \"show\", false);\n      Vue.set(state.mModal, \"editing\", false);\n      const i = state.constraintIndex;\n      if (typeof input === \"boolean\") input = input.toString();\n\n      /* Clone the original constraint and get the value we want to update. */\n      const updated = clone(rootGetters.shapeWithID(shapeID)[constraintID]);\n      const iter = valueType.includes(ValueTypes.LIST)\n        ? updated[0][\"@list\"]\n        : updated;\n\n      /* Create a new value object. */\n      let newValue;\n      let name;\n      if (constraintID === TERM.path) {\n        newValue = { \"@id\": input };\n      } else if (valueType.includes(ValueTypes.ID)) {\n        newValue = {\n          \"@id\": prefixToUri(rootGetters.namespaces, input)\n        };\n      } else {\n        newValue = {\n          \"@type\": inputType,\n          \"@value\": prefixToUri(rootGetters.namespaces, input)\n        };\n      }\n\n      /* Check if this new value is a duplicate. */\n      let duplicate = false;\n      const key = valueType.includes(ValueTypes.ID) ? \"@id\" : \"@value\";\n      for (let j in iter) {\n        j = Number(j);\n        if (i !== j && iter[j][key] === name) duplicate = true;\n      }\n\n      /* Update this value in the original constraint object. */\n      // `iter` is a reference to the array we have to modify.\n      if (duplicate) {\n        /* Delete the duplicate if there is one. */\n        iter.splice(i, 1);\n      } else {\n        iter[i] = newValue;\n      }\n\n      /* Dispatch the action to update the constraint with the updated value. */\n      const args = {\n        shapeID,\n        constraintID,\n        newValue: updated\n      };\n      dispatch(\"updateConstraint\", args);\n    },\n\n    /**\n     * Update the constraint value of the given shape.\n     * @param rootGetters\n     * @param commit\n     * @param rootState\n     * @param {string} shapeID the ID of the shape.\n     * @param {string} constraintID the ID of the constraint we want to update.\n     * @param {object} newValue the new value of the given constraint.\n     */\n    updateConstraint(\n      { rootGetters, commit },\n      { shapeID, constraintID, newValue }\n    ) {\n      commit(\"setConstraintValue\", {\n        shape: rootGetters.shapeWithID(shapeID),\n        constraintID,\n        value: newValue\n      });\n    },\n\n    /* DELETE ======================================================================================================= */\n\n    /**\n     * Delete the given constraint from the given shape.\n     * @param store\n     * @param {string} shapeID the ID of the shape from which the constraint should be removed.\n     * @param {string} constraint the ID of the constraint that should be removed.\n     */\n    deleteConstraintFromShapeWithID(\n      { getters, commit, rootState },\n      { shapeID, constraintID }\n    ) {\n      const shape = getters.shapeWithID(shapeID);\n      commit(\"deleteConstraintFromShape\", { shape, constraintID });\n      commit(\"updateYValues\", { shapeID, shapes: rootState.mShape.model });\n    },\n\n    /**\n     * Delete the constraint value at the given index.\n     * If the constraint value has a '@list' object,\n     *   the constraint with the given index will be removed from that object.\n     * @param getters\n     * @param commit\n     * @param rootState\n     * @param {string} shapeID the ID of the shape we want to update.\n     * @param {string} constraintID the ID of the constraint we want to edit.\n     * @param {number} valueIndex the index of the constraint value we want to delete.\n     */\n    deleteConstraintValueWithIndex(\n      { getters, commit, rootState },\n      { shapeID, constraintID, valueIndex }\n    ) {\n      const constraint = getters.shapeWithID(shapeID)[constraintID];\n\n      /* If the value is a list, then remove from that list instead of directly from the constraint. */\n      const iter = getValueType(constraintID).includes(ValueTypes.LIST)\n        ? constraint[0][\"@list\"]\n        : constraint;\n\n      commit(\"removeElementFromList\", { list: iter, index: valueIndex });\n\n      /* Delete the constraint from the shape if there are no values left. */\n      if (iter.length === 0) {\n        // Updating the y values should happen last, so insert this mutation on the second to last place.\n        const shape = getters.shapeWithID(shapeID);\n        commit(\"deleteConstraintFromShape\", { shape, constraintID });\n        commit(\"updateYValues\", { shapeID, shapes: rootState.mShape.model });\n      }\n\n      /* Execute the updating of the y values. */\n      commit(\"updateYValues\", { shapeID, shapes: rootState.mShape.model });\n    },\n\n    /**\n     * Delete the given constraint.\n     * If the constraint value has a '@list' object,\n     *   the constraint with the given index will be removed from that object.\n     * @param getters\n     * @param commit\n     * @param rootState\n     * @param {string} shapeID the ID of the shape we want to edit.\n     * @param {string} constraintID the ID of the constraint we want to edit.\n     * @param {string} value the constraint value we want to delete.\n     */\n    deleteConstraintValue(\n      { getters, commit, rootState },\n      { shapeID, constraintID, value }\n    ) {\n      const constraint = getters.shapeWithID(shapeID)[constraintID];\n\n      /* If the value is a list, then remove from that list instead of directly. */\n      const iter = getValueType(constraintID).includes(ValueTypes.LIST)\n        ? constraint[0][\"@list\"]\n        : constraint;\n\n      /* Check every value of the list. */\n      for (const i in iter) {\n        const val = iter[i];\n        if (val[\"@id\"] === value || val[\"@value\"] === value || val === value) {\n          /* Delete this value from the list if it is the value we want to remove. */\n          commit(\"removeElementFromList\", { list: iter, index: i });\n        }\n      }\n\n      /* Delete the constraint from the shape if there are no values left. */\n      if (iter.length === 0) {\n        const shape = getters.shapeWithID(shapeID);\n        commit(\"deleteConstraintFromShape\", { shape, constraintID });\n        commit(\"updateYValues\", { shapeID, shapes: rootState.mShape.model });\n      }\n\n      /* Update the y values. */\n      commit(\"updateYValues\", { shapeID, shapes: rootState.mShape.model });\n    }\n  },\n\n  getters: {\n    /**\n     * Get a list of property ID's for the shape with the given ID.\n     * ShapeID {string} the ID of the shape whose properties we want to get.\n     * @param state\n     * @param getters\n     * @returns {function}\n     */\n    shapeProperties: (state, getters) => shapeID => {\n      const shape = getters.shapeWithID(shapeID);\n      const propertyObjects = shape[TERM.property];\n      const properties = [];\n\n      if (propertyObjects) {\n        /* Get the references to property shapes. */\n        for (const p of propertyObjects) {\n          properties.push(p[\"@id\"]);\n        }\n        /* Get the other properties. */\n        const ignored = [\"@id\", \"@type\", TERM.property, TERM.targetNode];\n        for (const p in shape) {\n          if (!ignored.includes(p)) properties.push(p[0][\"@id\"]);\n        }\n      }\n      return properties;\n    },\n\n    /**\n     * Get a map of the constraints of the shape with the given ID.\n     * ShapeID {string} the ID of the shape whose constraints we want to get.\n     * @param _state\n     * @param _getters\n     * @param _rootState\n     * @param rootGetters\n     * @returns {function}\n     */\n    shapeConstraints: (\n      _state,\n      _getters,\n      _rootState,\n      rootGetters\n    ) => shapeID => {\n      const constraints = {};\n      const shape = rootGetters.shapeWithID(shapeID);\n\n      if (shape) {\n        for (const prop in shape) {\n          /* Only handle the constraints that are not ignored. */\n          if (!IGNORED_PROPERTIES.includes(prop)) {\n            if (shape[prop].length > 1) {\n              /* Get the ID of every element in the list. */\n              const properties = [];\n              Object.values(shape[prop]).map(p => properties.push(p[\"@id\"]));\n              constraints[prop] = properties;\n            } else {\n              constraints[prop] = shape[prop];\n            }\n          }\n        }\n        return constraints;\n      } else {\n        return undefined;\n      }\n    },\n\n    /**\n     * Get the constraints that have existing shape IDs as values.\n     * This will return a dictionary that maps every constraint IDs to a list of shape IDs.\n     * ShapeID {string} the ID of the shape whose ID constraints we want to get.\n     * @param _state\n     * @param getters\n     * @param _rootState\n     * @param rootGetters\n     * @returns {function}\n     */\n    shapeIDConstraints: (\n      _state,\n      getters,\n      _rootState,\n      rootGetters\n    ) => shapeID => {\n      const output = {};\n\n      /* Check every constraint of the given shape. */\n      const constraints = getters.shapeConstraints(shapeID);\n      for (const c of Object.keys(constraints)) {\n        const vt = getValueType(c)\n          ? getValueType(c)\n          : getValueTypeFromConstraint(constraints[c]);\n        if (vt && vt.includes(ValueTypes.ID)) {\n          const values = [];\n          const iter =\n            constraints[c].length > 1\n              ? constraints[c]\n              : vt.includes(ValueTypes.LIST)\n              ? constraints[c][0][\"@list\"]\n              : constraints[c];\n\n          /* Check every constraint value. */\n          for (const value of iter) {\n            const id = value[\"@id\"] ? value[\"@id\"] : value;\n            /* Check if the value is an existing shape ID. */\n            if (rootGetters.shapeIDs.includes(id)) values.push(id);\n          }\n          /* Only push the constraints that do have some values. */\n          if (values.length > 0) output[c] = values;\n        }\n      }\n      return output;\n    }\n  }\n};\n\nexport { constraintModule as default };\n","import Vue from \"vue\";\nimport ValueType, {\n  getValueTypeFromConstraint,\n  ValueTypes\n} from \"../util/enums/ValueType\";\nimport { urlToName } from \"../util/urlParser\";\nimport { HEIGHT } from \"../config/konvaConfigs\";\nimport { IGNORED_PROPERTIES, SINGLE_ENTRY } from \"../util/constants\";\n\n/**\n * This module contains everything regarding coordinates, locations and positioning.\n * @type {{mutations: {updateYValues(*, {shapeID: string, shapes: string}): void, deleteShapeLocations(*, string): void, clearLocations(*): void, updateCoordinates(*, {shapeID: string, x: number, y: number}): void, updateLocations(*, {oldID: string, newID: string}): void}, state: {heights: {}, yValues: {}, coordinates: {}}, getters: {bottomYCoordinate: (function(*): function(*): *), allBottomYs: (function(*, *))}}}\n */\nconst coordinateModule = {\n  state: {\n    yValues: {},\n    coordinates: {},\n    heights: {}\n  },\n\n  mutations: {\n    /**\n     * Update the coordinates and values of the given shapeID.\n     * @param state\n     * @param {string} oldID the shapeID's old ID.\n     * @param {string} newID the shapeID's new ID.\n     */\n    updateLocations(state, { oldID, newID }) {\n      /* Update the coordinates of the shapes. */\n      Vue.set(state.coordinates, newID, state.coordinates[oldID]);\n      if (oldID !== newID) Vue.delete(state.coordinates, oldID);\n\n      /* Update the y values of the shapes' components. */\n      Vue.set(state.yValues, newID, state.yValues[oldID]);\n      if (oldID !== newID) Vue.delete(state.yValues, oldID);\n    },\n\n    /**\n     * Delete the coordinates and y values of the shapeID with the given ID.\n     * @param state\n     * @param {string} id the ID of the shape from which we want to delete the location data.\n     */\n    deleteShapeLocations(state, id) {\n      Vue.delete(state.coordinates, id);\n      Vue.delete(state.yValues, id);\n    },\n\n    /**\n     * Update the y values of the properties of the given shapeID.\n     * @param state\n     * @param {string} shapeID the ID of the shape we want to update the y values from.\n     * @param {string} shapes the list of shapes currently in the model.\n     */\n    updateYValues(state, { shapeID, shapes }) {\n      /* Update the y values of the properties. */\n      Vue.set(state.yValues, shapeID, {});\n\n      /* Get the shape with the given ID. */\n      let shape;\n      for (const item of shapes) {\n        if (item[\"@id\"] === shapeID) shape = item;\n      }\n\n      /* Get the IDs of all the constraints and the number of values for each constraint. */\n      const constraints = {};\n      for (const c in shape) {\n        if (!IGNORED_PROPERTIES.includes(c)) {\n          const vt = ValueType(c)\n            ? ValueType(c)\n            : getValueTypeFromConstraint(shape[c]);\n          constraints[c] =\n            shape[c].length > 1\n              ? shape[c].length\n              : vt.includes(ValueTypes.LIST)\n              ? shape[c][0][\"@list\"].length\n              : shape[c].length;\n        }\n      }\n\n      /* Calculate their y values. */\n      let i = 1;\n      for (const con of Object.keys(constraints)) {\n        Vue.set(state.yValues[shapeID], con, i * HEIGHT);\n        /* Determine if every value has to be on a separate line. */\n        i += SINGLE_ENTRY.includes(urlToName(con)) ? 2 : 1 + constraints[con];\n      }\n\n      /* Set the bottom coordinate. */\n      Vue.set(state.heights, shapeID, i * HEIGHT);\n    },\n\n    /**\n     * Update the coordinates of the given shapeID.\n     * @param state\n     * @param s{string} hapeID the ID of the shapeID whose location should be updated.\n     * @param {number} x the new x coordinate.\n     * @param {number} y the new y coordinate.\n     */\n    updateCoordinates(state, { shapeID, x, y }) {\n      Vue.set(state.coordinates, shapeID, { x, y });\n    },\n\n    /**\n     * Clear all the coordinates and y values.\n     * @param state\n     */\n    clearLocations(state) {\n      state.coordinates = {};\n      state.yValues = {};\n    }\n  },\n\n  getters: {\n    /**\n     * Get the absolute bottom y coordinate of the shapeID with the given ID.\n     * @param state\n     * @returns {function} getter\n     */\n    bottomYCoordinate: state => shapeID => {\n      return state.heights[shapeID] + state.coordinates[shapeID].y;\n    },\n\n    /**\n     * Get the absolute bottom y coordinates of all the shapes.\n     * @param state\n     * @param getters\n     */\n    allBottomYs: (state, getters) => {\n      const output = {};\n      for (const key of Object.keys(state.coordinates)) {\n        output[key] = getters.bottomYCoordinate(key);\n      }\n      return output;\n    }\n  }\n};\n\nexport { coordinateModule as default };\n","import Vue from \"vue\";\nimport constraintModule from \"./constraintModule\";\nimport { generateUUID, getNonOverlappingCoordinates } from \"../util\";\nimport coordinateModule from \"./coordinateModule\";\nimport { LABEL, SHACL_URI } from \"../util/constants\";\nimport { TERM } from \"../translation/terminology\";\nimport getValueType from \"../util/enums/ValueType\";\nimport ShaclTranslator from \"../translation/shaclTranslator\";\n\n/**\n * This module contains everything to modify the shapes.\n * @type {{mutations: {}, state: {}, getters: {}, actions: {}}}\n */\nconst shapeModule = {\n  state: {\n    model: [],\n    shapeModal: {\n      show: false,\n      id: \"\",\n      label: \"\",\n      labelLang: \"em\",\n      description: \"\",\n      descrLang: \"en\",\n      nodeShape: false\n    }\n  },\n\n  modules: {\n    mConstraint: constraintModule,\n    mCoordinate: coordinateModule\n  },\n\n  mutations: {\n    /**\n     * Clear all shapes and properties from the current state.\n     * @param state\n     */\n    clearModel(state) {\n      Vue.set(state, \"model\", []);\n      this.commit(\"clearLocations\");\n    },\n\n    /**\n     * Set the model to the given value.\n     * @param state\n     * @param {object} model the model we want to set.\n     * @param {object} getters the store's getters.\n     * @param rootState\n     */\n    setModel(state, { model, getters }) {\n      /* Parse the model if necessary. */\n      model = JSON.stringify(model).includes(SHACL_URI)\n        ? ShaclTranslator.toModelSimple(model)\n        : model;\n      model = JSON.parse(JSON.stringify(model));\n      Vue.set(state, \"model\", model);\n\n      /* Update y values and set coordinates. */\n      for (const shape of state.model) {\n        this.commit(\"updateYValues\", {\n          shapeID: shape[\"@id\"],\n          shapes: state.model\n        });\n        const { x, y } = getNonOverlappingCoordinates({\n          coordinates: state.mCoordinate.coordinates,\n          bottomYs: getters.allBottomYs,\n          heights: state.mCoordinate.heights\n        });\n        this.commit(\"updateCoordinates\", { shapeID: shape[\"@id\"], x, y });\n      }\n    },\n\n    /**\n     * Toggle the visibility of the node shape modal.\n     * @param state\n     * @param {string} id the ID of the shape we want to edit.\n     * @param {string} label the current label/name of the shape.\n     * @param {string} labelLang the language of the label/name.\n     * @param {string} description the current description of the shape.\n     * @param {string} descrLang the language of the description.\n     */\n    toggleEditShapeModal(\n      state,\n      { id, label, labelLang, description, descrLang }\n    ) {\n      event.preventDefault();\n      Vue.set(state, \"shapeModal\", {\n        id: id || \"\",\n        label: label || \"\",\n        labelLang: labelLang || \"en\",\n        description: description || \"\",\n        descrLang: descrLang || \"en\",\n        show: !state.shapeModal.show\n      });\n    },\n\n    /* ADD ========================================================================================================== */\n\n    /**\n     * Add the given shape to the state and set its coordinates to zero.\n     * @param state\n     * @param {object} shape the shape we want to add.\n     * @param {object} bottomYs all the current shape's bottom y coordinates.\n     */\n    addShape(state, { shape, bottomYs }) {\n      state.model.push(shape);\n      /* Determine the shape's coordinates. */\n      const { x, y } = getNonOverlappingCoordinates({\n        coordinates: state.mCoordinate.coordinates,\n        bottomYs,\n        heights: state.mCoordinate.heights\n      });\n      /* Set the shape's coordinates. */\n      Vue.set(state.mCoordinate.coordinates, shape[\"@id\"], { x, y });\n      this.commit(\"updateYValues\", {\n        shapeID: shape[\"@id\"],\n        shapes: state.model\n      });\n    },\n\n    /* EDIT ========================================================================================================= */\n\n    /**\n     * Update the shape's ID.\n     * @param state\n     * @param {number} index the index of the shape that should be updated.\n     * @param {string} newID the shape's new ID.\n     */\n    updateShapeID(state, { index, newID }) {\n      Vue.set(state.model[index], \"@id\", newID);\n    },\n\n    /**\n     * Update the value of the shape with the given ID to the given value.\n     * @param state\n     * @param {string} shapeID the ID of the shape we want to update.\n     * @param {object} value the new shape value.\n     */\n    updateShape(state, { shapeID, value }) {\n      Vue.set(state.model, shapeID, value);\n    },\n\n    /* DELETE ======================================================================================================= */\n\n    /**\n     * Delete the shape at the given index.\n     * @param state\n     * @param {number} index the index of the shape we want to delete.\n     */\n    deleteShapeAtIndex(state, index) {\n      Vue.delete(state.model, index);\n    },\n\n    /**\n     * Delete the property with the given ID from the given shape.\n     * @param state\n     * @param {object} shape the shape object from which the property should be removed.\n     * @param {string} propertyID the ID of the property that should be removed.\n     */\n    deletePropertyFromShape(state, { shape, propertyID }) {\n      const properties = shape[TERM.property];\n      let index = -1;\n\n      /* Determine the index of the property in the constraint. */\n      for (const p in properties) {\n        if ([properties[p], properties[p][\"@id\"]].includes(propertyID))\n          index = p;\n      }\n\n      if (index >= 0) {\n        /* Delete the constraint value corresponding to the property from the shape. */\n        this.dispatch(\"deleteConstraintValueWithIndex\", {\n          shapeID: shape[\"@id\"],\n          constraintID: TERM.property,\n          valueIndex: index\n        });\n      }\n    }\n  },\n\n  actions: {\n    /* ADD ========================================================================================================== */\n\n    /**\n     * Add an empty node shape with a generated UUID.\n     * @param store\n     */\n    addNodeShape({ commit, getters }) {\n      const shape = {\n        \"@id\": generateUUID(getters.baseURI),\n        \"@type\": [TERM.NodeShape]\n      };\n      commit(\"addShape\", { shape, bottomYs: getters.allBottomYs });\n    },\n\n    /**\n     * Add a new property shape with a generated UUID and a given path.\n     * @param store\n     * @param {string} path the new shape's path.\n     */\n    addPropertyShape({ commit, getters }, { path }) {\n      const shape = { \"@id\": generateUUID(getters.baseURI) };\n      shape[TERM.path] = [{ \"@id\": path }];\n      commit(\"addShape\", { shape, bottomYs: getters.allBottomYs });\n    },\n\n    /* EDIT ========================================================================================================= */\n\n    /**\n     * Edit the ID of a shape.\n     * This will update the constraint values of every node shape that contains this shape.\n     * @param store\n     * @param {string} oldID the original ID of the shape we want to edit.\n     * @param {string} newID the new ID for this shape.\n     */\n    editShape({ state, getters, commit, dispatch }, { oldID, newID }) {\n      /* Check if the new ID is different from the old ID to avoid unexpected errors. */\n      if (oldID !== newID) {\n        /* Update the shape's locations. */\n        commit(\"updateLocations\", { oldID, newID });\n\n        /* Update the state's shapes. */\n        const index = getters.indexWithID(oldID);\n        commit(\"updateShapeID\", { index, newID });\n\n        /* Check if another shape has a reference to this one. */\n        for (const shape of state.model) {\n          for (const predicate of Object.keys(shape)) {\n            const constraint = shape[predicate];\n            const valueType = getValueType(predicate);\n            if (valueType) {\n              // Determine which list we have to loop.\n              const iter =\n                constraint.length > 1\n                  ? constraint\n                  : valueType.includes(\"List\")\n                  ? constraint[0][\"@list\"]\n                  : constraint;\n\n              // Iterate over every element.\n              for (const elem of iter) {\n                const key = valueType.includes(\"id\") ? \"@id\" : \"@value\";\n                if (elem[key] === oldID) {\n                  /* Rename the reference if we find one. */\n                  dispatch(\"addPredicate\", {\n                    shapeID: shape[\"@id\"],\n                    predicate,\n                    valueType,\n                    input: newID\n                  });\n                  dispatch(\"deleteConstraintValue\", {\n                    shapeID: shape[\"@id\"],\n                    constraintID: predicate,\n                    value: oldID\n                  });\n                }\n              }\n            }\n          }\n        }\n        /* Update the y values of the properties. */\n        for (const shape of state.model) {\n          commit(\"updateYValues\", {\n            shapeID: shape[\"@id\"],\n            shapes: state.model\n          });\n        }\n      }\n    },\n\n    /* DELETE ======================================================================================================= */\n\n    /**\n     * Delete the node shape with the given ID.\n     * @param store\n     * @param {string} id the ID of the node shape that we want to delete.\n     */\n    deleteNodeShape({ getters, commit }, id) {\n      commit(\"deleteShapeAtIndex\", getters.indexWithID(id));\n      commit(\"deleteShapeLocations\", id);\n    },\n\n    /**\n     * Delete the property shape with the given id.\n     * @param store\n     * @param {string} id the ID of the property shape we want to delete.\n     */\n    deletePropertyShape({ state, getters, commit }, id) {\n      /* Check every nodeShape if it contains the given property. */\n      for (const shape of state.model) {\n        if (getters.shapeProperties(shape[\"@id\"]).includes(id)) {\n          commit(\"deletePropertyFromShape\", { shape, propertyID: id });\n        }\n      }\n      /* Remove the property from the state. */\n      commit(\"deleteShapeAtIndex\", getters.indexWithID(id));\n      commit(\"deleteShapeLocations\", id);\n    }\n  },\n\n  getters: {\n    /**\n     * Get a map of the shapes' IDs to their labels.\n     * @param state\n     * @param getters\n     */\n    labelsForIds: (state, getters) => {\n      const output = {};\n      const { shapes } = getters;\n      // Get the label of every shape.\n      for (const shapeID of Object.keys(shapes)) {\n        /* PropertyShapes have a name. */\n        const name = shapes[shapeID][TERM.name];\n        if (name) output[shapeID] = name[0][\"@value\"];\n\n        /* NodeShapes have a label. */\n        const label = shapes[shapeID][LABEL];\n        if (label) output[shapeID] = label[0][\"@value\"];\n      }\n      return output;\n    },\n\n    /**\n     * Returns a map of the shape ID's to their respective objects.\n     * @param state\n     */\n    shapes(state) {\n      const shapes = {};\n      for (const item of state.model) shapes[item[\"@id\"]] = item;\n      return shapes;\n    },\n\n    /**\n     * Returns a list of the shape IDs.\n     * @param state\n     * @param getters\n     */\n    shapeIDs(state, getters) {\n      return Object.keys(getters.shapes);\n    },\n\n    /**\n     * Get a dictionary mapping ID's to the respective node shape objects.\n     * @param state\n     */\n    nodeShapes(state) {\n      const nodeShapes = {};\n      for (const item of state.model) {\n        if (item[\"@type\"]) nodeShapes[item[\"@id\"]] = item;\n      }\n      return nodeShapes;\n    },\n\n    /**\n     * Get a dictionary mapping ID's to the respective property shape objects.\n     * @param state\n     */\n    propertyShapes(state) {\n      const propertyShapes = {};\n      for (const item of state.model) {\n        if (!item[\"@type\"]) propertyShapes[item[\"@id\"]] = item;\n      }\n      return propertyShapes;\n    },\n\n    /**\n     * Get a list of relationships.\n     * Every relationship object has a reference to its destination and source shape,\n     *   the ID of the constraint it represents\n     *   and an object that indicates what it should do when the relationship arrow is clicked.\n     * @param state\n     * @param getters\n     */\n    relationships: (state, getters) => {\n      const { shapes } = getters;\n      const output = [];\n\n      /* Check every shape. */\n      for (const shapeID of Object.keys(shapes)) {\n        const idConstraints = getters.shapeIDConstraints(shapeID);\n\n        /* Handle every constraint. */\n        for (const constraintID of Object.keys(idConstraints)) {\n          for (const idValue of idConstraints[constraintID]) {\n            /* Create an object to represent the relationship. */\n            output.push({\n              from: shapeID,\n              to: idValue,\n              constraintID,\n              onClick: { shapeID, constraintID, value: idValue }\n            });\n          }\n        }\n      }\n      return output;\n    },\n\n    /**\n     * Get the shape object with the given ID.\n     * @param state\n     * @returns {Object|null} the shape with the given ID, if there is one.\n     */\n    shapeWithID: state => id => {\n      for (const item of state.model) if (item[\"@id\"] === id) return item;\n      return null;\n    },\n\n    /**\n     * Get the index of the shape object with the given ID.\n     * @param state\n     * @returns {number} the index of the shape with the given ID; -1 if there is none.\n     */\n    indexWithID: state => id => {\n      for (const i in state.model) if (state.model[i][\"@id\"] === id) return i;\n      return -1;\n    }\n  }\n};\n\nexport { shapeModule as default };\n","export const ETF = {\n  ttl: \"text/turtle\",\n  n3: \"text/n3\",\n  json: \"application/ld+json\",\n  nq: \"application/n-quads\"\n};\n\nexport { ETF as default };\n","import * as N3 from \"n3\";\nimport jsonld from \"jsonld\";\n\n/**\n *  N3Parser can parse Turtle, TriG, N-Triples, N-Quads, and Notation3 (N3) to JSON-LD\n */\nexport default class N3Parser {\n  /**\n   * Takes a RDF document and its format type, returns the document as JSON-LD.\n   * @param {string} doc RDF document\n   * @param {string} type Format type e.g. \"text/turtle\" Accepted types include: Turtle, TriG, N-Triples, N-Quads, and Notation3\n   * @returns {Promise<Object>} Promise which resolves to JSON-LD Object\n   */\n  static parse(doc, type) {\n    return new Promise(resolve => {\n      const quads = [];\n      new N3.Parser({ format: type }).parse(doc, (error, quad) => {\n        if (quad) {\n          quads.push(quad);\n        } else {\n          const writer = new N3.Writer({ format: \"application/n-quads\" });\n          writer.addQuads(quads);\n          writer.end(async (error, nquads) => {\n            const doc = await jsonld.fromRDF(nquads, {\n              format: \"application/n-quads\"\n            });\n            // const blankNodes = super.removeBlankNodes(doc);\n            // super.traverse(doc, super.fillBlankNode, blankNodes);\n            resolve(doc);\n          });\n        }\n      });\n    });\n  }\n}\n","/**\n *  XMLParser class can parse RDF/XML to JSON-LD\n */\nexport default class XMLParser {\n  /**\n   * Takes a RDF document and its format type, returns the document as JSON-LD.\n   * @param {string} doc RDF document\n   * @param {string} type Format type e.g. \"application/rdf+xml\" Accepted types include: RDF/XML\n   * @returns {Promise<Object>} Promise which resolves to JSON-LD Object\n   */\n  static parse(doc, type) {\n    return new Promise(resolve => {\n      resolve({ doc, type }); // TODO: implement #parse(doc, type)\n    });\n  }\n}\n","import N3Parser from \"./n3Parser\";\nimport XMLParser from \"./xmlParser\";\n/**\n *  ParserManager retrieves the correct parser for the format of RDF (Turtle, RDF/XML, ...)\n */\nexport default class ParserManager {\n  /**\n   * Takes a RDF document and its format type, returns the document as JSON-LD.\n   * @param {string} doc RDF document\n   * @param {string} type Format type e.g. text/turtle\n   * @returns {Promise<Object>} Promise which resolves to JSON-LD Object\n   */\n  static parse(doc, type) {\n    switch (type.toLowerCase()) {\n      case \"text/n3\":\n      case \"text/turtle\":\n      case \"application/ld+json\":\n      case \"application/nquads\":\n      case \"application/n-quads\":\n        return N3Parser.parse(doc, type);\n      case \"application/rdf+xml\":\n        return XMLParser.parse(doc, type);\n      default:\n        console.log(`UNSUPPORTED FORMAT ${type}`);\n    }\n  }\n}\n","import { DataFactory } from \"n3\";\n\nconst { namedNode, literal, blankNode, defaultGraph } = DataFactory;\n\n/**\n * Resolves RDF JS Term\n * @param {object} term\n * @returns {any}\n */\nexport default function resolveRDFJSTerm(term) {\n  switch (term.termType) {\n    case \"NamedNode\":\n      return namedNode(term.value);\n    case \"BlankNode\":\n      return blankNode(term.value.substring(2));\n    case \"Literal\":\n      return literal(term.value, namedNode(term.datatype.value));\n    case \"DefaultGraph\":\n      return defaultGraph();\n    default:\n      throw new Error(`Unknown term type: ${term.termType}`);\n  }\n}\n","import { DataFactory, Writer as N3Writer } from \"n3\";\nimport * as jsonld from \"jsonld\";\nimport resolveRDFJSTerm from \"ResolveRDFJSTerm\";\n\nconst { quad } = DataFactory;\n\n/**\n *  N3Serializer class can serialize to Turtle, TriG, N-Triples, N-Quads, and Notation3 (N3)\n */\nexport default class N3Serializer {\n  /**\n   *\n   * @param {string} json JSON-LD representation\n   * @param {string} type Format to serialize to (Turtle, Trig, N-Triples, N-Quads, and Notation3 (N3))\n   * @returns {Promise<any>}\n   */\n  static serialize(json, type) {\n    return new Promise(async (resolve, reject) => {\n      const writer = new N3Writer({ format: type });\n      const quads = await jsonld.toRDF(json);\n      for (const i in quads) {\n        writer.addQuad(\n          quad(\n            resolveRDFJSTerm(quads[i].subject),\n            resolveRDFJSTerm(quads[i].predicate),\n            resolveRDFJSTerm(quads[i].object),\n            resolveRDFJSTerm(quads[i].graph)\n          )\n        );\n      }\n      writer.end((error, doc) => {\n        error ? reject(error) : resolve(doc);\n      });\n    });\n  }\n}\n","/**\n *  XMLSerializer class can serialize to RDF/XML\n */\nexport default class XMLSerializer {\n  /**\n   * Takes a JSON-LD document and desired format type, returns the document as format.\n   * @param {string} json JSON-LD representation\n   * @param {string} type Format to serialize to e.g. \"application/rdf+xml\" Accepted types include: RDF/XML\n   * @returns {Promise<String>} Promise which resolves to RDF/XML String\n   */\n  static serialize(json, type) {\n    return new Promise(resolve => {\n      console.log(\"XMLSerializer not yet implemented\");\n      resolve({ json, type }); // TODO: implement #serialize(json, type)\n    });\n  }\n}\n","import N3Serializer from \"./n3Serializer\";\nimport XMLSerializer from \"./xmlSerializer\";\n\n/**\n *  SerializerManager retrieves the correct serializer for the format of RDF (Turtle, RDF/XML, ...)\n */\nexport default class SerializerManager {\n  /**\n   * Takes a JSON-LD document and a desired format type, returns the document in given format type.\n   * @param {string} doc RDF document in JSON-LD\n   * @param {string} type Format type e.g. \"text/turtle\"\n   * @returns {Promise<Object>} Promise which resolves to RDF in given format type\n   */\n  static serialize(doc, type) {\n    switch (type) {\n      case \"text/n3\":\n      case \"text/turtle\":\n      case \"application/nquads\":\n      case \"application/n-quads\":\n      case \"application/ld+json\":\n        return N3Serializer.serialize(doc, type);\n      case \"application/rdf+xml\":\n        return XMLSerializer.serialize(doc, type);\n      default:\n        console.log(`UNSUPPORTED FORMAT ${type}`);\n    }\n  }\n}\n","const SHACLValidator = require(\"shacl-js\");\n\n/**\n * Validator class for SHACL.\n */\nexport default class ShaclValidator {\n  /**\n   * Validates SHACL data using shapes.\n   * @param data {string} data in turtle\n   * @param shapes {string} shapes in turtle\n   * @returns {Promise<Object>} Returns a promise which resolves to a SHACL report.\n   */\n  static validate(data, shapes) {\n    return new Promise((resolve, reject) => {\n      new SHACLValidator().validate(\n        data,\n        \"text/turtle\",\n        shapes,\n        \"text/turtle\",\n        (e, report) => {\n          e ? reject(e) : resolve(report);\n        }\n      );\n    });\n  }\n}\n","import ShaclValidator from \"./shaclValidator\";\nimport languages from \"../util/enums/languages\";\n\n/**\n * The ValidatorManager assigns validation tasks to the correct validator.\n */\nexport default class ValidatorManager {\n  /**\n   * TODO support multiple formats (ttl, n3, ...)\n   * @param data {object} data in Turtle.\n   * @param shapes {object} constraint shapes in Turtle.\n   * @param language {string} constraint language, e.g. SHACL.\n   * @returns {Promise<any>}\n   */\n  static validate(data, shapes, language) {\n    switch (language) {\n      case languages.SHACL:\n        return ShaclValidator.validate(data, shapes);\n      case languages.SHEX:\n        console.log(\"SHEX IS NOT YET SUPPORTED\");\n        break;\n      default:\n        console.log(`UNSUPPORTED CONSTRAINT LANGUAGE ${language}`);\n    }\n  }\n}\n","import Vue from \"vue\";\nimport { ETF } from \"../util/enums/extensionToFormat\";\nimport ParserManager from \"../parsing/parserManager\";\nimport SerializerManager from \"../parsing/serializerManager\";\nimport ValidatorManager from \"../validation/validatorManager\";\nimport language from \"../util/enums/languages\";\nimport { downloadFile } from \"../util\";\nimport ShaclTranslator from \"../translation/shaclTranslator\";\n\n/**\n * This module contains everything to handle data imports/exports and validation.\n * @type {{mutations: {}, state: {}, getters: {}, actions: {}}}\n */\nconst dataModule = {\n  state: {\n    format: language.SHACL,\n    dataFile: {},\n    dataFileName: String,\n    dataFileExtension: String,\n    dataText: \"\",\n    validationReport: {},\n    showValidationReportModal: false\n  },\n\n  mutations: {\n    /**\n     * Show the validation report modal.\n     * @param state\n     */\n    toggleValidationReport(state) {\n      event.preventDefault();\n      Vue.set(\n        state,\n        \"showValidationReportModal\",\n        !state.showValidationReportModal\n      );\n    },\n\n    /**\n     * Clear the data from the current state.\n     * @param state\n     */\n    clearData(state) {\n      Vue.set(state, \"dataFileName\", undefined);\n      Vue.set(state, \"dataFile\", {});\n      Vue.set(state, \"dataFileExtension\", undefined);\n      Vue.set(state, \"dataText\", \"\");\n    },\n\n    /**\n     * Set the data file to the given contents.\n     * @param state\n     * @param {string} name the name of the data file.\n     * @param {string} contents the contents of a read data file.\n     * @param {string} extension the extension of the data file.\n     * @param {string} data the data parsed from the given file.\n     */\n    setData(state, { name, contents, extension, data }) {\n      Vue.set(state, \"dataFileName\", name);\n      Vue.set(state, \"dataFile\", contents);\n      Vue.set(state, \"dataFileExtension\", extension);\n      Vue.set(state, \"dataText\", JSON.stringify(data, null, 2));\n    },\n\n    /**\n     * Set the given JSON data as the current data file.\n     * @param state\n     * @param {string} text the data in JSON format.\n     */\n    setJsonData(state, { text }) {\n      Vue.set(state, \"dataText\", text);\n      Vue.set(state, \"dataFileExtension\", \"json\");\n      Vue.set(state, \"dataFile\", text);\n    },\n\n    /**\n     * Parse the model to the expected format and validate the data file using these shapes.\n     * If there is no data file loaded, this will print an error.\n     * @param state\n     * @param {object} model the current model.\n     */\n    validateWithModel(state, model) {\n      /**\n       * Validate the given data using the given model in the given format.\n       * Use the generated report to show the validation report modal.\n       *\n       * Used to avoid code duplication.\n       * Does not work if placed outside `validateWithModel` due to the way the mutations work.\n       *\n       * @param state\n       * @param {object} data the data objects in Turtle.\n       * @param {object} shapes the shape objects in SHACL.\n       * @param {string} format the format of the data.\n       */\n      const validateData = function(state, data, shapes, format) {\n        ValidatorManager.validate(data, shapes, format)\n          .then(report => {\n            Vue.set(state, \"validationReport\", report);\n            Vue.set(state, \"showValidationReportModal\", true);\n          })\n          .catch(e => console.error(`Error while validating: ${e}`));\n      };\n\n      /* Check if there is data loaded. */\n      if (state.dataFile.length > 0) {\n        /* Serialize the model to SHACL. */\n        SerializerManager.serialize(\n          ShaclTranslator.toSHACLSimple(model),\n          ETF.ttl\n        )\n          .then(shapes => {\n            if (state.dataFileExtension === \"json\") {\n              /* Serialize the data to turtle. */\n              SerializerManager.serialize(\n                JSON.parse(state.dataFile),\n                ETF.ttl\n              ).then(data => validateData(state, data, shapes, state.format));\n            } else {\n              /* If the data is already in turtle format, go straight to validating. */\n              validateData(state, state.dataFile, shapes, state.format);\n            }\n          })\n          .catch(e => console.error(`Error while serializing: ${e}`));\n      } else {\n        /* Throw an error if there is no data to validate. */\n        console.error(\"No data file loaded.\");\n      }\n    }\n  },\n\n  actions: {\n    /**\n     * Receives a datafile and sends its contents to the parser.\n     * @param commit\n     * @param dispatch\n     * @param {any} file file containing data to check on.\n     * */\n    uploadDataFile({ commit, dispatch }, file) {\n      const reader = new FileReader();\n      reader.readAsText(file);\n\n      reader.onload = event => {\n        const args = {\n          name: file.name,\n          contents: event.target.result,\n          extension: file.name.split(\".\").pop()\n        };\n        dispatch(\"setDataFile\", args).then(newState =>\n          /* Save the state to undo later. */\n          commit(\"saveOperation\", {\n            state: newState,\n            action: { type: \"setDataFile\", args }\n          })\n        );\n      };\n    },\n\n    /**\n     * Parse the given data file and send its contents to the state\n     * @param commit\n     * @param rootState\n     * @param {string} name the name of the data file.\n     * @param {string} contents the contents of a read data file.\n     * @param {string} extension the extension of the data file.\n     */\n    setDataFile({ commit, rootState }, { name, contents, extension }) {\n      return new Promise((resolve, reject) => {\n        try {\n          if (extension.toLowerCase() === \"json\") {\n            alert(\"Importing JSON files is not yet supported.\");\n            throw new Error(\"Importing JSON files is not yet supported.\");\n          } else {\n            /* Parse the data from Turtle to JSON. */\n            ParserManager.parse(contents, ETF[extension]).then(data => {\n              commit(\"setData\", { name, contents, extension, data });\n              resolve(rootState);\n            });\n          }\n        } catch (e) {\n          reject(e);\n        }\n      });\n    },\n\n    /**\n     * Takes a file and reads the extension.\n     * Depending on the used format, it will use the correct parser to turn it into an internal model.\n     * @param {any} rootState\n     * @param {any} file the uploaded file\n     * */\n    uploadSchemaFile({ rootState }, file) {\n      const reader = new FileReader();\n      const fileExtension = file.name\n        .split(\".\")\n        .pop()\n        .toLowerCase();\n      const type = ETF[fileExtension];\n      const self = this;\n\n      if (fileExtension === \"json\") {\n        alert(\"Importing JSON files is not yet supported.\");\n        throw new Error(\"Importing JSON files is not yet supported.\");\n      } else {\n        reader.readAsText(file);\n        reader.onload = function(event) {\n          ParserManager.parse(event.target.result, type).then(e => {\n            self.dispatch(\"updateModel\", e);\n            /* Save the state to undo later. */\n            self.commit(\"saveOperation\", {\n              state: rootState,\n              action: { type: \"updateModel\", args: e }\n            });\n          });\n        };\n      }\n    },\n\n    /**\n     * Set the model to the given one.\n     * @param commit\n     * @param rootGetters\n     * @param rootState\n     * @param {array} model the shapes we want to use as a model now.\n     */\n    updateModel({ commit, rootGetters }, model) {\n      commit(\"setModel\", { model, getters: rootGetters });\n    },\n\n    /**\n     * Validate the interal model.\n     * @param rootState\n     */\n    validateWithCurrentModel({ rootState }) {\n      this.commit(\"validateWithModel\", rootState.mShape.model);\n    },\n\n    /**\n     * Export the internal model to a file.\n     * FIXME the default is SHACL for now\n     * @param rootState\n     * @param rootGetters\n     * @param {string} filename the name of the exported file.\n     * @param {string} extension the extension of the exported file.\n     */\n    exportFileWithName({ rootGetters }, { filename, extension }) {\n      if (extension === \"json\") {\n        /* If the file is in JSON, export the model directly. */\n        downloadFile(\n          filename,\n          JSON.stringify(rootGetters.internalModelToJson, null, 2)\n        );\n      } else if (extension === \"nt\") {\n        /* Otherwise, serialize to (n-triples) Turtle first. */\n        SerializerManager.serialize(\n          ShaclTranslator.toSHACL(rootGetters.shapes),\n          ETF.ttl\n        ).then(e => {\n          downloadFile(filename, e);\n        });\n      } else {\n        console.err(`Extension ${extension} not supported.`);\n      }\n    },\n\n    /**\n     * Update the data file to the given data text.\n     * If the given text is not valid JSON, this wil print an error.\n     * @param state\n     * @param commit\n     * @param {string} dataText the text we want to use as data.\n     */\n    updateData({ commit }, { dataText }) {\n      try {\n        JSON.parse(dataText); /* Try parsing the text first. */\n        /* Call mutation if the parsing was successful. */\n        commit(\"setJsonData\", { text: dataText });\n      } catch (e) {\n        console.err(\"Entered data is no valid JSON.\");\n      }\n    }\n  },\n\n  getters: {\n    /**\n     * Get the validation report.\n     * @param state\n     * @returns {string} the validation report as a string.\n     */\n    validationReport: state => {\n      return state.ValidationReport;\n    }\n  }\n};\n\nexport { dataModule as default };\n","import Vue from \"vue\";\n\n/**\n * This module contains all the state data related to the namespace modal.\n * @type {{mutations: {toggleNamespaceModal(*=, boolean=): void, clearTableEdit(*=): void, startEditingNamespace(*=, {editRow: string, editField: string}): void}, state: {editField: string, editRow: string, show: boolean}, actions: {addNewPrefix({commit: *}, {prefix: string, uri: string}): void}}}\n */\nconst namespaceModalModule = {\n  state: {\n    show: false,\n    editRow: \"\",\n    editField: \"\"\n  },\n  mutations: {\n    /**\n     * Toggle the visibility of the namespace modal.\n     * @param state\n     * @param {boolean} bool indicates if the modal should be shown.\n     */\n    toggleNamespaceModal(state, bool = true) {\n      event.preventDefault();\n      Vue.set(state, \"show\", bool);\n    },\n\n    /**\n     * Start editing the given row and field.\n     * @param state\n     * @param {string} editRow the prefix of the row we want to edit.\n     * @param {string} editField the field we want to edit; either 'prefix' or 'uri'\n     */\n    startEditingNamespace(state, { editRow, editField }) {\n      Vue.set(state, \"editRow\", editRow);\n      Vue.set(state, \"editField\", editField);\n    },\n\n    /**\n     * Clear the edit fields for the namespace modal.\n     * @param state\n     */\n    clearTableEdit(state) {\n      Vue.set(state, \"editRow\", \"\");\n      Vue.set(state, \"editField\", \"\");\n    }\n  },\n\n  actions: {\n    /**\n     * Add a new entry with the given prefix and URI.\n     * @param commit\n     * @param {string} prefix the prefix of the new entry.\n     * @param {string} uri the URI of the new entry.\n     */\n    addNewPrefix({ commit }, { prefix, uri }) {\n      commit(\"addPrefix\", { prefix, uri });\n    }\n  }\n};\n\nexport { namespaceModalModule as default };\n","import Vue from \"vue\";\nimport { swapKeyValue } from \"../util\";\nimport namespaceModalModule from \"./modals/namespaceModalModule\";\nimport { DEFAULT_BASE_URI, IDENTIFIER, SHACL_URI } from \"../util/constants\";\n\n/**\n * This module contains everything related to the configuration of the application.\n * For now, this is mainly the namespaces.\n * @type {{mutations: {setBaseUri(*=, {uri: string, prefix: string}): void, updateNamespacePrefix(*, {oldPrefix: string, newPrefix: string}): void, updateNamespaceURI(*, {prefix: string, newURI: string}): void, deletePrefix(*, {prefix: string}): void, addPrefix(*, {prefix: string, uri: string}): void}, state: {baseURI: *, namespaces: {schema: string, usd: *, xsd: string, skos: string, tourism: string, rdfs: string, shacl: *, muto: string, ost: string, oslo: string, combust: string, regorg: string, dcterms: string, oh: string, tio: string, locn: string, prov: string, foaf: string, csvw: string, acco: string, \"dbpedia-owl\": string, adms: string, org: string, vcard: string, gr: string, ex: string, rdf: string, person: string, time: string}}, getters: {uriByPrefix: (function(*): function(*): *), baseURI: (function(*): *), prefixByURI: (function(*): function(*): *), namespaces(*): {}}, actions: {stopEditingNamespace({state: *, commit: *, getters: *}, {input: string}): void}, modules: {mModal: *}}}\n */\nconst configModule = {\n  state: {\n    namespaces: {\n      usd: `${DEFAULT_BASE_URI}${IDENTIFIER}/`,\n      shacl: SHACL_URI,\n      rdf: \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n      rdfs: \"http://www.w3.org/2000/01/rdf-schema#\",\n      schema: \"http://schema.org/\",\n      foaf: \"http://xmlns.com/foaf/0.1/\",\n      xsd: \"http://www.w3.org/2001/XMLSchema#\",\n      ex: \"http://www.example.com/\",\n      skos: \"http://www.w3.org/2004/02/skos/core#\",\n      ost: \"http://w3id.org/ost/ns#\",\n      org: \"http://www.w3.org/ns/org#\",\n      regorg: \"http://www.w3.org/ns/regorg#\",\n      person: \"http://www.w3.org/ns/person#\",\n      locn: \"http://www.w3.org/ns/locn#\",\n      dcterms: \"http://purl.org/dc/terms/\",\n      vcard: \"http://www.w3.org/2006/vcard/ns#\",\n      adms: \"http://www.w3.org/ns/adms#\",\n      time: \"http://www.w3.org/2006/time#\",\n      prov: \"http://www.w3.org/ns/prov#\",\n      csvw: \"http://www.w3.org/ns/csvw#\",\n      gr: \"http://purl.org/goodrelations/v1#\",\n      muto: \"http://purl.org/muto/core#\",\n      acco: \"http://purl.org/acco/ns#\",\n      oslo: \"http://purl.org/oslo/ns/localgov/\",\n      tio: \"http://purl.org/tio/ns#\",\n      tourism: \"http://lddemo.mmlab.be/tourism/\",\n      oh: \"http://semweb.mmlab.be/ns/oh#\",\n      combust: \"http://combust.iminds.be/\",\n      \"dbpedia-owl\": \"http://dbpedia.org/ontology/\"\n    },\n    baseURI: `${DEFAULT_BASE_URI}${IDENTIFIER}/`\n  },\n  modules: {\n    mModal: namespaceModalModule\n  },\n\n  mutations: {\n    /**\n     * Update the given prefix in the namespaces config.\n     * @param state\n     * @param {string} oldPrefix the original prefix.\n     * @param {string} newPrefix the new prefix we want to use for this namespace.\n     */\n    updateNamespacePrefix(state, { oldPrefix, newPrefix }) {\n      const uri = state.namespaces[oldPrefix];\n      Vue.delete(state.namespaces, oldPrefix);\n      Vue.set(state.namespaces, newPrefix, uri);\n    },\n\n    /**\n     * Update the URI of the given prefix in the namespaces config.\n     * @param state\n     * @param {string} prefix the prefix of the namespace we want to update.\n     * @param {string} newURI the new URI for this namespace.\n     */\n    updateNamespaceURI(state, { prefix, newURI }) {\n      Vue.set(state.namespaces, prefix, newURI);\n    },\n\n    /**\n     * Add the given prefix to the namespaces.\n     * @param state\n     * @param {string} prefix the prefix of the namespace we want to add.\n     * @param {string} uri the URI of the namespace we want to add.\n     */\n    addPrefix(state, { prefix, uri }) {\n      Vue.set(state.namespaces, prefix, uri);\n    },\n\n    /**\n     * Delete the given prefix from the namespaces.\n     * @param state\n     * @param {string} prefix the prefix of the namespace we want to delete.\n     */\n    deletePrefix(state, { prefix }) {\n      Vue.delete(state.namespaces, prefix);\n    },\n\n    /**\n     * Set the current base URI to the given URI (if given) or to the URI corresponding to the given prefix.\n     * If the current base URI is identical to the given URI, then clear the base URI.\n     * @param state\n     * @param {string} uri the URI of the namespace we want to set as base.\n     * @param {string} prefix the prefix of the namespace we want to set as base.\n     */\n    setBaseUri(state, { uri, prefix }) {\n      if (uri === \"\") {\n        Vue.set(state, \"baseURI\", \"\");\n      } else {\n        if (prefix) uri = state.namespaces[prefix];\n        Vue.set(state, \"baseURI\", uri);\n      }\n    }\n  },\n\n  actions: {\n    /**\n     * Stop editing the namespaces.\n     * Get the entered value and update the namespaces.\n     * @param state\n     * @param commit\n     * @param getters\n     * @param {string} input the value entered by the user.\n     */\n    stopEditingNamespace({ state, commit, getters }, { input }) {\n      const { editRow, editField } = state.mModal;\n      console.log(editRow, input);\n      /* Only execute the update if the value has actually changed. */\n      if (editField === \"prefix\" && editRow !== input) {\n        // Update the given prefix.\n        commit(\"updateNamespacePrefix\", {\n          oldPrefix: editRow,\n          newPrefix: input\n        });\n      } else if (editField === \"uri\" && state.namespaces[editRow] !== input) {\n        // Update the given URI.\n        console.log(editRow, getters.uriByPrefix(state.baseURI));\n        if (editRow === getters.uriByPrefix(state.baseURI))\n          commit(\"setBaseUri\", { uri: input });\n        commit(\"updateNamespaceURI\", { prefix: editRow, newURI: input });\n      }\n      commit(\"clearTableEdit\"); /* Stop editing and clear the table. */\n    }\n  },\n\n  getters: {\n    /**\n     * Get the current namespaces.\n     * @returns {object} an ordered dictionary mapping of the prefixes to their URIs.\n     */\n    namespaces(state) {\n      const ordered = {};\n      Object.keys(state.namespaces)\n        .sort()\n        .forEach(key => {\n          ordered[key] = state.namespaces[key];\n        });\n      return ordered;\n    },\n\n    /**\n     * Get the URI of the given prefix.\n     * Prefix {string} the prefix of the namespace we want to get the URI from.\n     * @param state\n     * @returns {function} getter\n     */\n    prefixByURI: state => prefix => {\n      return state.namespaces[prefix];\n    },\n\n    /**\n     * Get the prefix of the given URI.\n     * URI {string} the URI of the namespace we want to get the prefix from.\n     * @param state\n     * @returns {function} getter\n     */\n    uriByPrefix: state => uri => {\n      return swapKeyValue(state.namespaces)[uri];\n    },\n\n    /**\n     * Get the current base URI.\n     * @param state\n     * @returns {string} the current base URI.\n     */\n    baseURI: state => {\n      return state.baseURI;\n    }\n  }\n};\n\nexport { configModule as default };\n","const exampleData =\n  `${String(\n    `${String(\n      \"@prefix ex: <http://example.org/ns#> .\" +\n        \"@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\" +\n        \"@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\" +\n        \"@prefix schema: <http://schema.org/> .\" +\n        \"@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\"\n    )}ex:Bob` +\n      `    a schema:Person ;` +\n      `    schema:givenName \"Robert\" ;` +\n      `    schema:familyName \"Junior\" ;` +\n      `    schema:birthDate \"1971-07-07\"^^xsd:date ;` +\n      `    schema:deathDate \"1968-09-10\"^^xsd:date ;` +\n      `    schema:address ex:BobsAddress .`\n  )}ex:BobsAddress` +\n  `    schema:streetAddress \"1600 Amphitheatre Pkway\" ;` +\n  `    schema:postalCode 9404 .`;\n\nconst exampleShapes =\n  `${String(\n    `${String(\n      \"@prefix dash: <http://datashapes.org/dash#> .\" +\n        \"@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\" +\n        \"@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\" +\n        \"@prefix schema: <http://schema.org/> .\" +\n        \"@prefix sh: <http://www.w3.org/ns/shacl#> .\" +\n        \"@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\"\n    )}schema:PersonShape` +\n      `    a sh:NodeShape ;` +\n      `    sh:targetClass schema:Person ;` +\n      `    sh:property [` +\n      `        sh:path schema:givenName ;` +\n      `        sh:datatype xsd:string ;` +\n      `        sh:name \"given name\" ;` +\n      `    ] ;` +\n      `    sh:property [` +\n      `        sh:path schema:birthDate ;` +\n      `        sh:lessThan schema:deathDate ;` +\n      `        sh:maxCount 1 ;` +\n      `    ] ;` +\n      `    sh:property [` +\n      `        sh:path schema:gender ;` +\n      `        sh:in ( \"female\" \"male\" ) ;` +\n      `    ] ;` +\n      `    sh:property [` +\n      `        sh:path schema:address ;` +\n      `        sh:node schema:AddressShape ;` +\n      `    ] .`\n  )}schema:AddressShape` +\n  `    a sh:NodeShape ;` +\n  `    sh:closed true ;` +\n  `    sh:property [` +\n  `        sh:path schema:streetAddress ;` +\n  `        sh:datatype xsd:string ;` +\n  `    ] ;` +\n  `    sh:property [` +\n  `        sh:path schema:postalCode ;` +\n  `        sh:or ( [ sh:datatype xsd:string ] [ sh:datatype xsd:integer ] ) ;` +\n  `        sh:minInclusive 10000 ;` +\n  `        sh:maxInclusive 99999 ;` +\n  `    ] .`;\n\nconst exampleShapesJSON =\n  \"[\\n\" +\n  \"  {\\n\" +\n  '    \"@id\": \"_:b0\",\\n' +\n  '    \"http://www.w3.org/ns/shacl#path\": [\\n' +\n  \"      {\\n\" +\n  '        \"@id\": \"http://schema.org/givenName\"\\n' +\n  \"      }\\n\" +\n  \"    ],\\n\" +\n  '    \"http://www.w3.org/ns/shacl#datatype\": [\\n' +\n  \"      {\\n\" +\n  '        \"@id\": \"http://www.w3.org/2001/XMLSchema#string\"\\n' +\n  \"      }\\n\" +\n  \"    ],\\n\" +\n  '    \"http://www.w3.org/ns/shacl#name\": [\\n' +\n  \"      {\\n\" +\n  '        \"@value\": \"given name\",\\n' +\n  '        \"@language\": \"en\"\\n' +\n  \"      }\\n\" +\n  \"    ]\\n\" +\n  \"  },\\n\" +\n  \"  {\\n\" +\n  '    \"@id\": \"_:b1\",\\n' +\n  '    \"http://www.w3.org/ns/shacl#path\": [\\n' +\n  \"      {\\n\" +\n  '        \"@id\": \"http://schema.org/birthDate\"\\n' +\n  \"      }\\n\" +\n  \"    ],\\n\" +\n  '    \"http://www.w3.org/ns/shacl#lessThan\": [\\n' +\n  \"      {\\n\" +\n  '        \"@id\": \"http://schema.org/deathDate\"\\n' +\n  \"      }\\n\" +\n  \"    ],\\n\" +\n  '    \"http://www.w3.org/ns/shacl#maxCount\": [\\n' +\n  \"      {\\n\" +\n  '        \"@value\": \"1\",\\n' +\n  '        \"@type\": \"http://www.w3.org/2001/XMLSchema#integer\"\\n' +\n  \"      }\\n\" +\n  \"    ]\\n\" +\n  \"  },\\n\" +\n  \"  {\\n\" +\n  '    \"@id\": \"_:b11\",\\n' +\n  '    \"http://www.w3.org/ns/shacl#datatype\": [\\n' +\n  \"      {\\n\" +\n  '        \"@id\": \"http://www.w3.org/2001/XMLSchema#integer\"\\n' +\n  \"      }\\n\" +\n  \"    ]\\n\" +\n  \"  },\\n\" +\n  \"  {\\n\" +\n  '    \"@id\": \"_:b2\",\\n' +\n  '    \"http://www.w3.org/ns/shacl#path\": [\\n' +\n  \"      {\\n\" +\n  '        \"@id\": \"http://schema.org/gender\"\\n' +\n  \"      }\\n\" +\n  \"    ],\\n\" +\n  '    \"http://www.w3.org/ns/shacl#in\": [\\n' +\n  \"      {\\n\" +\n  '        \"@list\": [\\n' +\n  \"          {\\n\" +\n  '            \"@value\": \"female\"\\n' +\n  \"          },\\n\" +\n  \"          {\\n\" +\n  '            \"@value\": \"male\"\\n' +\n  \"          }\\n\" +\n  \"        ]\\n\" +\n  \"      }\\n\" +\n  \"    ]\\n\" +\n  \"  },\\n\" +\n  \"  {\\n\" +\n  '    \"@id\": \"_:b5\",\\n' +\n  '    \"http://www.w3.org/ns/shacl#path\": [\\n' +\n  \"      {\\n\" +\n  '        \"@id\": \"http://schema.org/address\"\\n' +\n  \"      }\\n\" +\n  \"    ],\\n\" +\n  '    \"http://www.w3.org/ns/shacl#node\": [\\n' +\n  \"      {\\n\" +\n  '        \"@id\": \"http://schema.org/AddressShape\"\\n' +\n  \"      }\\n\" +\n  \"    ]\\n\" +\n  \"  },\\n\" +\n  \"  {\\n\" +\n  '    \"@id\": \"_:b6\",\\n' +\n  '    \"http://www.w3.org/ns/shacl#path\": [\\n' +\n  \"      {\\n\" +\n  '        \"@id\": \"http://schema.org/streetAddress\"\\n' +\n  \"      }\\n\" +\n  \"    ],\\n\" +\n  '    \"http://www.w3.org/ns/shacl#datatype\": [\\n' +\n  \"      {\\n\" +\n  '        \"@id\": \"http://www.w3.org/2001/XMLSchema#string\"\\n' +\n  \"      }\\n\" +\n  \"    ]\\n\" +\n  \"  },\\n\" +\n  \"  {\\n\" +\n  '    \"@id\": \"_:b7\",\\n' +\n  '    \"http://www.w3.org/ns/shacl#path\": [\\n' +\n  \"      {\\n\" +\n  '        \"@id\": \"http://schema.org/postalCode\"\\n' +\n  \"      }\\n\" +\n  \"    ],\\n\" +\n  '    \"http://www.w3.org/ns/shacl#or\": [\\n' +\n  \"      {\\n\" +\n  '        \"@list\": [\\n' +\n  \"          {\\n\" +\n  '            \"@id\": \"_:b9\"\\n' +\n  \"          },\\n\" +\n  \"          {\\n\" +\n  '            \"@id\": \"_:b11\"\\n' +\n  \"          }\\n\" +\n  \"        ]\\n\" +\n  \"      }\\n\" +\n  \"    ],\\n\" +\n  '    \"http://www.w3.org/ns/shacl#minInclusive\": [\\n' +\n  \"      {\\n\" +\n  '        \"@value\": \"10000\",\\n' +\n  '        \"@type\": \"http://www.w3.org/2001/XMLSchema#integer\"\\n' +\n  \"      }\\n\" +\n  \"    ],\\n\" +\n  '    \"http://www.w3.org/ns/shacl#maxInclusive\": [\\n' +\n  \"      {\\n\" +\n  '        \"@value\": \"99999\",\\n' +\n  '        \"@type\": \"http://www.w3.org/2001/XMLSchema#integer\"\\n' +\n  \"      }\\n\" +\n  \"    ]\\n\" +\n  \"  },\\n\" +\n  \"  {\\n\" +\n  '    \"@id\": \"_:b9\",\\n' +\n  '    \"http://www.w3.org/ns/shacl#datatype\": [\\n' +\n  \"      {\\n\" +\n  '        \"@id\": \"http://www.w3.org/2001/XMLSchema#string\"\\n' +\n  \"      }\\n\" +\n  \"    ]\\n\" +\n  \"  },\\n\" +\n  \"  {\\n\" +\n  '    \"@id\": \"http://schema.org/AddressShape\",\\n' +\n  '    \"@type\": [\\n' +\n  '      \"http://www.w3.org/ns/shacl#NodeShape\"\\n' +\n  \"    ],\\n\" +\n  '    \"http://www.w3.org/ns/shacl#closed\": [\\n' +\n  \"      {\\n\" +\n  '        \"@value\": \"true\",\\n' +\n  '        \"@type\": \"http://www.w3.org/2001/XMLSchema#boolean\"\\n' +\n  \"      }\\n\" +\n  \"    ],\\n\" +\n  '    \"http://www.w3.org/ns/shacl#property\": [\\n' +\n  \"      {\\n\" +\n  '        \"@id\": \"_:b6\"\\n' +\n  \"      },\\n\" +\n  \"      {\\n\" +\n  '        \"@id\": \"_:b7\"\\n' +\n  \"      }\\n\" +\n  \"    ]\\n\" +\n  \"  },\\n\" +\n  \"  {\\n\" +\n  '    \"@id\": \"http://schema.org/PersonShape\",\\n' +\n  '    \"@type\": [\\n' +\n  '      \"http://www.w3.org/ns/shacl#NodeShape\"\\n' +\n  \"    ],\\n\" +\n  '    \"http://www.w3.org/ns/shacl#targetClass\": [\\n' +\n  \"      {\\n\" +\n  '        \"@id\": \"http://schema.org/Person\"\\n' +\n  \"      }\\n\" +\n  \"    ],\\n\" +\n  '    \"http://www.w3.org/ns/shacl#property\": [\\n' +\n  \"      {\\n\" +\n  '        \"@id\": \"_:b0\"\\n' +\n  \"      },\\n\" +\n  \"      {\\n\" +\n  '        \"@id\": \"_:b1\"\\n' +\n  \"      },\\n\" +\n  \"      {\\n\" +\n  '        \"@id\": \"_:b2\"\\n' +\n  \"      },\\n\" +\n  \"      {\\n\" +\n  '        \"@id\": \"_:b5\"\\n' +\n  \"      }\\n\" +\n  \"    ]\\n\" +\n  \"  }\\n\" +\n  \"]\";\n\nexport { exampleData, exampleShapes, exampleShapesJSON };\n","// Vue\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\n\n// Util\nimport { possiblePredicates, possibleObjects } from \"../util/shacl/vocabulary\";\n\n// Translation\nimport TranslatorManager from \"../translation/translatorManager\";\nimport ShaclTranslator from \"../translation/shaclTranslator\";\nimport { TERM } from \"../translation/terminology\";\n\n// Modules\nimport shapeModule from \"./shapeModule\";\nimport dataModule from \"./dataModule\";\nimport configModule from \"./configModule\";\nimport { exampleData, exampleShapes } from \"../assets/example\";\nimport ParserManager from \"../parsing/parserManager\";\nimport { ETF } from \"../util/enums/extensionToFormat\";\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    editor: null,\n    showClearModal: false,\n    showExportModal: false,\n    pathModal: {\n      show: false,\n      editing: false,\n      shapeID: \"\"\n    },\n    exportType: \"\"\n  },\n  modules: {\n    mShape: shapeModule,\n    mData: dataModule,\n    mConfig: configModule\n  },\n  mutations: {\n    /**\n     * Save the state and the executed mutations for use in the undo/redo functionality.\n     * This method does nothing on its own, but the payload is used to undo/redo the action.\n     */\n    saveOperation(_, { state, action }) {\n      console.log(\"[Saved]\", action.type);\n    },\n\n    /**\n     * Mutation that is called whenever an undo is executed.\n     * Components can subscribe to the store's mutations and react to this specific mutation.\n     * Using subscriptions instead of events since they're easier to work with regarding Vue components.\n     */\n    undo() {},\n\n    /**\n     * Save a reference to the editor.\n     * @param state\n     * @param {object} editor the editor object.\n     */\n    setEditor(state, editor) {\n      Vue.set(state, \"editor\", editor);\n    },\n\n    /**\n     * Helper mutation. Removes the element at the given index of the given list.\n     * @param state\n     * @param {array} list the list where the element should be removed.\n     * @param {number} index the index of the element that should be removed.\n     */\n    removeElementFromList(state, { list, index }) {\n      list.splice(index, 1);\n    },\n\n    /* MODALS ======================================================================================================= */\n\n    /**\n     * Toggle the visibility of the clear modal.\n     * @param state\n     */\n    toggleClearModal(state) {\n      event.preventDefault();\n      Vue.set(state, \"showClearModal\", !state.showClearModal);\n    },\n\n    /**\n     * Toggle the visibility of the path modal.\n     * @param state\n     * @param {boolean} editing indicates if we are editing the path; default: false.\n     * @param {string} shapeID the ID of the shape whose path we are editing; default: \"\".\n     */\n    togglePathModal(state, { editing, shapeID }) {\n      event.preventDefault();\n      const { show } = state.pathModal;\n      Vue.set(state.pathModal, \"editing\", editing || false);\n      Vue.set(state.pathModal, \"shapeID\", shapeID || \"\");\n      Vue.set(state.pathModal, \"show\", !show);\n    },\n\n    /**\n     * Toggle the visibility of the export modal.\n     * @param state\n     * @param {string} type the type of file we want to export.\n     */\n    toggleExportModal(state, type) {\n      event.preventDefault();\n      Vue.set(state, \"exportType\", type);\n      Vue.set(state, \"showExportModal\", !state.showExportModal);\n    }\n  },\n  actions: {\n    /**\n     * Load in some example data.\n     */\n    loadExample({ getters, commit, dispatch, rootState }) {\n      return new Promise((resolve, reject) => {\n        ParserManager.parse(exampleShapes, ETF[\"ttl\"]).then(model => {\n          commit(\"clearModel\");\n          commit(\"clearData\");\n\n          dispatch(\"setDataFile\", {\n            name: \"example.ttl\",\n            contents: exampleData,\n            extension: \"ttl\"\n          }).then(() => {\n            commit(\"setModel\", { model, getters });\n\n            if (rootState.mShape.model.length > 0) {\n              resolve(rootState);\n            } else {\n              reject(Error(\"Something went wrong.\"));\n            }\n          });\n        });\n      });\n    }\n  },\n  getters: {\n    /**\n     * Returns the internal model in SHACL, JSON format.\n     * @param state\n     * @returns {any} SHACL model in JSON\n     */\n    internalModelToJson: state => {\n      return ShaclTranslator.toSHACLSimple(state.mShape.model);\n    },\n\n    /**\n     * Returns the internal model in SHACL, Turtle format.\n     * @param state\n     * @returns {any} SHACL model, Turtle\n     */\n    internalModelToTurtle: state => {\n      return TranslatorManager.translateToLanguage(\n        ShaclTranslator.toSHACLSimple(state.mShape.model),\n        state.format\n      );\n    },\n\n    /**\n     * Get the possible predicates for the given value type.\n     * Type {string} the given value type.\n     * @returns {function} getter\n     */\n    predicates: () => type => {\n      return possiblePredicates(TERM[type]);\n    },\n\n    /**\n     * Get the possible object for the currently set predicate.\n     * Predicate {string} the currently set predicate.\n     * @returns {function} getter\n     */\n    objects: () => predicate => {\n      return possibleObjects(predicate);\n    }\n  }\n});\n","import language from \"./enums/languages\";\nimport { DEFAULT_BASE_URI, IDENTIFIER, SHACL_URI } from \"./constants\";\n\nconst emptyState = {\n  editor: null,\n  showClearModal: false,\n  showExportModal: false,\n  pathModal: {\n    show: false,\n    editing: false,\n    shapeID: \"\"\n  },\n  exportType: \"\",\n\n  mData: {\n    format: language.SHACL,\n    dataFile: {},\n    dataFileName: String,\n    dataFileExtension: String,\n    dataText: \"\",\n    validationReport: {},\n    showValidationReportModal: false\n  },\n\n  mConfig: {\n    namespaces: {\n      usd: `${DEFAULT_BASE_URI}${IDENTIFIER}/`,\n      shacl: SHACL_URI,\n      rdf: \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n      rdfs: \"http://www.w3.org/2000/01/rdf-schema#\",\n      schema: \"http://schema.org/\",\n      foaf: \"http://xmlns.com/foaf/0.1/\",\n      xsd: \"http://www.w3.org/2001/XMLSchema#\",\n      ex: \"http://www.example.com/\",\n      skos: \"http://www.w3.org/2004/02/skos/core#\",\n      ost: \"http://w3id.org/ost/ns#\",\n      org: \"http://www.w3.org/ns/org#\",\n      regorg: \"http://www.w3.org/ns/regorg#\",\n      person: \"http://www.w3.org/ns/person#\",\n      locn: \"http://www.w3.org/ns/locn#\",\n      dcterms: \"http://purl.org/dc/terms/\",\n      vcard: \"http://www.w3.org/2006/vcard/ns#\",\n      adms: \"http://www.w3.org/ns/adms#\",\n      time: \"http://www.w3.org/2006/time#\",\n      prov: \"http://www.w3.org/ns/prov#\",\n      csvw: \"http://www.w3.org/ns/csvw#\",\n      gr: \"http://purl.org/goodrelations/v1#\",\n      muto: \"http://purl.org/muto/core#\",\n      acco: \"http://purl.org/acco/ns#\",\n      oslo: \"http://purl.org/oslo/ns/localgov/\",\n      tio: \"http://purl.org/tio/ns#\",\n      tourism: \"http://lddemo.mmlab.be/tourism/\",\n      oh: \"http://semweb.mmlab.be/ns/oh#\",\n      combust: \"http://combust.iminds.be/\",\n      \"dbpedia-owl\": \"http://dbpedia.org/ontology/\"\n    },\n    baseURI: `${DEFAULT_BASE_URI}${IDENTIFIER}/`,\n    mModal: {\n      show: false,\n      editRow: \"\",\n      editField: \"\"\n    }\n  },\n\n  mShape: {\n    model: [],\n    shapeModal: {\n      show: false,\n      id: \"\",\n      label: \"\",\n      labelLang: \"em\",\n      description: \"\",\n      descrLang: \"en\",\n      nodeShape: false\n    },\n    mConstraint: {\n      constraintIndex: 0,\n      mModal: {\n        show: false,\n        shapeID: \"\",\n        shapeType: \"\",\n        input: \"\",\n        object: \"\",\n        editing: false,\n        onExit: undefined,\n        selected: \"\",\n        sorting: {\n          sorted: true,\n          sortBy: \"predicate\",\n          ascending: true\n        }\n      }\n    },\n    mCoordinate: {\n      yValues: {},\n      coordinates: {},\n      heights: {}\n    }\n  }\n};\n\nexport { emptyState as default };\n","// Based on https://github.com/anthonygore/vuex-undo-redo/blob/master/src/plugin.js\n\nimport emptyState from \"../util/emptyState\";\nimport { MAX_NUM_OPERATIONS } from \"../util/constants\";\n\nconst undoRedoMixin = {\n  /**\n   * `done`: list of operations that have been executed. Contains 100 operations.\n   * `undone`: list of operations that have been undone.\n   * `newOperation`: indicates if the next operation is a new one.\n   * @returns {{newOperation: boolean, done: [], undone: []}}\n   */\n  data() {\n    return {\n      done: [],\n      undone: [],\n      newOperation: false\n    };\n  },\n  created() {\n    /* Bind its methods. */\n    this.undo = this.undo.bind(this);\n    this.redo = this.redo.bind(this);\n    this.canUndo = this.canUndo.bind(this);\n    this.canRedo = this.canRedo.bind(this);\n\n    /* Listen to mutations. */\n    this.$store.subscribe(mutation => {\n      if (mutation.type === \"saveOperation\") {\n        /* Only for `saveOperation` mutations, the payload will be added to the list of operations. */\n        this.done.push(JSON.parse(JSON.stringify(mutation.payload)));\n        const ops = this.done.length;\n        if (ops > MAX_NUM_OPERATIONS) {\n          /* Limit the number of undoable operations. */\n          this.done = this.done.slice(ops - MAX_NUM_OPERATIONS);\n        }\n      }\n      if (\n        this.newOperation &&\n        ![\"updateYValues\", \"updateCoordinates\", \"undo\"].includes(mutation.type) // Moving a shape won't trigger this.\n      ) {\n        /* Clear the list of operations that have been undone. */\n        this.undone = [];\n      }\n    });\n  },\n  methods: {\n    /**\n     * Indicates if there are any operations that can be undone.\n     * @returns {boolean}\n     */\n    canUndo() {\n      return this.done.length > 0;\n    },\n    /**\n     * Indicates if there are any operations that can be redone.\n     * @returns {boolean}\n     */\n    canRedo() {\n      return this.undone.length > 0;\n    },\n\n    /**\n     * Undo the most recent operation.\n     */\n    undo() {\n      if (this.canUndo()) {\n        const operation = this.done.pop();\n        this.undone.push(operation); // Add this operation to the list of operations that have been undone.\n        this.newOperation = false;\n\n        /* Determine the new state. */\n        const n = this.done.length;\n        let newState = emptyState;\n        if (n > 0) newState = this.done[this.done.length - 1].state;\n\n        /* Parse the stringified version to create a new object. */\n        this.$store.replaceState(JSON.parse(JSON.stringify(newState)));\n        this.newOperation = true;\n        this.$store.commit(\"undo\"); // Event\n      }\n    },\n\n    /**\n     * Redo the last operation that has been undone.\n     */\n    redo() {\n      if (this.canRedo()) {\n        const operation = this.undone.pop();\n        this.newOperation = false;\n        this.$store.replaceState(JSON.parse(JSON.stringify(operation.state)));\n        this.done.push(operation); // Add this operation to the list of operations that have been done.\n        this.newOperation = true;\n      }\n    }\n  }\n};\n\nexport { undoRedoMixin as default };\n","import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport SuiVue from \"semantic-ui-vue\";\nimport VueKonva from \"vue-konva\";\nimport PortalVue from \"portal-vue\";\n\nimport App from \"./App.vue\";\nimport store from \"./store/store\";\nimport undoRedoMixin from \"./store/undoRedoMixin\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nVue.config.productionTip = false;\nVue.use(SuiVue);\nVue.use(VueKonva);\nVue.use(Vuex);\nVue.use(PortalVue);\n\nnew Vue({\n  store,\n  mixins: [undoRedoMixin],\n  render: h => h(App)\n}).$mount(\"#app\");\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NamespaceTable.vue?vue&type=style&index=0&id=a28eba1c&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NamespaceTable.vue?vue&type=style&index=0&id=a28eba1c&scoped=true&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DataTextView.vue?vue&type=style&index=0&id=cab1047c&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DataTextView.vue?vue&type=style&index=0&id=cab1047c&scoped=true&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NavBar.vue?vue&type=style&index=0&id=06370f3e&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NavBar.vue?vue&type=style&index=0&id=06370f3e&scoped=true&lang=css&\""],"sourceRoot":""}